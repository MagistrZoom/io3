	.file	"../lab1/src/Timer.cpp"
	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init,@function
__cxx_global_var_init:                  # @__cxx_global_var_init
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2:
	.cfi_def_cfa_offset 16
.Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZStL8__ioinit, %rdi
	callq	_ZNSt8ios_base4InitC1Ev
	leaq	_ZNSt8ios_base4InitD1Ev, %rdi
	leaq	_ZStL8__ioinit, %rax
	leaq	__dso_handle, %rdx
	movq	%rax, %rsi
	callq	__cxa_atexit
	movl	%eax, -4(%rbp)          # 4-byte Spill
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp5:
	.size	__cxx_global_var_init, .Ltmp5-__cxx_global_var_init
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,"axG",@progbits,_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,comdat
	.weak	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,@function
_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi: # @_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movl	%edx, -20(%rsp)
	ret
.Ltmp6:
	.size	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi, .Ltmp6-_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.cfi_endproc

	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init1,@function
__cxx_global_var_init1:                 # @__cxx_global_var_init1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp9:
	.cfi_def_cfa_offset 16
.Ltmp10:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp11:
	.cfi_def_cfa_register %rbp
	leaq	_ZN7sc_coreL17api_version_checkE, %rdi
	callq	_ZN7sc_core20sc_api_version_2_3_0C1Ev
	popq	%rbp
	ret
.Ltmp12:
	.size	__cxx_global_var_init1, .Ltmp12-__cxx_global_var_init1
	.cfi_endproc

	.text
	.globl	_ZN5TimerC2EN7sc_core14sc_module_nameE
	.align	16, 0x90
	.type	_ZN5TimerC2EN7sc_core14sc_module_nameE,@function
_ZN5TimerC2EN7sc_core14sc_module_nameE: # @_ZN5TimerC2EN7sc_core14sc_module_nameE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin3:
	.cfi_lsda 3, .Lexception3
# BB#0:
	pushq	%rbp
.Ltmp109:
	.cfi_def_cfa_offset 16
.Ltmp110:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp111:
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	movq	%rdi, -8(%rbp)
	movq	%rdi, -80(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core9sc_moduleC2ERKNS_14sc_module_nameE
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTV5Timer+16, (%rsi)
	movq	$_ZTV5Timer+176, 88(%rsi)
	addq	$208, %rsi
	movq	-80(%rbp), %rdi         # 8-byte Reload
.Ltmp13:
	movl	$.L.str, %eax
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core5sc_inIbEC1EPKc
.Ltmp14:
	jmp	.LBB3_1
.LBB3_1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$368, %rax              # imm = 0x170
.Ltmp16:
	movl	$.L.str2, %esi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core5sc_inIbEC1EPKc
.Ltmp17:
	jmp	.LBB3_2
.LBB3_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$528, %rax              # imm = 0x210
.Ltmp19:
	movl	$.L.str3, %esi
	movq	%rax, %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core5sc_inIbEC1EPKc
.Ltmp20:
	jmp	.LBB3_3
.LBB3_3:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$688, %rax              # imm = 0x2B0
.Ltmp22:
	movl	$.L.str4, %esi
	movq	%rax, %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc
.Ltmp23:
	jmp	.LBB3_4
.LBB3_4:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$832, %rax              # imm = 0x340
.Ltmp25:
	movl	$.L.str5, %esi
	movq	%rax, %rdi
	movq	%rax, -128(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core5sc_inIiEC1EPKc
.Ltmp26:
	jmp	.LBB3_5
.LBB3_5:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$976, %rax              # imm = 0x3D0
.Ltmp28:
	movl	$.L.str6, %esi
	movq	%rax, %rdi
	movq	%rax, -136(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc
.Ltmp29:
	jmp	.LBB3_6
.LBB3_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1120, %rax             # imm = 0x460
.Ltmp31:
	movl	$.L.str7, %esi
	movq	%rax, %rdi
	movq	%rax, -144(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core6sc_outItEC1EPKc
.Ltmp32:
	jmp	.LBB3_7
.LBB3_7:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1272, %rax             # imm = 0x4F8
.Ltmp34:
	movq	%rax, %rdi
	movq	%rax, -152(%rbp)        # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EEC1Ev
.Ltmp35:
	jmp	.LBB3_8
.LBB3_8:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
.Ltmp37:
	movq	%rax, %rdi
	movq	%rax, -160(%rbp)        # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EEC1Ev
.Ltmp38:
	jmp	.LBB3_9
.LBB3_9:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1320, %rax             # imm = 0x528
.Ltmp40:
	movq	%rax, %rdi
	movq	%rax, -168(%rbp)        # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EEC1Ev
.Ltmp41:
	jmp	.LBB3_10
.LBB3_10:
.Ltmp43:
	callq	_ZN7sc_core22sc_get_curr_simcontextEv
.Ltmp44:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB3_11
.LBB3_11:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$88, %rax
	movq	$-88, -40(%rbp)
	movq	$_ZN5Timer8on_clockEv, -48(%rbp)
	movq	-48(%rbp), %r8
	movq	-40(%rbp), %r9
.Ltmp45:
	movq	%rsp, %rcx
	movq	%rax, (%rcx)
	movq	$0, 8(%rcx)
	leaq	-32(%rbp), %rdi
	xorl	%ecx, %ecx
	movl	$.L.str8, %edx
	movq	-176(%rbp), %rsi        # 8-byte Reload
	callq	_ZN7sc_core13sc_simcontext21create_method_processEPKcbMNS_15sc_process_hostEFvvEPS3_PKNS_16sc_spawn_optionsE
.Ltmp46:
	jmp	.LBB3_12
.LBB3_12:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rax
.Ltmp47:
	leaq	-56(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	movq	%rax, -184(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core17sc_process_handleC1ERKS0_
.Ltmp48:
	jmp	.LBB3_13
.LBB3_13:
.Ltmp49:
	leaq	-56(%rbp), %rsi
	movq	-184(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core12sc_sensitivelsENS_17sc_process_handleE
.Ltmp50:
	movq	%rax, -192(%rbp)        # 8-byte Spill
	jmp	.LBB3_14
.LBB3_14:
.Ltmp54:
	leaq	-56(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp55:
	jmp	.LBB3_15
.LBB3_15:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$120, %rax
.Ltmp56:
	leaq	-64(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	movq	%rax, -200(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core17sc_process_handleC1ERKS0_
.Ltmp57:
	jmp	.LBB3_16
.LBB3_16:
.Ltmp58:
	leaq	-64(%rbp), %rsi
	movq	-200(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core16sc_sensitive_poslsENS_17sc_process_handleE
.Ltmp59:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB3_17
.LBB3_17:
.Ltmp63:
	leaq	-64(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp64:
	jmp	.LBB3_18
.LBB3_18:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$144, %rax
.Ltmp65:
	leaq	-72(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	movq	%rax, -216(%rbp)        # 8-byte Spill
	callq	_ZN7sc_core17sc_process_handleC1ERKS0_
.Ltmp66:
	jmp	.LBB3_19
.LBB3_19:
.Ltmp67:
	leaq	-72(%rbp), %rsi
	movq	-216(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core16sc_sensitive_neglsENS_17sc_process_handleE
.Ltmp68:
	movq	%rax, -224(%rbp)        # 8-byte Spill
	jmp	.LBB3_20
.LBB3_20:
.Ltmp72:
	leaq	-72(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp73:
	jmp	.LBB3_21
.LBB3_21:
.Ltmp77:
	leaq	-32(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp78:
	jmp	.LBB3_22
.LBB3_22:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	addq	$208, %rcx
.Ltmp79:
	movq	%rcx, %rdi
	movq	%rax, -232(%rbp)        # 8-byte Spill
	callq	_ZNK7sc_core5sc_inIbE3posEv
.Ltmp80:
	movq	%rax, -240(%rbp)        # 8-byte Spill
	jmp	.LBB3_23
.LBB3_23:
.Ltmp81:
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	callq	_ZN7sc_core12sc_sensitivelsERNS_15sc_event_finderE
.Ltmp82:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB3_24
.LBB3_24:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	ret
.LBB3_25:
.Ltmp15:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_65
.LBB3_26:
.Ltmp18:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_63
.LBB3_27:
.Ltmp21:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_61
.LBB3_28:
.Ltmp24:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_59
.LBB3_29:
.Ltmp27:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_57
.LBB3_30:
.Ltmp30:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_55
.LBB3_31:
.Ltmp33:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_53
.LBB3_32:
.Ltmp36:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_51
.LBB3_33:
.Ltmp39:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_49
.LBB3_34:
.Ltmp42:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_47
.LBB3_35:
.Ltmp83:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_45
.LBB3_36:
.Ltmp74:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB3_43
.LBB3_37:
.Ltmp51:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp52:
	leaq	-56(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp53:
	jmp	.LBB3_38
.LBB3_38:
	jmp	.LBB3_43
.LBB3_39:
.Ltmp60:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp61:
	leaq	-64(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp62:
	jmp	.LBB3_40
.LBB3_40:
	jmp	.LBB3_43
.LBB3_41:
.Ltmp69:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp70:
	leaq	-72(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp71:
	jmp	.LBB3_42
.LBB3_42:
	jmp	.LBB3_43
.LBB3_43:
.Ltmp75:
	leaq	-32(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD1Ev
.Ltmp76:
	jmp	.LBB3_44
.LBB3_44:
	jmp	.LBB3_45
.LBB3_45:
.Ltmp84:
	movq	-168(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp85:
	jmp	.LBB3_46
.LBB3_46:
	jmp	.LBB3_47
.LBB3_47:
.Ltmp86:
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp87:
	jmp	.LBB3_48
.LBB3_48:
	jmp	.LBB3_49
.LBB3_49:
.Ltmp88:
	movq	-152(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp89:
	jmp	.LBB3_50
.LBB3_50:
	jmp	.LBB3_51
.LBB3_51:
.Ltmp90:
	movq	-144(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core6sc_outItED1Ev
.Ltmp91:
	jmp	.LBB3_52
.LBB3_52:
	jmp	.LBB3_53
.LBB3_53:
.Ltmp92:
	movq	-136(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
.Ltmp93:
	jmp	.LBB3_54
.LBB3_54:
	jmp	.LBB3_55
.LBB3_55:
.Ltmp94:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core5sc_inIiED1Ev
.Ltmp95:
	jmp	.LBB3_56
.LBB3_56:
	jmp	.LBB3_57
.LBB3_57:
.Ltmp96:
	movq	-120(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
.Ltmp97:
	jmp	.LBB3_58
.LBB3_58:
	jmp	.LBB3_59
.LBB3_59:
.Ltmp98:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp99:
	jmp	.LBB3_60
.LBB3_60:
	jmp	.LBB3_61
.LBB3_61:
.Ltmp100:
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp101:
	jmp	.LBB3_62
.LBB3_62:
	jmp	.LBB3_63
.LBB3_63:
.Ltmp102:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp103:
	jmp	.LBB3_64
.LBB3_64:
	jmp	.LBB3_65
.LBB3_65:
.Ltmp104:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core9sc_moduleD2Ev
.Ltmp105:
	jmp	.LBB3_66
.LBB3_66:
	jmp	.LBB3_67
.LBB3_67:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB3_68:
.Ltmp106:
	movq	%rax, -256(%rbp)        # 8-byte Spill
	movq	%rdx, -264(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp112:
	.size	_ZN5TimerC2EN7sc_core14sc_module_nameE, .Ltmp112-_ZN5TimerC2EN7sc_core14sc_module_nameE
	.cfi_endproc
.Leh_func_end3:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table3:
.Lexception3:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\247\202"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.ascii	 "\236\002"             # Call site table length
.Lset0 = .Leh_func_begin3-.Leh_func_begin3 # >> Call Site 1 <<
	.long	.Lset0
.Lset1 = .Ltmp13-.Leh_func_begin3       #   Call between .Leh_func_begin3 and .Ltmp13
	.long	.Lset1
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset2 = .Ltmp13-.Leh_func_begin3       # >> Call Site 2 <<
	.long	.Lset2
.Lset3 = .Ltmp14-.Ltmp13                #   Call between .Ltmp13 and .Ltmp14
	.long	.Lset3
.Lset4 = .Ltmp15-.Leh_func_begin3       #     jumps to .Ltmp15
	.long	.Lset4
	.byte	0                       #   On action: cleanup
.Lset5 = .Ltmp16-.Leh_func_begin3       # >> Call Site 3 <<
	.long	.Lset5
.Lset6 = .Ltmp17-.Ltmp16                #   Call between .Ltmp16 and .Ltmp17
	.long	.Lset6
.Lset7 = .Ltmp18-.Leh_func_begin3       #     jumps to .Ltmp18
	.long	.Lset7
	.byte	0                       #   On action: cleanup
.Lset8 = .Ltmp19-.Leh_func_begin3       # >> Call Site 4 <<
	.long	.Lset8
.Lset9 = .Ltmp20-.Ltmp19                #   Call between .Ltmp19 and .Ltmp20
	.long	.Lset9
.Lset10 = .Ltmp21-.Leh_func_begin3      #     jumps to .Ltmp21
	.long	.Lset10
	.byte	0                       #   On action: cleanup
.Lset11 = .Ltmp22-.Leh_func_begin3      # >> Call Site 5 <<
	.long	.Lset11
.Lset12 = .Ltmp23-.Ltmp22               #   Call between .Ltmp22 and .Ltmp23
	.long	.Lset12
.Lset13 = .Ltmp24-.Leh_func_begin3      #     jumps to .Ltmp24
	.long	.Lset13
	.byte	0                       #   On action: cleanup
.Lset14 = .Ltmp25-.Leh_func_begin3      # >> Call Site 6 <<
	.long	.Lset14
.Lset15 = .Ltmp26-.Ltmp25               #   Call between .Ltmp25 and .Ltmp26
	.long	.Lset15
.Lset16 = .Ltmp27-.Leh_func_begin3      #     jumps to .Ltmp27
	.long	.Lset16
	.byte	0                       #   On action: cleanup
.Lset17 = .Ltmp28-.Leh_func_begin3      # >> Call Site 7 <<
	.long	.Lset17
.Lset18 = .Ltmp29-.Ltmp28               #   Call between .Ltmp28 and .Ltmp29
	.long	.Lset18
.Lset19 = .Ltmp30-.Leh_func_begin3      #     jumps to .Ltmp30
	.long	.Lset19
	.byte	0                       #   On action: cleanup
.Lset20 = .Ltmp31-.Leh_func_begin3      # >> Call Site 8 <<
	.long	.Lset20
.Lset21 = .Ltmp32-.Ltmp31               #   Call between .Ltmp31 and .Ltmp32
	.long	.Lset21
.Lset22 = .Ltmp33-.Leh_func_begin3      #     jumps to .Ltmp33
	.long	.Lset22
	.byte	0                       #   On action: cleanup
.Lset23 = .Ltmp34-.Leh_func_begin3      # >> Call Site 9 <<
	.long	.Lset23
.Lset24 = .Ltmp35-.Ltmp34               #   Call between .Ltmp34 and .Ltmp35
	.long	.Lset24
.Lset25 = .Ltmp36-.Leh_func_begin3      #     jumps to .Ltmp36
	.long	.Lset25
	.byte	0                       #   On action: cleanup
.Lset26 = .Ltmp37-.Leh_func_begin3      # >> Call Site 10 <<
	.long	.Lset26
.Lset27 = .Ltmp38-.Ltmp37               #   Call between .Ltmp37 and .Ltmp38
	.long	.Lset27
.Lset28 = .Ltmp39-.Leh_func_begin3      #     jumps to .Ltmp39
	.long	.Lset28
	.byte	0                       #   On action: cleanup
.Lset29 = .Ltmp40-.Leh_func_begin3      # >> Call Site 11 <<
	.long	.Lset29
.Lset30 = .Ltmp41-.Ltmp40               #   Call between .Ltmp40 and .Ltmp41
	.long	.Lset30
.Lset31 = .Ltmp42-.Leh_func_begin3      #     jumps to .Ltmp42
	.long	.Lset31
	.byte	0                       #   On action: cleanup
.Lset32 = .Ltmp43-.Leh_func_begin3      # >> Call Site 12 <<
	.long	.Lset32
.Lset33 = .Ltmp46-.Ltmp43               #   Call between .Ltmp43 and .Ltmp46
	.long	.Lset33
.Lset34 = .Ltmp83-.Leh_func_begin3      #     jumps to .Ltmp83
	.long	.Lset34
	.byte	0                       #   On action: cleanup
.Lset35 = .Ltmp47-.Leh_func_begin3      # >> Call Site 13 <<
	.long	.Lset35
.Lset36 = .Ltmp48-.Ltmp47               #   Call between .Ltmp47 and .Ltmp48
	.long	.Lset36
.Lset37 = .Ltmp74-.Leh_func_begin3      #     jumps to .Ltmp74
	.long	.Lset37
	.byte	0                       #   On action: cleanup
.Lset38 = .Ltmp49-.Leh_func_begin3      # >> Call Site 14 <<
	.long	.Lset38
.Lset39 = .Ltmp50-.Ltmp49               #   Call between .Ltmp49 and .Ltmp50
	.long	.Lset39
.Lset40 = .Ltmp51-.Leh_func_begin3      #     jumps to .Ltmp51
	.long	.Lset40
	.byte	0                       #   On action: cleanup
.Lset41 = .Ltmp54-.Leh_func_begin3      # >> Call Site 15 <<
	.long	.Lset41
.Lset42 = .Ltmp57-.Ltmp54               #   Call between .Ltmp54 and .Ltmp57
	.long	.Lset42
.Lset43 = .Ltmp74-.Leh_func_begin3      #     jumps to .Ltmp74
	.long	.Lset43
	.byte	0                       #   On action: cleanup
.Lset44 = .Ltmp58-.Leh_func_begin3      # >> Call Site 16 <<
	.long	.Lset44
.Lset45 = .Ltmp59-.Ltmp58               #   Call between .Ltmp58 and .Ltmp59
	.long	.Lset45
.Lset46 = .Ltmp60-.Leh_func_begin3      #     jumps to .Ltmp60
	.long	.Lset46
	.byte	0                       #   On action: cleanup
.Lset47 = .Ltmp63-.Leh_func_begin3      # >> Call Site 17 <<
	.long	.Lset47
.Lset48 = .Ltmp66-.Ltmp63               #   Call between .Ltmp63 and .Ltmp66
	.long	.Lset48
.Lset49 = .Ltmp74-.Leh_func_begin3      #     jumps to .Ltmp74
	.long	.Lset49
	.byte	0                       #   On action: cleanup
.Lset50 = .Ltmp67-.Leh_func_begin3      # >> Call Site 18 <<
	.long	.Lset50
.Lset51 = .Ltmp68-.Ltmp67               #   Call between .Ltmp67 and .Ltmp68
	.long	.Lset51
.Lset52 = .Ltmp69-.Leh_func_begin3      #     jumps to .Ltmp69
	.long	.Lset52
	.byte	0                       #   On action: cleanup
.Lset53 = .Ltmp72-.Leh_func_begin3      # >> Call Site 19 <<
	.long	.Lset53
.Lset54 = .Ltmp73-.Ltmp72               #   Call between .Ltmp72 and .Ltmp73
	.long	.Lset54
.Lset55 = .Ltmp74-.Leh_func_begin3      #     jumps to .Ltmp74
	.long	.Lset55
	.byte	0                       #   On action: cleanup
.Lset56 = .Ltmp77-.Leh_func_begin3      # >> Call Site 20 <<
	.long	.Lset56
.Lset57 = .Ltmp82-.Ltmp77               #   Call between .Ltmp77 and .Ltmp82
	.long	.Lset57
.Lset58 = .Ltmp83-.Leh_func_begin3      #     jumps to .Ltmp83
	.long	.Lset58
	.byte	0                       #   On action: cleanup
.Lset59 = .Ltmp52-.Leh_func_begin3      # >> Call Site 21 <<
	.long	.Lset59
.Lset60 = .Ltmp105-.Ltmp52              #   Call between .Ltmp52 and .Ltmp105
	.long	.Lset60
.Lset61 = .Ltmp106-.Leh_func_begin3     #     jumps to .Ltmp106
	.long	.Lset61
	.byte	1                       #   On action: 1
.Lset62 = .Ltmp105-.Leh_func_begin3     # >> Call Site 22 <<
	.long	.Lset62
.Lset63 = .Leh_func_end3-.Ltmp105       #   Call between .Ltmp105 and .Leh_func_end3
	.long	.Lset63
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN7sc_core5sc_inIbEC1EPKc,"axG",@progbits,_ZN7sc_core5sc_inIbEC1EPKc,comdat
	.weak	_ZN7sc_core5sc_inIbEC1EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIbEC1EPKc,@function
_ZN7sc_core5sc_inIbEC1EPKc:             # @_ZN7sc_core5sc_inIbEC1EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp115:
	.cfi_def_cfa_offset 16
.Ltmp116:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp117:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN7sc_core5sc_inIbEC2EPKc
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp118:
	.size	_ZN7sc_core5sc_inIbEC1EPKc, .Ltmp118-_ZN7sc_core5sc_inIbEC1EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp121:
	.cfi_def_cfa_offset 16
.Ltmp122:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp123:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp124:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc, .Ltmp124-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC1EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiEC1EPKc,"axG",@progbits,_ZN7sc_core5sc_inIiEC1EPKc,comdat
	.weak	_ZN7sc_core5sc_inIiEC1EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiEC1EPKc,@function
_ZN7sc_core5sc_inIiEC1EPKc:             # @_ZN7sc_core5sc_inIiEC1EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp127:
	.cfi_def_cfa_offset 16
.Ltmp128:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp129:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN7sc_core5sc_inIiEC2EPKc
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp130:
	.size	_ZN7sc_core5sc_inIiEC1EPKc, .Ltmp130-_ZN7sc_core5sc_inIiEC1EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp133:
	.cfi_def_cfa_offset 16
.Ltmp134:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp135:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp136:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc, .Ltmp136-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC1EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core6sc_outItEC1EPKc,"axG",@progbits,_ZN7sc_core6sc_outItEC1EPKc,comdat
	.weak	_ZN7sc_core6sc_outItEC1EPKc
	.align	16, 0x90
	.type	_ZN7sc_core6sc_outItEC1EPKc,@function
_ZN7sc_core6sc_outItEC1EPKc:            # @_ZN7sc_core6sc_outItEC1EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp139:
	.cfi_def_cfa_offset 16
.Ltmp140:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp141:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN7sc_core6sc_outItEC2EPKc
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp142:
	.size	_ZN7sc_core6sc_outItEC1EPKc, .Ltmp142-_ZN7sc_core6sc_outItEC1EPKc
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEC1Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEC1Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEC1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEC1Ev,@function
_ZN5sc_dt7sc_uintILi32EEC1Ev:           # @_ZN5sc_dt7sc_uintILi32EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp145:
	.cfi_def_cfa_offset 16
.Ltmp146:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp147:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp148:
	.size	_ZN5sc_dt7sc_uintILi32EEC1Ev, .Ltmp148-_ZN5sc_dt7sc_uintILi32EEC1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core22sc_get_curr_simcontextEv,"axG",@progbits,_ZN7sc_core22sc_get_curr_simcontextEv,comdat
	.weak	_ZN7sc_core22sc_get_curr_simcontextEv
	.align	16, 0x90
	.type	_ZN7sc_core22sc_get_curr_simcontextEv,@function
_ZN7sc_core22sc_get_curr_simcontextEv:  # @_ZN7sc_core22sc_get_curr_simcontextEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin10:
	.cfi_lsda 3, .Lexception10
# BB#0:
	pushq	%rbp
.Ltmp154:
	.cfi_def_cfa_offset 16
.Ltmp155:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp156:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	cmpq	$0, _ZN7sc_core18sc_curr_simcontextE
	jne	.LBB10_4
# BB#1:
	movl	$304, %edi              # imm = 0x130
	callq	_Znwm
	movq	%rax, %rdi
	movq	%rax, %rcx
.Ltmp149:
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core13sc_simcontextC1Ev
.Ltmp150:
	jmp	.LBB10_2
.LBB10_2:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rax, _ZN7sc_core25sc_default_global_contextE
	movq	_ZN7sc_core25sc_default_global_contextE, %rcx
	movq	%rcx, _ZN7sc_core18sc_curr_simcontextE
	jmp	.LBB10_4
.LBB10_3:
.Ltmp151:
	movl	%edx, %ecx
	movq	%rax, -8(%rbp)
	movl	%ecx, -12(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZdlPv
	jmp	.LBB10_5
.LBB10_4:
	movq	_ZN7sc_core18sc_curr_simcontextE, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB10_5:
	movq	-8(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp157:
	.size	_ZN7sc_core22sc_get_curr_simcontextEv, .Ltmp157-_ZN7sc_core22sc_get_curr_simcontextEv
	.cfi_endproc
.Leh_func_end10:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table10:
.Lexception10:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset64 = .Leh_func_begin10-.Leh_func_begin10 # >> Call Site 1 <<
	.long	.Lset64
.Lset65 = .Ltmp149-.Leh_func_begin10    #   Call between .Leh_func_begin10 and .Ltmp149
	.long	.Lset65
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset66 = .Ltmp149-.Leh_func_begin10    # >> Call Site 2 <<
	.long	.Lset66
.Lset67 = .Ltmp150-.Ltmp149             #   Call between .Ltmp149 and .Ltmp150
	.long	.Lset67
.Lset68 = .Ltmp151-.Leh_func_begin10    #     jumps to .Ltmp151
	.long	.Lset68
	.byte	0                       #   On action: cleanup
.Lset69 = .Ltmp150-.Leh_func_begin10    # >> Call Site 3 <<
	.long	.Lset69
.Lset70 = .Leh_func_end10-.Ltmp150      #   Call between .Ltmp150 and .Leh_func_end10
	.long	.Lset70
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.text
	.globl	_ZN5Timer8on_clockEv
	.align	16, 0x90
	.type	_ZN5Timer8on_clockEv,@function
_ZN5Timer8on_clockEv:                   # @_ZN5Timer8on_clockEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin11:
	.cfi_lsda 3, .Lexception11
# BB#0:
	pushq	%rbp
.Ltmp172:
	.cfi_def_cfa_offset 16
.Ltmp173:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp174:
	.cfi_def_cfa_register %rbp
	subq	$224, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	addq	$528, %rax              # imm = 0x210
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK7sc_core5sc_inIbE4readEv
	testb	$1, (%rax)
	jne	.LBB11_1
	jmp	.LBB11_12
.LBB11_1:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$832, %rax              # imm = 0x340
	movq	%rax, %rdi
	callq	_ZNK7sc_core5sc_inIiE4readEv
	movl	(%rax), %ecx
	movl	%ecx, -12(%rbp)
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$688, %rax              # imm = 0x2B0
	movq	%rax, %rdi
	callq	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv
	leaq	-40(%rbp), %rdi
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN5sc_dt5sc_bvILi13EEC1ERKS1_
.Ltmp158:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv
.Ltmp159:
	movl	%eax, -132(%rbp)        # 4-byte Spill
	jmp	.LBB11_2
.LBB11_2:
	movl	-132(%rbp), %eax        # 4-byte Reload
	testl	%eax, %eax
	je	.LBB11_4
	jmp	.LBB11_30
.LBB11_30:
	movl	-132(%rbp), %eax        # 4-byte Reload
	cmpl	$4, %eax
	je	.LBB11_6
	jmp	.LBB11_31
.LBB11_31:
	movl	-132(%rbp), %eax        # 4-byte Reload
	cmpl	$8, %eax
	je	.LBB11_8
	jmp	.LBB11_10
.LBB11_3:
.Ltmp166:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
.Ltmp167:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt5sc_bvILi13EED1Ev
.Ltmp168:
	jmp	.LBB11_11
.LBB11_4:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1272, %rax             # imm = 0x4F8
	movzwl	-12(%rbp), %esi
.Ltmp164:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
.Ltmp165:
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jmp	.LBB11_5
.LBB11_5:
	jmp	.LBB11_10
.LBB11_6:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movzwl	-12(%rbp), %esi
.Ltmp162:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
.Ltmp163:
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jmp	.LBB11_7
.LBB11_7:
	jmp	.LBB11_10
.LBB11_8:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1320, %rax             # imm = 0x528
	movl	-12(%rbp), %esi
.Ltmp160:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
.Ltmp161:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB11_9
.LBB11_9:
	jmp	.LBB11_10
.LBB11_10:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt5sc_bvILi13EED1Ev
	jmp	.LBB11_27
.LBB11_11:
	jmp	.LBB11_28
.LBB11_12:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$368, %rax              # imm = 0x170
	movq	%rax, %rdi
	callq	_ZNK7sc_core5sc_inIbE4readEv
	testb	$1, (%rax)
	jne	.LBB11_13
	jmp	.LBB11_14
.LBB11_13:
	movl	$0, %esi
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
	movl	$0, %esi
	movq	-120(%rbp), %rdi        # 8-byte Reload
	addq	$1272, %rdi             # imm = 0x4F8
	movq	%rax, -168(%rbp)        # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
	movl	$0, %esi
	movq	-120(%rbp), %rdi        # 8-byte Reload
	addq	$1320, %rdi             # imm = 0x528
	movq	%rax, -176(%rbp)        # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
	movq	%rax, -184(%rbp)        # 8-byte Spill
	jmp	.LBB11_26
.LBB11_14:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1320, %rax             # imm = 0x528
	movq	%rax, %rdi
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
	andq	$2, %rax
	cmpq	$0, %rax
	jne	.LBB11_25
# BB#15:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1320, %rax             # imm = 0x528
	movq	%rax, %rdi
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
	andq	$1, %rax
	cmpq	$0, %rax
	je	.LBB11_20
# BB#16:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	-120(%rbp), %rcx        # 8-byte Reload
	addq	$1272, %rcx             # imm = 0x4F8
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN5sc_dtltERKNS_12sc_uint_baseES2_
	testb	$1, %al
	jne	.LBB11_17
	jmp	.LBB11_18
.LBB11_17:
	leaq	-80(%rbp), %rdi
	movl	$0, %edx
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	%rax, %rsi
	callq	_ZN5sc_dt7sc_uintILi32EEppEi
	leaq	-80(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
	jmp	.LBB11_19
.LBB11_18:
	movl	$0, %esi
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
	movq	%rax, -192(%rbp)        # 8-byte Spill
.LBB11_19:
	jmp	.LBB11_24
.LBB11_20:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	%rax, %rdi
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
	cmpq	$0, %rax
	jbe	.LBB11_22
# BB#21:
	leaq	-104(%rbp), %rdi
	movl	$0, %edx
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	%rax, %rsi
	callq	_ZN5sc_dt7sc_uintILi32EEmmEi
	leaq	-104(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
	jmp	.LBB11_23
.LBB11_22:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
	movq	-120(%rbp), %rcx        # 8-byte Reload
	addq	$1272, %rcx             # imm = 0x4F8
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN5sc_dt7sc_uintILi32EEaSERKS1_
	movq	%rax, -200(%rbp)        # 8-byte Spill
.LBB11_23:
	jmp	.LBB11_24
.LBB11_24:
	jmp	.LBB11_25
.LBB11_25:
	jmp	.LBB11_26
.LBB11_26:
	jmp	.LBB11_27
.LBB11_27:
	movq	-120(%rbp), %rax        # 8-byte Reload
	addq	$1120, %rax             # imm = 0x460
	movq	-120(%rbp), %rcx        # 8-byte Reload
	addq	$1296, %rcx             # imm = 0x510
	movq	%rcx, %rdi
	movq	%rax, -208(%rbp)        # 8-byte Spill
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
	leaq	-106(%rbp), %rsi
	movw	%ax, %dx
	movw	%dx, -106(%rbp)
	movq	-208(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core8sc_inoutItE5writeERKt
	addq	$224, %rsp
	popq	%rbp
	ret
.LBB11_28:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume
.LBB11_29:
.Ltmp169:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movq	%rdx, -224(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp175:
	.size	_ZN5Timer8on_clockEv, .Ltmp175-_ZN5Timer8on_clockEv
	.cfi_endproc
.Leh_func_end11:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table11:
.Lexception11:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	73                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	65                      # Call site table length
.Lset71 = .Leh_func_begin11-.Leh_func_begin11 # >> Call Site 1 <<
	.long	.Lset71
.Lset72 = .Ltmp158-.Leh_func_begin11    #   Call between .Leh_func_begin11 and .Ltmp158
	.long	.Lset72
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset73 = .Ltmp158-.Leh_func_begin11    # >> Call Site 2 <<
	.long	.Lset73
.Lset74 = .Ltmp159-.Ltmp158             #   Call between .Ltmp158 and .Ltmp159
	.long	.Lset74
.Lset75 = .Ltmp166-.Leh_func_begin11    #     jumps to .Ltmp166
	.long	.Lset75
	.byte	0                       #   On action: cleanup
.Lset76 = .Ltmp167-.Leh_func_begin11    # >> Call Site 3 <<
	.long	.Lset76
.Lset77 = .Ltmp168-.Ltmp167             #   Call between .Ltmp167 and .Ltmp168
	.long	.Lset77
.Lset78 = .Ltmp169-.Leh_func_begin11    #     jumps to .Ltmp169
	.long	.Lset78
	.byte	1                       #   On action: 1
.Lset79 = .Ltmp164-.Leh_func_begin11    # >> Call Site 4 <<
	.long	.Lset79
.Lset80 = .Ltmp161-.Ltmp164             #   Call between .Ltmp164 and .Ltmp161
	.long	.Lset80
.Lset81 = .Ltmp166-.Leh_func_begin11    #     jumps to .Ltmp166
	.long	.Lset81
	.byte	0                       #   On action: cleanup
.Lset82 = .Ltmp161-.Leh_func_begin11    # >> Call Site 5 <<
	.long	.Lset82
.Lset83 = .Leh_func_end11-.Ltmp161      #   Call between .Ltmp161 and .Leh_func_end11
	.long	.Lset83
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN7sc_core17sc_process_handleC1ERKS0_,"axG",@progbits,_ZN7sc_core17sc_process_handleC1ERKS0_,comdat
	.weak	_ZN7sc_core17sc_process_handleC1ERKS0_
	.align	16, 0x90
	.type	_ZN7sc_core17sc_process_handleC1ERKS0_,@function
_ZN7sc_core17sc_process_handleC1ERKS0_: # @_ZN7sc_core17sc_process_handleC1ERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp178:
	.cfi_def_cfa_offset 16
.Ltmp179:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp180:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN7sc_core17sc_process_handleC2ERKS0_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp181:
	.size	_ZN7sc_core17sc_process_handleC1ERKS0_, .Ltmp181-_ZN7sc_core17sc_process_handleC1ERKS0_
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_process_handleD1Ev,"axG",@progbits,_ZN7sc_core17sc_process_handleD1Ev,comdat
	.weak	_ZN7sc_core17sc_process_handleD1Ev
	.align	16, 0x90
	.type	_ZN7sc_core17sc_process_handleD1Ev,@function
_ZN7sc_core17sc_process_handleD1Ev:     # @_ZN7sc_core17sc_process_handleD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp184:
	.cfi_def_cfa_offset 16
.Ltmp185:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp186:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core17sc_process_handleD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp187:
	.size	_ZN7sc_core17sc_process_handleD1Ev, .Ltmp187-_ZN7sc_core17sc_process_handleD1Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIbE3posEv,"axG",@progbits,_ZNK7sc_core5sc_inIbE3posEv,comdat
	.weak	_ZNK7sc_core5sc_inIbE3posEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIbE3posEv,@function
_ZNK7sc_core5sc_inIbE3posEv:            # @_ZNK7sc_core5sc_inIbE3posEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin14:
	.cfi_lsda 3, .Lexception14
# BB#0:
	pushq	%rbp
.Ltmp193:
	.cfi_def_cfa_offset 16
.Ltmp194:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp195:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 152(%rdi)
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	jne	.LBB14_4
# BB#1:
	movl	$32, %edi
	callq	_Znwm
	movq	$0, -16(%rbp)
	movq	$41, -24(%rbp)
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rax, %rsi
.Ltmp188:
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
.Ltmp189:
	jmp	.LBB14_2
.LBB14_2:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 152(%rcx)
	jmp	.LBB14_4
.LBB14_3:
.Ltmp190:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZdlPv
	jmp	.LBB14_5
.LBB14_4:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	152(%rax), %rax
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB14_5:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp196:
	.size	_ZNK7sc_core5sc_inIbE3posEv, .Ltmp196-_ZNK7sc_core5sc_inIbE3posEv
	.cfi_endproc
.Leh_func_end14:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table14:
.Lexception14:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset84 = .Leh_func_begin14-.Leh_func_begin14 # >> Call Site 1 <<
	.long	.Lset84
.Lset85 = .Ltmp188-.Leh_func_begin14    #   Call between .Leh_func_begin14 and .Ltmp188
	.long	.Lset85
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset86 = .Ltmp188-.Leh_func_begin14    # >> Call Site 2 <<
	.long	.Lset86
.Lset87 = .Ltmp189-.Ltmp188             #   Call between .Ltmp188 and .Ltmp189
	.long	.Lset87
.Lset88 = .Ltmp190-.Leh_func_begin14    #     jumps to .Ltmp190
	.long	.Lset88
	.byte	0                       #   On action: cleanup
.Lset89 = .Ltmp189-.Leh_func_begin14    # >> Call Site 3 <<
	.long	.Lset89
.Lset90 = .Leh_func_end14-.Ltmp189      #   Call between .Ltmp189 and .Leh_func_end14
	.long	.Lset90
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi32EED1Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EED1Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EED1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EED1Ev,@function
_ZN5sc_dt7sc_uintILi32EED1Ev:           # @_ZN5sc_dt7sc_uintILi32EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp199:
	.cfi_def_cfa_offset 16
.Ltmp200:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp201:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp202:
	.size	_ZN5sc_dt7sc_uintILi32EED1Ev, .Ltmp202-_ZN5sc_dt7sc_uintILi32EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core6sc_outItED1Ev,"axG",@progbits,_ZN7sc_core6sc_outItED1Ev,comdat
	.weak	_ZN7sc_core6sc_outItED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core6sc_outItED1Ev,@function
_ZN7sc_core6sc_outItED1Ev:              # @_ZN7sc_core6sc_outItED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp205:
	.cfi_def_cfa_offset 16
.Ltmp206:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp207:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core6sc_outItED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp208:
	.size	_ZN7sc_core6sc_outItED1Ev, .Ltmp208-_ZN7sc_core6sc_outItED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp211:
	.cfi_def_cfa_offset 16
.Ltmp212:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp213:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp214:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev, .Ltmp214-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiED1Ev,"axG",@progbits,_ZN7sc_core5sc_inIiED1Ev,comdat
	.weak	_ZN7sc_core5sc_inIiED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiED1Ev,@function
_ZN7sc_core5sc_inIiED1Ev:               # @_ZN7sc_core5sc_inIiED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp217:
	.cfi_def_cfa_offset 16
.Ltmp218:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp219:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core5sc_inIiED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp220:
	.size	_ZN7sc_core5sc_inIiED1Ev, .Ltmp220-_ZN7sc_core5sc_inIiED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp223:
	.cfi_def_cfa_offset 16
.Ltmp224:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp225:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp226:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev, .Ltmp226-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIbED1Ev,"axG",@progbits,_ZN7sc_core5sc_inIbED1Ev,comdat
	.weak	_ZN7sc_core5sc_inIbED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIbED1Ev,@function
_ZN7sc_core5sc_inIbED1Ev:               # @_ZN7sc_core5sc_inIbED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp229:
	.cfi_def_cfa_offset 16
.Ltmp230:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp231:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core5sc_inIbED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp232:
	.size	_ZN7sc_core5sc_inIbED1Ev, .Ltmp232-_ZN7sc_core5sc_inIbED1Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIbE4readEv,"axG",@progbits,_ZNK7sc_core5sc_inIbE4readEv,comdat
	.weak	_ZNK7sc_core5sc_inIbE4readEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIbE4readEv,@function
_ZNK7sc_core5sc_inIbE4readEv:           # @_ZNK7sc_core5sc_inIbE4readEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp235:
	.cfi_def_cfa_offset 16
.Ltmp236:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp237:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	movq	(%rax), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-16(%rbp), %rax         # 8-byte Reload
	callq	*56(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp238:
	.size	_ZNK7sc_core5sc_inIbE4readEv, .Ltmp238-_ZNK7sc_core5sc_inIbE4readEv
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIiE4readEv,"axG",@progbits,_ZNK7sc_core5sc_inIiE4readEv,comdat
	.weak	_ZNK7sc_core5sc_inIiE4readEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIiE4readEv,@function
_ZNK7sc_core5sc_inIiE4readEv:           # @_ZNK7sc_core5sc_inIiE4readEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp241:
	.cfi_def_cfa_offset 16
.Ltmp242:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp243:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv
	movq	(%rax), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-16(%rbp), %rax         # 8-byte Reload
	callq	*40(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp244:
	.size	_ZNK7sc_core5sc_inIiE4readEv, .Ltmp244-_ZNK7sc_core5sc_inIiE4readEv
	.cfi_endproc

	.section	.text._ZN5sc_dt5sc_bvILi13EEC1ERKS1_,"axG",@progbits,_ZN5sc_dt5sc_bvILi13EEC1ERKS1_,comdat
	.weak	_ZN5sc_dt5sc_bvILi13EEC1ERKS1_
	.align	16, 0x90
	.type	_ZN5sc_dt5sc_bvILi13EEC1ERKS1_,@function
_ZN5sc_dt5sc_bvILi13EEC1ERKS1_:         # @_ZN5sc_dt5sc_bvILi13EEC1ERKS1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp247:
	.cfi_def_cfa_offset 16
.Ltmp248:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp249:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt5sc_bvILi13EEC2ERKS1_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp250:
	.size	_ZN5sc_dt5sc_bvILi13EEC1ERKS1_, .Ltmp250-_ZN5sc_dt5sc_bvILi13EEC1ERKS1_
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv,"axG",@progbits,_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv,comdat
	.weak	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv,@function
_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv: # @_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp253:
	.cfi_def_cfa_offset 16
.Ltmp254:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp255:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv
	movq	(%rax), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-16(%rbp), %rax         # 8-byte Reload
	callq	*40(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp256:
	.size	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv, .Ltmp256-_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4readEv
	.cfi_endproc

	.section	.text._ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv,"axG",@progbits,_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv,comdat
	.weak	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv
	.align	16, 0x90
	.type	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv,@function
_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv: # @_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp259:
	.cfi_def_cfa_offset 16
.Ltmp260:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp261:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv
	movl	%eax, %ecx
	movl	%ecx, %eax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp262:
	.size	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv, .Ltmp262-_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE6to_intEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEaSEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEaSEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEaSEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEaSEi,@function
_ZN5sc_dt7sc_uintILi32EEaSEi:           # @_ZN5sc_dt7sc_uintILi32EEaSEi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp265:
	.cfi_def_cfa_offset 16
.Ltmp266:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp267:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movl	-12(%rbp), %esi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_baseaSEi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rdi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp268:
	.size	_ZN5sc_dt7sc_uintILi32EEaSEi, .Ltmp268-_ZN5sc_dt7sc_uintILi32EEaSEi
	.cfi_endproc

	.section	.text._ZN5sc_dt5sc_bvILi13EED1Ev,"axG",@progbits,_ZN5sc_dt5sc_bvILi13EED1Ev,comdat
	.weak	_ZN5sc_dt5sc_bvILi13EED1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt5sc_bvILi13EED1Ev,@function
_ZN5sc_dt5sc_bvILi13EED1Ev:             # @_ZN5sc_dt5sc_bvILi13EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp271:
	.cfi_def_cfa_offset 16
.Ltmp272:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp273:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt5sc_bvILi13EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp274:
	.size	_ZN5sc_dt5sc_bvILi13EED1Ev, .Ltmp274-_ZN5sc_dt5sc_bvILi13EED1Ev
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_basecvyEv,"axG",@progbits,_ZNK5sc_dt12sc_uint_basecvyEv,comdat
	.weak	_ZNK5sc_dt12sc_uint_basecvyEv
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_basecvyEv,@function
_ZNK5sc_dt12sc_uint_basecvyEv:          # @_ZNK5sc_dt12sc_uint_basecvyEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	ret
.Ltmp275:
	.size	_ZNK5sc_dt12sc_uint_basecvyEv, .Ltmp275-_ZNK5sc_dt12sc_uint_basecvyEv
	.cfi_endproc

	.section	.text._ZN5sc_dtltERKNS_12sc_uint_baseES2_,"axG",@progbits,_ZN5sc_dtltERKNS_12sc_uint_baseES2_,comdat
	.weak	_ZN5sc_dtltERKNS_12sc_uint_baseES2_
	.align	16, 0x90
	.type	_ZN5sc_dtltERKNS_12sc_uint_baseES2_,@function
_ZN5sc_dtltERKNS_12sc_uint_baseES2_:    # @_ZN5sc_dtltERKNS_12sc_uint_baseES2_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	8(%rsi), %rsi
	movq	-16(%rsp), %rdi
	cmpq	8(%rdi), %rsi
	setb	%al
	andb	$1, %al
	movzbl	%al, %eax
	ret
.Ltmp276:
	.size	_ZN5sc_dtltERKNS_12sc_uint_baseES2_, .Ltmp276-_ZN5sc_dtltERKNS_12sc_uint_baseES2_
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEppEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEppEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEppEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEppEi,@function
_ZN5sc_dt7sc_uintILi32EEppEi:           # @_ZN5sc_dt7sc_uintILi32EEppEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin30:
	.cfi_lsda 3, .Lexception30
# BB#0:
	pushq	%rbp
.Ltmp285:
	.cfi_def_cfa_offset 16
.Ltmp286:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp287:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_baseppEi
.Ltmp277:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
.Ltmp278:
	jmp	.LBB30_1
.LBB30_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
	addq	$96, %rsp
	popq	%rbp
	ret
.LBB30_2:
.Ltmp279:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
.Ltmp280:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp281:
	jmp	.LBB30_3
.LBB30_3:
	jmp	.LBB30_4
.LBB30_4:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume
.LBB30_5:
.Ltmp282:
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp288:
	.size	_ZN5sc_dt7sc_uintILi32EEppEi, .Ltmp288-_ZN5sc_dt7sc_uintILi32EEppEi
	.cfi_endproc
.Leh_func_end30:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table30:
.Lexception30:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	73                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	65                      # Call site table length
.Lset91 = .Leh_func_begin30-.Leh_func_begin30 # >> Call Site 1 <<
	.long	.Lset91
.Lset92 = .Ltmp277-.Leh_func_begin30    #   Call between .Leh_func_begin30 and .Ltmp277
	.long	.Lset92
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset93 = .Ltmp277-.Leh_func_begin30    # >> Call Site 2 <<
	.long	.Lset93
.Lset94 = .Ltmp278-.Ltmp277             #   Call between .Ltmp277 and .Ltmp278
	.long	.Lset94
.Lset95 = .Ltmp279-.Leh_func_begin30    #     jumps to .Ltmp279
	.long	.Lset95
	.byte	0                       #   On action: cleanup
.Lset96 = .Ltmp278-.Leh_func_begin30    # >> Call Site 3 <<
	.long	.Lset96
.Lset97 = .Ltmp280-.Ltmp278             #   Call between .Ltmp278 and .Ltmp280
	.long	.Lset97
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset98 = .Ltmp280-.Leh_func_begin30    # >> Call Site 4 <<
	.long	.Lset98
.Lset99 = .Ltmp281-.Ltmp280             #   Call between .Ltmp280 and .Ltmp281
	.long	.Lset99
.Lset100 = .Ltmp282-.Leh_func_begin30   #     jumps to .Ltmp282
	.long	.Lset100
	.byte	1                       #   On action: 1
.Lset101 = .Ltmp281-.Leh_func_begin30   # >> Call Site 5 <<
	.long	.Lset101
.Lset102 = .Leh_func_end30-.Ltmp281     #   Call between .Ltmp281 and .Leh_func_end30
	.long	.Lset102
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi32EEmmEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEmmEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEmmEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEmmEi,@function
_ZN5sc_dt7sc_uintILi32EEmmEi:           # @_ZN5sc_dt7sc_uintILi32EEmmEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin31:
	.cfi_lsda 3, .Lexception31
# BB#0:
	pushq	%rbp
.Ltmp297:
	.cfi_def_cfa_offset 16
.Ltmp298:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp299:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_basemmEi
.Ltmp289:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
.Ltmp290:
	jmp	.LBB31_1
.LBB31_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
	addq	$96, %rsp
	popq	%rbp
	ret
.LBB31_2:
.Ltmp291:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
.Ltmp292:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp293:
	jmp	.LBB31_3
.LBB31_3:
	jmp	.LBB31_4
.LBB31_4:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume
.LBB31_5:
.Ltmp294:
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp300:
	.size	_ZN5sc_dt7sc_uintILi32EEmmEi, .Ltmp300-_ZN5sc_dt7sc_uintILi32EEmmEi
	.cfi_endproc
.Leh_func_end31:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table31:
.Lexception31:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	73                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	65                      # Call site table length
.Lset103 = .Leh_func_begin31-.Leh_func_begin31 # >> Call Site 1 <<
	.long	.Lset103
.Lset104 = .Ltmp289-.Leh_func_begin31   #   Call between .Leh_func_begin31 and .Ltmp289
	.long	.Lset104
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset105 = .Ltmp289-.Leh_func_begin31   # >> Call Site 2 <<
	.long	.Lset105
.Lset106 = .Ltmp290-.Ltmp289            #   Call between .Ltmp289 and .Ltmp290
	.long	.Lset106
.Lset107 = .Ltmp291-.Leh_func_begin31   #     jumps to .Ltmp291
	.long	.Lset107
	.byte	0                       #   On action: cleanup
.Lset108 = .Ltmp290-.Leh_func_begin31   # >> Call Site 3 <<
	.long	.Lset108
.Lset109 = .Ltmp292-.Ltmp290            #   Call between .Ltmp290 and .Ltmp292
	.long	.Lset109
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset110 = .Ltmp292-.Leh_func_begin31   # >> Call Site 4 <<
	.long	.Lset110
.Lset111 = .Ltmp293-.Ltmp292            #   Call between .Ltmp292 and .Ltmp293
	.long	.Lset111
.Lset112 = .Ltmp294-.Leh_func_begin31   #     jumps to .Ltmp294
	.long	.Lset112
	.byte	1                       #   On action: 1
.Lset113 = .Ltmp293-.Leh_func_begin31   # >> Call Site 5 <<
	.long	.Lset113
.Lset114 = .Leh_func_end31-.Ltmp293     #   Call between .Ltmp293 and .Leh_func_end31
	.long	.Lset114
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi32EEaSERKS1_,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEaSERKS1_,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEaSERKS1_
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEaSERKS1_,@function
_ZN5sc_dt7sc_uintILi32EEaSERKS1_:       # @_ZN5sc_dt7sc_uintILi32EEaSERKS1_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	8(%rdi), %rdi
	movq	%rdi, 8(%rsi)
	movq	%rsi, %rax
	ret
.Ltmp301:
	.size	_ZN5sc_dt7sc_uintILi32EEaSERKS1_, .Ltmp301-_ZN5sc_dt7sc_uintILi32EEaSERKS1_
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutItE5writeERKt,"axG",@progbits,_ZN7sc_core8sc_inoutItE5writeERKt,comdat
	.weak	_ZN7sc_core8sc_inoutItE5writeERKt
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutItE5writeERKt,@function
_ZN7sc_core8sc_inoutItE5writeERKt:      # @_ZN7sc_core8sc_inoutItE5writeERKt
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp304:
	.cfi_def_cfa_offset 16
.Ltmp305:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp306:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv
	movq	%rax, %rsi
	addq	$8, %rsi
	movq	8(%rax), %rax
	movq	32(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	*%rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp307:
	.size	_ZN7sc_core8sc_inoutItE5writeERKt, .Ltmp307-_ZN7sc_core8sc_inoutItE5writeERKt
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitorD1Ev,"axG",@progbits,_ZN7sc_core18sc_process_monitorD1Ev,comdat
	.weak	_ZN7sc_core18sc_process_monitorD1Ev
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitorD1Ev,@function
_ZN7sc_core18sc_process_monitorD1Ev:    # @_ZN7sc_core18sc_process_monitorD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp310:
	.cfi_def_cfa_offset 16
.Ltmp311:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp312:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core18sc_process_monitorD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp313:
	.size	_ZN7sc_core18sc_process_monitorD1Ev, .Ltmp313-_ZN7sc_core18sc_process_monitorD1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitorD0Ev,"axG",@progbits,_ZN7sc_core18sc_process_monitorD0Ev,comdat
	.weak	_ZN7sc_core18sc_process_monitorD0Ev
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitorD0Ev,@function
_ZN7sc_core18sc_process_monitorD0Ev:    # @_ZN7sc_core18sc_process_monitorD0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin35:
	.cfi_lsda 3, .Lexception35
# BB#0:
	pushq	%rbp
.Ltmp319:
	.cfi_def_cfa_offset 16
.Ltmp320:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp321:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp314:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core18sc_process_monitorD1Ev
.Ltmp315:
	jmp	.LBB35_1
.LBB35_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB35_2:
.Ltmp316:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp322:
	.size	_ZN7sc_core18sc_process_monitorD0Ev, .Ltmp322-_ZN7sc_core18sc_process_monitorD0Ev
	.cfi_endproc
.Leh_func_end35:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table35:
.Lexception35:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset115 = .Ltmp314-.Leh_func_begin35   # >> Call Site 1 <<
	.long	.Lset115
.Lset116 = .Ltmp315-.Ltmp314            #   Call between .Ltmp314 and .Ltmp315
	.long	.Lset116
.Lset117 = .Ltmp316-.Leh_func_begin35   #     jumps to .Ltmp316
	.long	.Lset117
	.byte	0                       #   On action: cleanup
.Lset118 = .Ltmp315-.Leh_func_begin35   # >> Call Site 2 <<
	.long	.Lset118
.Lset119 = .Leh_func_end35-.Ltmp315     #   Call between .Ltmp315 and .Leh_func_end35
	.long	.Lset119
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNK7sc_core9sc_module4kindEv,"axG",@progbits,_ZNK7sc_core9sc_module4kindEv,comdat
	.weak	_ZNK7sc_core9sc_module4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_module4kindEv,@function
_ZNK7sc_core9sc_module4kindEv:          # @_ZNK7sc_core9sc_module4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str9, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp323:
	.size	_ZNK7sc_core9sc_module4kindEv, .Ltmp323-_ZNK7sc_core9sc_module4kindEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_object16get_child_eventsEv,"axG",@progbits,_ZNK7sc_core9sc_object16get_child_eventsEv,comdat
	.weak	_ZNK7sc_core9sc_object16get_child_eventsEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_object16get_child_eventsEv,@function
_ZNK7sc_core9sc_object16get_child_eventsEv: # @_ZNK7sc_core9sc_object16get_child_eventsEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	addq	$16, %rdi
	movq	%rdi, %rax
	ret
.Ltmp324:
	.size	_ZNK7sc_core9sc_object16get_child_eventsEv, .Ltmp324-_ZNK7sc_core9sc_object16get_child_eventsEv
	.cfi_endproc

	.section	.text._ZN5TimerD1Ev,"axG",@progbits,_ZN5TimerD1Ev,comdat
	.weak	_ZN5TimerD1Ev
	.align	16, 0x90
	.type	_ZN5TimerD1Ev,@function
_ZN5TimerD1Ev:                          # @_ZN5TimerD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp327:
	.cfi_def_cfa_offset 16
.Ltmp328:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp329:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5TimerD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp330:
	.size	_ZN5TimerD1Ev, .Ltmp330-_ZN5TimerD1Ev
	.cfi_endproc

	.section	.text._ZN5TimerD0Ev,"axG",@progbits,_ZN5TimerD0Ev,comdat
	.weak	_ZN5TimerD0Ev
	.align	16, 0x90
	.type	_ZN5TimerD0Ev,@function
_ZN5TimerD0Ev:                          # @_ZN5TimerD0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin39:
	.cfi_lsda 3, .Lexception39
# BB#0:
	pushq	%rbp
.Ltmp336:
	.cfi_def_cfa_offset 16
.Ltmp337:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp338:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp331:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN5TimerD1Ev
.Ltmp332:
	jmp	.LBB39_1
.LBB39_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB39_2:
.Ltmp333:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp339:
	.size	_ZN5TimerD0Ev, .Ltmp339-_ZN5TimerD0Ev
	.cfi_endproc
.Leh_func_end39:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table39:
.Lexception39:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset120 = .Ltmp331-.Leh_func_begin39   # >> Call Site 1 <<
	.long	.Lset120
.Lset121 = .Ltmp332-.Ltmp331            #   Call between .Ltmp331 and .Ltmp332
	.long	.Lset121
.Lset122 = .Ltmp333-.Leh_func_begin39   #     jumps to .Ltmp333
	.long	.Lset122
	.byte	0                       #   On action: cleanup
.Lset123 = .Ltmp332-.Leh_func_begin39   # >> Call Site 2 <<
	.long	.Lset123
.Lset124 = .Leh_func_end39-.Ltmp332     #   Call between .Ltmp332 and .Leh_func_end39
	.long	.Lset124
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZThn88_N5TimerD1Ev,"axG",@progbits,_ZThn88_N5TimerD1Ev,comdat
	.weak	_ZThn88_N5TimerD1Ev
	.align	16, 0x90
	.type	_ZThn88_N5TimerD1Ev,@function
_ZThn88_N5TimerD1Ev:                    # @_ZThn88_N5TimerD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp342:
	.cfi_def_cfa_offset 16
.Ltmp343:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp344:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$-88, %rdi
	callq	_ZN5TimerD1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp345:
	.size	_ZThn88_N5TimerD1Ev, .Ltmp345-_ZThn88_N5TimerD1Ev
	.cfi_endproc

	.section	.text._ZThn88_N5TimerD0Ev,"axG",@progbits,_ZThn88_N5TimerD0Ev,comdat
	.weak	_ZThn88_N5TimerD0Ev
	.align	16, 0x90
	.type	_ZThn88_N5TimerD0Ev,@function
_ZThn88_N5TimerD0Ev:                    # @_ZThn88_N5TimerD0Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp348:
	.cfi_def_cfa_offset 16
.Ltmp349:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp350:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$-88, %rdi
	callq	_ZN5TimerD0Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp351:
	.size	_ZThn88_N5TimerD0Ev, .Ltmp351-_ZThn88_N5TimerD0Ev
	.cfi_endproc

	.section	.text._ZN5TimerD2Ev,"axG",@progbits,_ZN5TimerD2Ev,comdat
	.weak	_ZN5TimerD2Ev
	.align	16, 0x90
	.type	_ZN5TimerD2Ev,@function
_ZN5TimerD2Ev:                          # @_ZN5TimerD2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin42:
	.cfi_lsda 3, .Lexception42
# BB#0:
	pushq	%rbp
.Ltmp405:
	.cfi_def_cfa_offset 16
.Ltmp406:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp407:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTV5Timer+16, (%rdi)
	movq	$_ZTV5Timer+176, 88(%rdi)
	movq	%rdi, %rax
	addq	$1320, %rax             # imm = 0x528
.Ltmp352:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp353:
	jmp	.LBB42_1
.LBB42_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
.Ltmp357:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp358:
	jmp	.LBB42_2
.LBB42_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$1272, %rax             # imm = 0x4F8
.Ltmp362:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp363:
	jmp	.LBB42_3
.LBB42_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$1120, %rax             # imm = 0x460
.Ltmp367:
	movq	%rax, %rdi
	callq	_ZN7sc_core6sc_outItED1Ev
.Ltmp368:
	jmp	.LBB42_4
.LBB42_4:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$976, %rax              # imm = 0x3D0
.Ltmp372:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
.Ltmp373:
	jmp	.LBB42_5
.LBB42_5:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$832, %rax              # imm = 0x340
.Ltmp377:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIiED1Ev
.Ltmp378:
	jmp	.LBB42_6
.LBB42_6:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$688, %rax              # imm = 0x2B0
.Ltmp382:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
.Ltmp383:
	jmp	.LBB42_7
.LBB42_7:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$528, %rax              # imm = 0x210
.Ltmp387:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp388:
	jmp	.LBB42_8
.LBB42_8:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$368, %rax              # imm = 0x170
.Ltmp392:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp393:
	jmp	.LBB42_9
.LBB42_9:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$208, %rax
.Ltmp397:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp398:
	jmp	.LBB42_10
.LBB42_10:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core9sc_moduleD2Ev
	addq	$48, %rsp
	popq	%rbp
	ret
.LBB42_11:
.Ltmp354:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$1296, %rax             # imm = 0x510
.Ltmp355:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp356:
	jmp	.LBB42_13
.LBB42_12:
.Ltmp359:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_15
.LBB42_13:
	jmp	.LBB42_15
.LBB42_14:
.Ltmp364:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_18
.LBB42_15:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$1272, %rax             # imm = 0x4F8
.Ltmp360:
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp361:
	jmp	.LBB42_16
.LBB42_16:
	jmp	.LBB42_18
.LBB42_17:
.Ltmp369:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_21
.LBB42_18:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$1120, %rax             # imm = 0x460
.Ltmp365:
	movq	%rax, %rdi
	callq	_ZN7sc_core6sc_outItED1Ev
.Ltmp366:
	jmp	.LBB42_19
.LBB42_19:
	jmp	.LBB42_21
.LBB42_20:
.Ltmp374:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_24
.LBB42_21:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$976, %rax              # imm = 0x3D0
.Ltmp370:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
.Ltmp371:
	jmp	.LBB42_22
.LBB42_22:
	jmp	.LBB42_24
.LBB42_23:
.Ltmp379:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_27
.LBB42_24:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$832, %rax              # imm = 0x340
.Ltmp375:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIiED1Ev
.Ltmp376:
	jmp	.LBB42_25
.LBB42_25:
	jmp	.LBB42_27
.LBB42_26:
.Ltmp384:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_30
.LBB42_27:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$688, %rax              # imm = 0x2B0
.Ltmp380:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
.Ltmp381:
	jmp	.LBB42_28
.LBB42_28:
	jmp	.LBB42_30
.LBB42_29:
.Ltmp389:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_33
.LBB42_30:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$528, %rax              # imm = 0x210
.Ltmp385:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp386:
	jmp	.LBB42_31
.LBB42_31:
	jmp	.LBB42_33
.LBB42_32:
.Ltmp394:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_36
.LBB42_33:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$368, %rax              # imm = 0x170
.Ltmp390:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp391:
	jmp	.LBB42_34
.LBB42_34:
	jmp	.LBB42_36
.LBB42_35:
.Ltmp399:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	jmp	.LBB42_38
.LBB42_36:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$208, %rax
.Ltmp395:
	movq	%rax, %rdi
	callq	_ZN7sc_core5sc_inIbED1Ev
.Ltmp396:
	jmp	.LBB42_37
.LBB42_37:
	jmp	.LBB42_38
.LBB42_38:
.Ltmp400:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core9sc_moduleD2Ev
.Ltmp401:
	jmp	.LBB42_39
.LBB42_39:
	jmp	.LBB42_40
.LBB42_40:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB42_41:
.Ltmp402:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp408:
	.size	_ZN5TimerD2Ev, .Ltmp408-_ZN5TimerD2Ev
	.cfi_endproc
.Leh_func_end42:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table42:
.Lexception42:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\262\201\200"         # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.ascii	 "\251\001"             # Call site table length
.Lset125 = .Ltmp352-.Leh_func_begin42   # >> Call Site 1 <<
	.long	.Lset125
.Lset126 = .Ltmp353-.Ltmp352            #   Call between .Ltmp352 and .Ltmp353
	.long	.Lset126
.Lset127 = .Ltmp354-.Leh_func_begin42   #     jumps to .Ltmp354
	.long	.Lset127
	.byte	0                       #   On action: cleanup
.Lset128 = .Ltmp357-.Leh_func_begin42   # >> Call Site 2 <<
	.long	.Lset128
.Lset129 = .Ltmp358-.Ltmp357            #   Call between .Ltmp357 and .Ltmp358
	.long	.Lset129
.Lset130 = .Ltmp359-.Leh_func_begin42   #     jumps to .Ltmp359
	.long	.Lset130
	.byte	0                       #   On action: cleanup
.Lset131 = .Ltmp362-.Leh_func_begin42   # >> Call Site 3 <<
	.long	.Lset131
.Lset132 = .Ltmp363-.Ltmp362            #   Call between .Ltmp362 and .Ltmp363
	.long	.Lset132
.Lset133 = .Ltmp364-.Leh_func_begin42   #     jumps to .Ltmp364
	.long	.Lset133
	.byte	0                       #   On action: cleanup
.Lset134 = .Ltmp367-.Leh_func_begin42   # >> Call Site 4 <<
	.long	.Lset134
.Lset135 = .Ltmp368-.Ltmp367            #   Call between .Ltmp367 and .Ltmp368
	.long	.Lset135
.Lset136 = .Ltmp369-.Leh_func_begin42   #     jumps to .Ltmp369
	.long	.Lset136
	.byte	0                       #   On action: cleanup
.Lset137 = .Ltmp372-.Leh_func_begin42   # >> Call Site 5 <<
	.long	.Lset137
.Lset138 = .Ltmp373-.Ltmp372            #   Call between .Ltmp372 and .Ltmp373
	.long	.Lset138
.Lset139 = .Ltmp374-.Leh_func_begin42   #     jumps to .Ltmp374
	.long	.Lset139
	.byte	0                       #   On action: cleanup
.Lset140 = .Ltmp377-.Leh_func_begin42   # >> Call Site 6 <<
	.long	.Lset140
.Lset141 = .Ltmp378-.Ltmp377            #   Call between .Ltmp377 and .Ltmp378
	.long	.Lset141
.Lset142 = .Ltmp379-.Leh_func_begin42   #     jumps to .Ltmp379
	.long	.Lset142
	.byte	0                       #   On action: cleanup
.Lset143 = .Ltmp382-.Leh_func_begin42   # >> Call Site 7 <<
	.long	.Lset143
.Lset144 = .Ltmp383-.Ltmp382            #   Call between .Ltmp382 and .Ltmp383
	.long	.Lset144
.Lset145 = .Ltmp384-.Leh_func_begin42   #     jumps to .Ltmp384
	.long	.Lset145
	.byte	0                       #   On action: cleanup
.Lset146 = .Ltmp387-.Leh_func_begin42   # >> Call Site 8 <<
	.long	.Lset146
.Lset147 = .Ltmp388-.Ltmp387            #   Call between .Ltmp387 and .Ltmp388
	.long	.Lset147
.Lset148 = .Ltmp389-.Leh_func_begin42   #     jumps to .Ltmp389
	.long	.Lset148
	.byte	0                       #   On action: cleanup
.Lset149 = .Ltmp392-.Leh_func_begin42   # >> Call Site 9 <<
	.long	.Lset149
.Lset150 = .Ltmp393-.Ltmp392            #   Call between .Ltmp392 and .Ltmp393
	.long	.Lset150
.Lset151 = .Ltmp394-.Leh_func_begin42   #     jumps to .Ltmp394
	.long	.Lset151
	.byte	0                       #   On action: cleanup
.Lset152 = .Ltmp397-.Leh_func_begin42   # >> Call Site 10 <<
	.long	.Lset152
.Lset153 = .Ltmp398-.Ltmp397            #   Call between .Ltmp397 and .Ltmp398
	.long	.Lset153
.Lset154 = .Ltmp399-.Leh_func_begin42   #     jumps to .Ltmp399
	.long	.Lset154
	.byte	0                       #   On action: cleanup
.Lset155 = .Ltmp398-.Leh_func_begin42   # >> Call Site 11 <<
	.long	.Lset155
.Lset156 = .Ltmp355-.Ltmp398            #   Call between .Ltmp398 and .Ltmp355
	.long	.Lset156
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset157 = .Ltmp355-.Leh_func_begin42   # >> Call Site 12 <<
	.long	.Lset157
.Lset158 = .Ltmp401-.Ltmp355            #   Call between .Ltmp355 and .Ltmp401
	.long	.Lset158
.Lset159 = .Ltmp402-.Leh_func_begin42   #     jumps to .Ltmp402
	.long	.Lset159
	.byte	1                       #   On action: 1
.Lset160 = .Ltmp401-.Leh_func_begin42   # >> Call Site 13 <<
	.long	.Lset160
.Lset161 = .Leh_func_end42-.Ltmp401     #   Call between .Ltmp401 and .Leh_func_end42
	.long	.Lset161
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp411:
	.cfi_def_cfa_offset 16
.Ltmp412:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp413:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB43_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str10, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB43_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp414:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv, .Ltmp414-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEptEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE,@function
_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE: # @_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp417:
	.cfi_def_cfa_offset 16
.Ltmp418:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp419:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp420:
	.size	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE, .Ltmp420-_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_basemmEi,"axG",@progbits,_ZN5sc_dt12sc_uint_basemmEi,comdat
	.weak	_ZN5sc_dt12sc_uint_basemmEi
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_basemmEi,@function
_ZN5sc_dt12sc_uint_basemmEi:            # @_ZN5sc_dt12sc_uint_basemmEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin45:
	.cfi_lsda 3, .Lexception45
# BB#0:
	pushq	%rbp
.Ltmp429:
	.cfi_def_cfa_offset 16
.Ltmp430:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp431:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	movb	$0, -13(%rbp)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_baseC1ERKS0_
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rsi
	decq	%rsi
	movq	%rsi, 8(%rax)
.Ltmp421:
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
.Ltmp422:
	jmp	.LBB45_1
.LBB45_1:
	movb	$1, -13(%rbp)
	movl	$1, -32(%rbp)
	testb	$1, -13(%rbp)
	jne	.LBB45_4
	jmp	.LBB45_3
.LBB45_2:
.Ltmp423:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp424:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp425:
	jmp	.LBB45_5
.LBB45_3:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.LBB45_4:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB45_5:
	jmp	.LBB45_6
.LBB45_6:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB45_7:
.Ltmp426:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp432:
	.size	_ZN5sc_dt12sc_uint_basemmEi, .Ltmp432-_ZN5sc_dt12sc_uint_basemmEi
	.cfi_endproc
.Leh_func_end45:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table45:
.Lexception45:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset162 = .Leh_func_begin45-.Leh_func_begin45 # >> Call Site 1 <<
	.long	.Lset162
.Lset163 = .Ltmp421-.Leh_func_begin45   #   Call between .Leh_func_begin45 and .Ltmp421
	.long	.Lset163
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset164 = .Ltmp421-.Leh_func_begin45   # >> Call Site 2 <<
	.long	.Lset164
.Lset165 = .Ltmp422-.Ltmp421            #   Call between .Ltmp421 and .Ltmp422
	.long	.Lset165
.Lset166 = .Ltmp423-.Leh_func_begin45   #     jumps to .Ltmp423
	.long	.Lset166
	.byte	0                       #   On action: cleanup
.Lset167 = .Ltmp424-.Leh_func_begin45   # >> Call Site 3 <<
	.long	.Lset167
.Lset168 = .Ltmp425-.Ltmp424            #   Call between .Ltmp424 and .Ltmp425
	.long	.Lset168
.Lset169 = .Ltmp426-.Leh_func_begin45   #     jumps to .Ltmp426
	.long	.Lset169
	.byte	1                       #   On action: 1
.Lset170 = .Ltmp425-.Leh_func_begin45   # >> Call Site 4 <<
	.long	.Lset170
.Lset171 = .Leh_func_end45-.Ltmp425     #   Call between .Ltmp425 and .Leh_func_end45
	.long	.Lset171
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseD1Ev,"axG",@progbits,_ZN5sc_dt12sc_uint_baseD1Ev,comdat
	.weak	_ZN5sc_dt12sc_uint_baseD1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseD1Ev,@function
_ZN5sc_dt12sc_uint_baseD1Ev:            # @_ZN5sc_dt12sc_uint_baseD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp435:
	.cfi_def_cfa_offset 16
.Ltmp436:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp437:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp438:
	.size	_ZN5sc_dt12sc_uint_baseD1Ev, .Ltmp438-_ZN5sc_dt12sc_uint_baseD1Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseD2Ev,"axG",@progbits,_ZN5sc_dt12sc_uint_baseD2Ev,comdat
	.weak	_ZN5sc_dt12sc_uint_baseD2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseD2Ev,@function
_ZN5sc_dt12sc_uint_baseD2Ev:            # @_ZN5sc_dt12sc_uint_baseD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp441:
	.cfi_def_cfa_offset 16
.Ltmp442:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp443:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt13sc_value_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp444:
	.size	_ZN5sc_dt12sc_uint_baseD2Ev, .Ltmp444-_ZN5sc_dt12sc_uint_baseD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt13sc_value_baseD2Ev,"axG",@progbits,_ZN5sc_dt13sc_value_baseD2Ev,comdat
	.weak	_ZN5sc_dt13sc_value_baseD2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt13sc_value_baseD2Ev,@function
_ZN5sc_dt13sc_value_baseD2Ev:           # @_ZN5sc_dt13sc_value_baseD2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp445:
	.size	_ZN5sc_dt13sc_value_baseD2Ev, .Ltmp445-_ZN5sc_dt13sc_value_baseD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseC1ERKS0_,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC1ERKS0_,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC1ERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC1ERKS0_,@function
_ZN5sc_dt12sc_uint_baseC1ERKS0_:        # @_ZN5sc_dt12sc_uint_baseC1ERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp448:
	.cfi_def_cfa_offset 16
.Ltmp449:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp450:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt12sc_uint_baseC2ERKS0_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp451:
	.size	_ZN5sc_dt12sc_uint_baseC1ERKS0_, .Ltmp451-_ZN5sc_dt12sc_uint_baseC1ERKS0_
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_base11extend_signEv,"axG",@progbits,_ZN5sc_dt12sc_uint_base11extend_signEv,comdat
	.weak	_ZN5sc_dt12sc_uint_base11extend_signEv
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_base11extend_signEv,@function
_ZN5sc_dt12sc_uint_base11extend_signEv: # @_ZN5sc_dt12sc_uint_base11extend_signEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	_ZN5sc_dt9UINT_ZEROE, %rax
	xorq	$-1, %rax
	movl	20(%rdi), %ecx
                                        # kill: CL<def> RCX<kill>
	shrq	%cl, %rax
	movq	8(%rdi), %rdx
	andq	%rax, %rdx
	movq	%rdx, 8(%rdi)
	ret
.Ltmp452:
	.size	_ZN5sc_dt12sc_uint_base11extend_signEv, .Ltmp452-_ZN5sc_dt12sc_uint_base11extend_signEv
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseC2ERKS0_,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC2ERKS0_,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC2ERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC2ERKS0_,@function
_ZN5sc_dt12sc_uint_baseC2ERKS0_:        # @_ZN5sc_dt12sc_uint_baseC2ERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp455:
	.cfi_def_cfa_offset 16
.Ltmp456:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp457:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN5sc_dt13sc_value_baseC2ERKS0_
	leaq	_ZTVN5sc_dt12sc_uint_baseE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%rsi)
	movq	-16(%rbp), %rax
	movl	16(%rax), %ecx
	movl	%ecx, 16(%rsi)
	movq	-16(%rbp), %rax
	movl	20(%rax), %ecx
	movl	%ecx, 20(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp458:
	.size	_ZN5sc_dt12sc_uint_baseC2ERKS0_, .Ltmp458-_ZN5sc_dt12sc_uint_baseC2ERKS0_
	.cfi_endproc

	.section	.text._ZN5sc_dt13sc_value_baseC2ERKS0_,"axG",@progbits,_ZN5sc_dt13sc_value_baseC2ERKS0_,comdat
	.weak	_ZN5sc_dt13sc_value_baseC2ERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt13sc_value_baseC2ERKS0_,@function
_ZN5sc_dt13sc_value_baseC2ERKS0_:       # @_ZN5sc_dt13sc_value_baseC2ERKS0_
	.cfi_startproc
# BB#0:
	leaq	_ZTVN5sc_dt13sc_value_baseE, %rax
	addq	$16, %rax
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	%rax, (%rsi)
	ret
.Ltmp459:
	.size	_ZN5sc_dt13sc_value_baseC2ERKS0_, .Ltmp459-_ZN5sc_dt13sc_value_baseC2ERKS0_
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE,@function
_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE: # @_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin53:
	.cfi_lsda 3, .Lexception53
# BB#0:
	pushq	%rbp
.Ltmp468:
	.cfi_def_cfa_offset 16
.Ltmp469:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp470:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movl	$32, %eax
	movq	%rsi, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movl	%eax, %esi
	callq	_ZN5sc_dt12sc_uint_baseC2Ei
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	$_ZTVN5sc_dt7sc_uintILi32EEE+16, (%rdi)
	movq	-16(%rbp), %rsi
.Ltmp460:
	callq	_ZN5sc_dt12sc_uint_baseaSERKS0_
.Ltmp461:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jmp	.LBB53_1
.LBB53_1:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB53_2:
.Ltmp462:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp463:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
.Ltmp464:
	jmp	.LBB53_3
.LBB53_3:
	jmp	.LBB53_4
.LBB53_4:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB53_5:
.Ltmp465:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp471:
	.size	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE, .Ltmp471-_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	.cfi_endproc
.Leh_func_end53:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table53:
.Lexception53:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset172 = .Leh_func_begin53-.Leh_func_begin53 # >> Call Site 1 <<
	.long	.Lset172
.Lset173 = .Ltmp460-.Leh_func_begin53   #   Call between .Leh_func_begin53 and .Ltmp460
	.long	.Lset173
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset174 = .Ltmp460-.Leh_func_begin53   # >> Call Site 2 <<
	.long	.Lset174
.Lset175 = .Ltmp461-.Ltmp460            #   Call between .Ltmp460 and .Ltmp461
	.long	.Lset175
.Lset176 = .Ltmp462-.Leh_func_begin53   #     jumps to .Ltmp462
	.long	.Lset176
	.byte	0                       #   On action: cleanup
.Lset177 = .Ltmp463-.Leh_func_begin53   # >> Call Site 3 <<
	.long	.Lset177
.Lset178 = .Ltmp464-.Ltmp463            #   Call between .Ltmp463 and .Ltmp464
	.long	.Lset178
.Lset179 = .Ltmp465-.Leh_func_begin53   #     jumps to .Ltmp465
	.long	.Lset179
	.byte	1                       #   On action: 1
.Lset180 = .Ltmp464-.Leh_func_begin53   # >> Call Site 4 <<
	.long	.Lset180
.Lset181 = .Leh_func_end53-.Ltmp464     #   Call between .Ltmp464 and .Leh_func_end53
	.long	.Lset181
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseC2Ei,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC2Ei,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC2Ei
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC2Ei,@function
_ZN5sc_dt12sc_uint_baseC2Ei:            # @_ZN5sc_dt12sc_uint_baseC2Ei
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin54:
	.cfi_lsda 3, .Lexception54
# BB#0:
	pushq	%rbp
.Ltmp480:
	.cfi_def_cfa_offset 16
.Ltmp481:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp482:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt13sc_value_baseC2Ev
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	$_ZTVN5sc_dt12sc_uint_baseE+16, (%rdi)
	movq	$0, 8(%rdi)
	movl	-12(%rbp), %esi
	movl	%esi, 16(%rdi)
	movl	$64, %eax
	subl	%esi, %eax
	movl	%eax, 20(%rdi)
.Ltmp472:
	callq	_ZNK5sc_dt12sc_uint_base12check_lengthEv
.Ltmp473:
	jmp	.LBB54_1
.LBB54_1:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB54_2:
.Ltmp474:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp475:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt13sc_value_baseD2Ev
.Ltmp476:
	jmp	.LBB54_3
.LBB54_3:
	jmp	.LBB54_4
.LBB54_4:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB54_5:
.Ltmp477:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp483:
	.size	_ZN5sc_dt12sc_uint_baseC2Ei, .Ltmp483-_ZN5sc_dt12sc_uint_baseC2Ei
	.cfi_endproc
.Leh_func_end54:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table54:
.Lexception54:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\257\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset182 = .Ltmp472-.Leh_func_begin54   # >> Call Site 1 <<
	.long	.Lset182
.Lset183 = .Ltmp473-.Ltmp472            #   Call between .Ltmp472 and .Ltmp473
	.long	.Lset183
.Lset184 = .Ltmp474-.Leh_func_begin54   #     jumps to .Ltmp474
	.long	.Lset184
	.byte	0                       #   On action: cleanup
.Lset185 = .Ltmp475-.Leh_func_begin54   # >> Call Site 2 <<
	.long	.Lset185
.Lset186 = .Ltmp476-.Ltmp475            #   Call between .Ltmp475 and .Ltmp476
	.long	.Lset186
.Lset187 = .Ltmp477-.Leh_func_begin54   #     jumps to .Ltmp477
	.long	.Lset187
	.byte	1                       #   On action: 1
.Lset188 = .Ltmp476-.Leh_func_begin54   # >> Call Site 3 <<
	.long	.Lset188
.Lset189 = .Leh_func_end54-.Ltmp476     #   Call between .Ltmp476 and .Leh_func_end54
	.long	.Lset189
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseaSERKS0_,"axG",@progbits,_ZN5sc_dt12sc_uint_baseaSERKS0_,comdat
	.weak	_ZN5sc_dt12sc_uint_baseaSERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseaSERKS0_,@function
_ZN5sc_dt12sc_uint_baseaSERKS0_:        # @_ZN5sc_dt12sc_uint_baseaSERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp486:
	.cfi_def_cfa_offset 16
.Ltmp487:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp488:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	8(%rdi), %rdi
	movq	%rdi, 8(%rsi)
	movq	%rsi, %rdi
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp489:
	.size	_ZN5sc_dt12sc_uint_baseaSERKS0_, .Ltmp489-_ZN5sc_dt12sc_uint_baseaSERKS0_
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,"axG",@progbits,_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,comdat
	.weak	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,@function
_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev: # @_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	ret
.Ltmp490:
	.size	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev, .Ltmp490-_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_base13concat_lengthEPb,"axG",@progbits,_ZNK5sc_dt12sc_uint_base13concat_lengthEPb,comdat
	.weak	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb,@function
_ZNK5sc_dt12sc_uint_base13concat_lengthEPb: # @_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp493:
	.cfi_def_cfa_offset 16
.Ltmp494:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp495:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, -16(%rbp)
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	je	.LBB57_2
# BB#1:
	movq	-16(%rbp), %rax
	movb	$0, (%rax)
.LBB57_2:
	movq	-24(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK5sc_dt12sc_uint_base6lengthEv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp496:
	.size	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb, .Ltmp496-_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EED0Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EED0Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EED0Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EED0Ev,@function
_ZN5sc_dt7sc_uintILi32EED0Ev:           # @_ZN5sc_dt7sc_uintILi32EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin58:
	.cfi_lsda 3, .Lexception58
# BB#0:
	pushq	%rbp
.Ltmp502:
	.cfi_def_cfa_offset 16
.Ltmp503:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp504:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp497:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp498:
	jmp	.LBB58_1
.LBB58_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB58_2:
.Ltmp499:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp505:
	.size	_ZN5sc_dt7sc_uintILi32EED0Ev, .Ltmp505-_ZN5sc_dt7sc_uintILi32EED0Ev
	.cfi_endproc
.Leh_func_end58:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table58:
.Lexception58:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset190 = .Ltmp497-.Leh_func_begin58   # >> Call Site 1 <<
	.long	.Lset190
.Lset191 = .Ltmp498-.Ltmp497            #   Call between .Ltmp497 and .Ltmp498
	.long	.Lset191
.Lset192 = .Ltmp499-.Leh_func_begin58   #     jumps to .Ltmp499
	.long	.Lset192
	.byte	0                       #   On action: cleanup
.Lset193 = .Ltmp498-.Leh_func_begin58   # >> Call Site 2 <<
	.long	.Lset193
.Lset194 = .Leh_func_end58-.Ltmp498     #   Call between .Ltmp498 and .Leh_func_end58
	.long	.Lset194
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNK5sc_dt12sc_uint_base6lengthEv,"axG",@progbits,_ZNK5sc_dt12sc_uint_base6lengthEv,comdat
	.weak	_ZNK5sc_dt12sc_uint_base6lengthEv
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base6lengthEv,@function
_ZNK5sc_dt12sc_uint_base6lengthEv:      # @_ZNK5sc_dt12sc_uint_base6lengthEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movl	16(%rdi), %eax
	ret
.Ltmp506:
	.size	_ZNK5sc_dt12sc_uint_base6lengthEv, .Ltmp506-_ZNK5sc_dt12sc_uint_base6lengthEv
	.cfi_endproc

	.section	.text._ZN5sc_dt13sc_value_baseC2Ev,"axG",@progbits,_ZN5sc_dt13sc_value_baseC2Ev,comdat
	.weak	_ZN5sc_dt13sc_value_baseC2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt13sc_value_baseC2Ev,@function
_ZN5sc_dt13sc_value_baseC2Ev:           # @_ZN5sc_dt13sc_value_baseC2Ev
	.cfi_startproc
# BB#0:
	leaq	_ZTVN5sc_dt13sc_value_baseE, %rax
	addq	$16, %rax
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rax, (%rdi)
	ret
.Ltmp507:
	.size	_ZN5sc_dt13sc_value_baseC2Ev, .Ltmp507-_ZN5sc_dt13sc_value_baseC2Ev
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_base12check_lengthEv,"axG",@progbits,_ZNK5sc_dt12sc_uint_base12check_lengthEv,comdat
	.weak	_ZNK5sc_dt12sc_uint_base12check_lengthEv
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base12check_lengthEv,@function
_ZNK5sc_dt12sc_uint_base12check_lengthEv: # @_ZNK5sc_dt12sc_uint_base12check_lengthEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp510:
	.cfi_def_cfa_offset 16
.Ltmp511:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp512:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpl	$0, 16(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jle	.LBB61_2
# BB#1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	cmpl	$64, 16(%rax)
	jle	.LBB61_3
.LBB61_2:
	movq	-16(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK5sc_dt12sc_uint_base14invalid_lengthEv
.LBB61_3:
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp513:
	.size	_ZNK5sc_dt12sc_uint_base12check_lengthEv, .Ltmp513-_ZNK5sc_dt12sc_uint_base12check_lengthEv
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseppEi,"axG",@progbits,_ZN5sc_dt12sc_uint_baseppEi,comdat
	.weak	_ZN5sc_dt12sc_uint_baseppEi
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseppEi,@function
_ZN5sc_dt12sc_uint_baseppEi:            # @_ZN5sc_dt12sc_uint_baseppEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin62:
	.cfi_lsda 3, .Lexception62
# BB#0:
	pushq	%rbp
.Ltmp522:
	.cfi_def_cfa_offset 16
.Ltmp523:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp524:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	movb	$0, -13(%rbp)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_baseC1ERKS0_
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rsi
	incq	%rsi
	movq	%rsi, 8(%rax)
.Ltmp514:
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
.Ltmp515:
	jmp	.LBB62_1
.LBB62_1:
	movb	$1, -13(%rbp)
	movl	$1, -32(%rbp)
	testb	$1, -13(%rbp)
	jne	.LBB62_4
	jmp	.LBB62_3
.LBB62_2:
.Ltmp516:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp517:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp518:
	jmp	.LBB62_5
.LBB62_3:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.LBB62_4:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB62_5:
	jmp	.LBB62_6
.LBB62_6:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB62_7:
.Ltmp519:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp525:
	.size	_ZN5sc_dt12sc_uint_baseppEi, .Ltmp525-_ZN5sc_dt12sc_uint_baseppEi
	.cfi_endproc
.Leh_func_end62:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table62:
.Lexception62:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset195 = .Leh_func_begin62-.Leh_func_begin62 # >> Call Site 1 <<
	.long	.Lset195
.Lset196 = .Ltmp514-.Leh_func_begin62   #   Call between .Leh_func_begin62 and .Ltmp514
	.long	.Lset196
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset197 = .Ltmp514-.Leh_func_begin62   # >> Call Site 2 <<
	.long	.Lset197
.Lset198 = .Ltmp515-.Ltmp514            #   Call between .Ltmp514 and .Ltmp515
	.long	.Lset198
.Lset199 = .Ltmp516-.Leh_func_begin62   #     jumps to .Ltmp516
	.long	.Lset199
	.byte	0                       #   On action: cleanup
.Lset200 = .Ltmp517-.Leh_func_begin62   # >> Call Site 3 <<
	.long	.Lset200
.Lset201 = .Ltmp518-.Ltmp517            #   Call between .Ltmp517 and .Ltmp518
	.long	.Lset201
.Lset202 = .Ltmp519-.Leh_func_begin62   #     jumps to .Ltmp519
	.long	.Lset202
	.byte	1                       #   On action: 1
.Lset203 = .Ltmp518-.Leh_func_begin62   # >> Call Site 4 <<
	.long	.Lset203
.Lset204 = .Leh_func_end62-.Ltmp518     #   Call between .Ltmp518 and .Leh_func_end62
	.long	.Lset204
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseaSEi,"axG",@progbits,_ZN5sc_dt12sc_uint_baseaSEi,comdat
	.weak	_ZN5sc_dt12sc_uint_baseaSEi
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseaSEi,@function
_ZN5sc_dt12sc_uint_baseaSEi:            # @_ZN5sc_dt12sc_uint_baseaSEi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp528:
	.cfi_def_cfa_offset 16
.Ltmp529:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp530:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movslq	-12(%rbp), %rax
	movq	%rax, 8(%rdi)
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp531:
	.size	_ZN5sc_dt12sc_uint_baseaSEi, .Ltmp531-_ZN5sc_dt12sc_uint_baseaSEi
	.cfi_endproc

	.section	.text._ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv,"axG",@progbits,_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv,comdat
	.weak	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv
	.align	16, 0x90
	.type	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv,@function
_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv: # @_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp534:
	.cfi_def_cfa_offset 16
.Ltmp535:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp536:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZNK5sc_dt10sc_bv_base6lengthEv
	movl	%eax, -28(%rbp)
	movq	$0, -40(%rbp)
	cmpl	$32, -28(%rbp)
	jle	.LBB64_4
# BB#1:
	movl	$1, %esi
	movq	-24(%rbp), %rdi
	callq	_ZNK5sc_dt10sc_bv_base9get_cwordEi
	cmpl	$0, %eax
	je	.LBB64_3
# BB#2:
	movl	$1, %edi
	xorl	%edx, %edx
	movl	$1444, %r8d             # imm = 0x5A4
	movl	$_ZN7sc_core34SC_ID_VECTOR_CONTAINS_LOGIC_VALUE_E, %esi
	movl	$.L.str11, %ecx
	callq	_ZN7sc_core17sc_report_handler6reportENS_11sc_severityEPKcS3_S3_i
.LBB64_3:
	movl	$1, %esi
	movq	-24(%rbp), %rdi
	callq	_ZNK5sc_dt10sc_bv_base8get_wordEi
	movl	%eax, %edi
	movq	%rdi, -40(%rbp)
.LBB64_4:
	movl	$0, %esi
	movq	-24(%rbp), %rdi
	callq	_ZNK5sc_dt10sc_bv_base9get_cwordEi
	cmpl	$0, %eax
	je	.LBB64_6
# BB#5:
	movl	$1, %edi
	xorl	%edx, %edx
	movl	$1448, %r8d             # imm = 0x5A8
	movl	$_ZN7sc_core34SC_ID_VECTOR_CONTAINS_LOGIC_VALUE_E, %esi
	movl	$.L.str11, %ecx
	callq	_ZN7sc_core17sc_report_handler6reportENS_11sc_severityEPKcS3_S3_i
.LBB64_6:
	movl	$0, %esi
	movq	-40(%rbp), %rax
	shlq	$32, %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNK5sc_dt10sc_bv_base8get_wordEi
	movl	%eax, %edi
	movq	-64(%rbp), %rcx         # 8-byte Reload
	orq	%rdi, %rcx
	movq	%rcx, -40(%rbp)
	cmpl	$64, -28(%rbp)
	jl	.LBB64_8
# BB#7:
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB64_11
.LBB64_8:
	movq	$0, -48(%rbp)
	movq	-24(%rbp), %rdi
	movl	-28(%rbp), %eax
	decl	%eax
	movl	%eax, %esi
	callq	_ZNK5sc_dt10sc_bv_base7get_bitEi
	movb	%al, -49(%rbp)
	movzbl	-49(%rbp), %esi
	cmpl	$0, %esi
	jne	.LBB64_10
# BB#9:
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rcx
	xorq	$-1, %rcx
	movl	$64, %edx
	subl	-28(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, -72(%rbp)         # 8-byte Spill
	movq	%rsi, %rcx
                                        # kill: CL<def> RCX<kill>
	movq	-72(%rbp), %rsi         # 8-byte Reload
	shrq	%cl, %rsi
	andq	%rsi, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB64_11
.LBB64_10:
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rcx
	xorq	$-1, %rcx
	movl	-28(%rbp), %edx
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	movq	%rdx, %rcx
                                        # kill: CL<def> RCX<kill>
	movq	-80(%rbp), %rdx         # 8-byte Reload
	shlq	%cl, %rdx
	orq	%rdx, %rax
	movq	%rax, -8(%rbp)
.LBB64_11:
	movq	-8(%rbp), %rax
	addq	$80, %rsp
	popq	%rbp
	ret
.Ltmp537:
	.size	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv, .Ltmp537-_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE18to_anything_signedEv
	.cfi_endproc

	.section	.text._ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv,"axG",@progbits,_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv,comdat
	.weak	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv
	.align	16, 0x90
	.type	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv,@function
_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv: # @_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp538:
	.size	_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv, .Ltmp538-_ZNK5sc_dt8sc_proxyINS_10sc_bv_baseEE9back_castEv
	.cfi_endproc

	.section	.text._ZNK5sc_dt10sc_bv_base6lengthEv,"axG",@progbits,_ZNK5sc_dt10sc_bv_base6lengthEv,comdat
	.weak	_ZNK5sc_dt10sc_bv_base6lengthEv
	.align	16, 0x90
	.type	_ZNK5sc_dt10sc_bv_base6lengthEv,@function
_ZNK5sc_dt10sc_bv_base6lengthEv:        # @_ZNK5sc_dt10sc_bv_base6lengthEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movl	8(%rdi), %eax
	ret
.Ltmp539:
	.size	_ZNK5sc_dt10sc_bv_base6lengthEv, .Ltmp539-_ZNK5sc_dt10sc_bv_base6lengthEv
	.cfi_endproc

	.section	.text._ZNK5sc_dt10sc_bv_base9get_cwordEi,"axG",@progbits,_ZNK5sc_dt10sc_bv_base9get_cwordEi,comdat
	.weak	_ZNK5sc_dt10sc_bv_base9get_cwordEi
	.align	16, 0x90
	.type	_ZNK5sc_dt10sc_bv_base9get_cwordEi,@function
_ZNK5sc_dt10sc_bv_base9get_cwordEi:     # @_ZNK5sc_dt10sc_bv_base9get_cwordEi
	.cfi_startproc
# BB#0:
	movl	$0, %eax
	movq	%rdi, -8(%rsp)
	movl	%esi, -12(%rsp)
	ret
.Ltmp540:
	.size	_ZNK5sc_dt10sc_bv_base9get_cwordEi, .Ltmp540-_ZNK5sc_dt10sc_bv_base9get_cwordEi
	.cfi_endproc

	.section	.text._ZNK5sc_dt10sc_bv_base8get_wordEi,"axG",@progbits,_ZNK5sc_dt10sc_bv_base8get_wordEi,comdat
	.weak	_ZNK5sc_dt10sc_bv_base8get_wordEi
	.align	16, 0x90
	.type	_ZNK5sc_dt10sc_bv_base8get_wordEi,@function
_ZNK5sc_dt10sc_bv_base8get_wordEi:      # @_ZNK5sc_dt10sc_bv_base8get_wordEi
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movl	%esi, -12(%rsp)
	movq	-8(%rsp), %rdi
	movslq	-12(%rsp), %rax
	movq	16(%rdi), %rdi
	movl	(%rdi,%rax,4), %eax
	ret
.Ltmp541:
	.size	_ZNK5sc_dt10sc_bv_base8get_wordEi, .Ltmp541-_ZNK5sc_dt10sc_bv_base8get_wordEi
	.cfi_endproc

	.section	.text._ZNK5sc_dt10sc_bv_base7get_bitEi,"axG",@progbits,_ZNK5sc_dt10sc_bv_base7get_bitEi,comdat
	.weak	_ZNK5sc_dt10sc_bv_base7get_bitEi
	.align	16, 0x90
	.type	_ZNK5sc_dt10sc_bv_base7get_bitEi,@function
_ZNK5sc_dt10sc_bv_base7get_bitEi:       # @_ZNK5sc_dt10sc_bv_base7get_bitEi
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movl	%esi, -12(%rsp)
	movq	-8(%rsp), %rdi
	movl	%esi, %eax
	sarl	$31, %eax
	shrl	$27, %eax
	addl	%eax, %esi
	sarl	$5, %esi
	movl	%esi, -16(%rsp)
	movl	-12(%rsp), %eax
	movl	%eax, %esi
	sarl	$31, %esi
	shrl	$27, %esi
	movl	%eax, %ecx
	addl	%esi, %ecx
	andl	$-32, %ecx
	subl	%ecx, %eax
	movl	%eax, -20(%rsp)
	movq	16(%rdi), %rdi
	movslq	-16(%rsp), %rdx
	movl	(%rdi,%rdx,4), %eax
	movb	-20(%rsp), %cl
	shrl	%cl, %eax
	andl	$1, %eax
	ret
.Ltmp542:
	.size	_ZNK5sc_dt10sc_bv_base7get_bitEi, .Ltmp542-_ZNK5sc_dt10sc_bv_base7get_bitEi
	.cfi_endproc

	.section	.text._ZN5sc_dt5sc_bvILi13EEC2ERKS1_,"axG",@progbits,_ZN5sc_dt5sc_bvILi13EEC2ERKS1_,comdat
	.weak	_ZN5sc_dt5sc_bvILi13EEC2ERKS1_
	.align	16, 0x90
	.type	_ZN5sc_dt5sc_bvILi13EEC2ERKS1_,@function
_ZN5sc_dt5sc_bvILi13EEC2ERKS1_:         # @_ZN5sc_dt5sc_bvILi13EEC2ERKS1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp545:
	.cfi_def_cfa_offset 16
.Ltmp546:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp547:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN5sc_dt10sc_bv_baseC2ERKS0_
	leaq	_ZTVN5sc_dt5sc_bvILi13EEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp548:
	.size	_ZN5sc_dt5sc_bvILi13EEC2ERKS1_, .Ltmp548-_ZN5sc_dt5sc_bvILi13EEC2ERKS1_
	.cfi_endproc

	.section	.text._ZN5sc_dt5sc_bvILi13EED0Ev,"axG",@progbits,_ZN5sc_dt5sc_bvILi13EED0Ev,comdat
	.weak	_ZN5sc_dt5sc_bvILi13EED0Ev
	.align	16, 0x90
	.type	_ZN5sc_dt5sc_bvILi13EED0Ev,@function
_ZN5sc_dt5sc_bvILi13EED0Ev:             # @_ZN5sc_dt5sc_bvILi13EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin71:
	.cfi_lsda 3, .Lexception71
# BB#0:
	pushq	%rbp
.Ltmp554:
	.cfi_def_cfa_offset 16
.Ltmp555:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp556:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp549:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt5sc_bvILi13EED1Ev
.Ltmp550:
	jmp	.LBB71_1
.LBB71_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB71_2:
.Ltmp551:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp557:
	.size	_ZN5sc_dt5sc_bvILi13EED0Ev, .Ltmp557-_ZN5sc_dt5sc_bvILi13EED0Ev
	.cfi_endproc
.Leh_func_end71:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table71:
.Lexception71:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset205 = .Ltmp549-.Leh_func_begin71   # >> Call Site 1 <<
	.long	.Lset205
.Lset206 = .Ltmp550-.Ltmp549            #   Call between .Ltmp549 and .Ltmp550
	.long	.Lset206
.Lset207 = .Ltmp551-.Leh_func_begin71   #     jumps to .Ltmp551
	.long	.Lset207
	.byte	0                       #   On action: cleanup
.Lset208 = .Ltmp550-.Leh_func_begin71   # >> Call Site 2 <<
	.long	.Lset208
.Lset209 = .Leh_func_end71-.Ltmp550     #   Call between .Ltmp550 and .Leh_func_end71
	.long	.Lset209
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp560:
	.cfi_def_cfa_offset 16
.Ltmp561:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp562:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB72_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str10, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB72_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp563:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv, .Ltmp563-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEptEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp566:
	.cfi_def_cfa_offset 16
.Ltmp567:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp568:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB73_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str10, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB73_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp569:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv, .Ltmp569-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEptEv
	.cfi_endproc

	.section	.text._ZN7sc_core6sc_outItED2Ev,"axG",@progbits,_ZN7sc_core6sc_outItED2Ev,comdat
	.weak	_ZN7sc_core6sc_outItED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core6sc_outItED2Ev,@function
_ZN7sc_core6sc_outItED2Ev:              # @_ZN7sc_core6sc_outItED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp572:
	.cfi_def_cfa_offset 16
.Ltmp573:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp574:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core8sc_inoutItED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp575:
	.size	_ZN7sc_core6sc_outItED2Ev, .Ltmp575-_ZN7sc_core6sc_outItED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutItED2Ev,"axG",@progbits,_ZN7sc_core8sc_inoutItED2Ev,comdat
	.weak	_ZN7sc_core8sc_inoutItED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutItED2Ev,@function
_ZN7sc_core8sc_inoutItED2Ev:            # @_ZN7sc_core8sc_inoutItED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin75:
	.cfi_lsda 3, .Lexception75
# BB#0:
	pushq	%rbp
.Ltmp586:
	.cfi_def_cfa_offset 16
.Ltmp587:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp588:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	leaq	_ZTVN7sc_core8sc_inoutItEE, %rax
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rax, (%rdi)
	movq	144(%rdi), %rax
	cmpq	$0, %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	je	.LBB75_3
# BB#1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp576:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp577:
	jmp	.LBB75_2
.LBB75_2:
	jmp	.LBB75_3
.LBB75_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	je	.LBB75_5
# BB#4:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB75_5:
.Ltmp578:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK7sc_core8sc_inoutItE13remove_tracesEv
.Ltmp579:
	jmp	.LBB75_6
.LBB75_6:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB75_7:
.Ltmp580:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp581:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev
.Ltmp582:
	jmp	.LBB75_8
.LBB75_8:
	jmp	.LBB75_9
.LBB75_9:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB75_10:
.Ltmp583:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp589:
	.size	_ZN7sc_core8sc_inoutItED2Ev, .Ltmp589-_ZN7sc_core8sc_inoutItED2Ev
	.cfi_endproc
.Leh_func_end75:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table75:
.Lexception75:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset210 = .Ltmp576-.Leh_func_begin75   # >> Call Site 1 <<
	.long	.Lset210
.Lset211 = .Ltmp579-.Ltmp576            #   Call between .Ltmp576 and .Ltmp579
	.long	.Lset211
.Lset212 = .Ltmp580-.Leh_func_begin75   #     jumps to .Ltmp580
	.long	.Lset212
	.byte	0                       #   On action: cleanup
.Lset213 = .Ltmp579-.Leh_func_begin75   # >> Call Site 2 <<
	.long	.Lset213
.Lset214 = .Ltmp581-.Ltmp579            #   Call between .Ltmp579 and .Ltmp581
	.long	.Lset214
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset215 = .Ltmp581-.Leh_func_begin75   # >> Call Site 3 <<
	.long	.Lset215
.Lset216 = .Ltmp582-.Ltmp581            #   Call between .Ltmp581 and .Ltmp582
	.long	.Lset216
.Lset217 = .Ltmp583-.Leh_func_begin75   #     jumps to .Ltmp583
	.long	.Lset217
	.byte	1                       #   On action: 1
.Lset218 = .Ltmp582-.Leh_func_begin75   # >> Call Site 4 <<
	.long	.Lset218
.Lset219 = .Leh_func_end75-.Ltmp582     #   Call between .Ltmp582 and .Leh_func_end75
	.long	.Lset219
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core8sc_inoutItE13remove_tracesEv,"axG",@progbits,_ZNK7sc_core8sc_inoutItE13remove_tracesEv,comdat
	.weak	_ZNK7sc_core8sc_inoutItE13remove_tracesEv
	.align	16, 0x90
	.type	_ZNK7sc_core8sc_inoutItE13remove_tracesEv,@function
_ZNK7sc_core8sc_inoutItE13remove_tracesEv: # @_ZNK7sc_core8sc_inoutItE13remove_tracesEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin76:
	.cfi_lsda 3, .Lexception76
# BB#0:
	pushq	%rbp
.Ltmp598:
	.cfi_def_cfa_offset 16
.Ltmp599:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp600:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 136(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB76_14
# BB#1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	subq	$1, %rax
	movl	%eax, %ecx
	movl	%ecx, -12(%rbp)
.LBB76_2:                               # =>This Inner Loop Header: Depth=1
	cmpl	$0, -12(%rbp)
	jl	.LBB76_9
# BB#3:                                 #   in Loop: Header=BB76_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	je	.LBB76_6
# BB#4:                                 #   in Loop: Header=BB76_2 Depth=1
.Ltmp593:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core15sc_trace_paramsD1Ev
.Ltmp594:
	jmp	.LBB76_5
.LBB76_5:                               #   in Loop: Header=BB76_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB76_6:                               #   in Loop: Header=BB76_2 Depth=1
	jmp	.LBB76_7
.LBB76_7:                               #   in Loop: Header=BB76_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, -12(%rbp)
	jmp	.LBB76_2
.LBB76_8:
.Ltmp595:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB76_15
.LBB76_9:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	je	.LBB76_12
# BB#10:
.Ltmp590:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
.Ltmp591:
	jmp	.LBB76_11
.LBB76_11:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB76_12:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	$0, 136(%rax)
	jmp	.LBB76_14
.LBB76_13:
.Ltmp592:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB76_15
.LBB76_14:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB76_15:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp601:
	.size	_ZNK7sc_core8sc_inoutItE13remove_tracesEv, .Ltmp601-_ZNK7sc_core8sc_inoutItE13remove_tracesEv
	.cfi_endproc
.Leh_func_end76:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table76:
.Lexception76:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset220 = .Ltmp593-.Leh_func_begin76   # >> Call Site 1 <<
	.long	.Lset220
.Lset221 = .Ltmp594-.Ltmp593            #   Call between .Ltmp593 and .Ltmp594
	.long	.Lset221
.Lset222 = .Ltmp595-.Leh_func_begin76   #     jumps to .Ltmp595
	.long	.Lset222
	.byte	0                       #   On action: cleanup
.Lset223 = .Ltmp590-.Leh_func_begin76   # >> Call Site 2 <<
	.long	.Lset223
.Lset224 = .Ltmp591-.Ltmp590            #   Call between .Ltmp590 and .Ltmp591
	.long	.Lset224
.Lset225 = .Ltmp592-.Leh_func_begin76   #     jumps to .Ltmp592
	.long	.Lset225
	.byte	0                       #   On action: cleanup
.Lset226 = .Ltmp591-.Leh_func_begin76   # >> Call Site 3 <<
	.long	.Lset226
.Lset227 = .Leh_func_end76-.Ltmp591     #   Call between .Ltmp591 and .Leh_func_end76
	.long	.Lset227
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev,@function
_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev: # @_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp604:
	.cfi_def_cfa_offset 16
.Ltmp605:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp606:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp607:
	.size	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev, .Ltmp607-_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core8sc_inoutItE4kindEv,"axG",@progbits,_ZNK7sc_core8sc_inoutItE4kindEv,comdat
	.weak	_ZNK7sc_core8sc_inoutItE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core8sc_inoutItE4kindEv,@function
_ZNK7sc_core8sc_inoutItE4kindEv:        # @_ZNK7sc_core8sc_inoutItE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str17, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp608:
	.size	_ZNK7sc_core8sc_inoutItE4kindEv, .Ltmp608-_ZNK7sc_core8sc_inoutItE4kindEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_object17get_child_objectsEv,"axG",@progbits,_ZNK7sc_core9sc_object17get_child_objectsEv,comdat
	.weak	_ZNK7sc_core9sc_object17get_child_objectsEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_object17get_child_objectsEv,@function
_ZNK7sc_core9sc_object17get_child_objectsEv: # @_ZNK7sc_core9sc_object17get_child_objectsEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	addq	$40, %rdi
	movq	%rdi, %rax
	ret
.Ltmp609:
	.size	_ZNK7sc_core9sc_object17get_child_objectsEv, .Ltmp609-_ZNK7sc_core9sc_object17get_child_objectsEv
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutItED1Ev,"axG",@progbits,_ZN7sc_core8sc_inoutItED1Ev,comdat
	.weak	_ZN7sc_core8sc_inoutItED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutItED1Ev,@function
_ZN7sc_core8sc_inoutItED1Ev:            # @_ZN7sc_core8sc_inoutItED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp612:
	.cfi_def_cfa_offset 16
.Ltmp613:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp614:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core8sc_inoutItED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp615:
	.size	_ZN7sc_core8sc_inoutItED1Ev, .Ltmp615-_ZN7sc_core8sc_inoutItED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutItED0Ev,"axG",@progbits,_ZN7sc_core8sc_inoutItED0Ev,comdat
	.weak	_ZN7sc_core8sc_inoutItED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutItED0Ev,@function
_ZN7sc_core8sc_inoutItED0Ev:            # @_ZN7sc_core8sc_inoutItED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin81:
	.cfi_lsda 3, .Lexception81
# BB#0:
	pushq	%rbp
.Ltmp621:
	.cfi_def_cfa_offset 16
.Ltmp622:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp623:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp616:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core8sc_inoutItED1Ev
.Ltmp617:
	jmp	.LBB81_1
.LBB81_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB81_2:
.Ltmp618:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp624:
	.size	_ZN7sc_core8sc_inoutItED0Ev, .Ltmp624-_ZN7sc_core8sc_inoutItED0Ev
	.cfi_endproc
.Leh_func_end81:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table81:
.Lexception81:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset228 = .Ltmp616-.Leh_func_begin81   # >> Call Site 1 <<
	.long	.Lset228
.Lset229 = .Ltmp617-.Ltmp616            #   Call between .Ltmp616 and .Ltmp617
	.long	.Lset229
.Lset230 = .Ltmp618-.Leh_func_begin81   #     jumps to .Ltmp618
	.long	.Lset230
	.byte	0                       #   On action: cleanup
.Lset231 = .Ltmp617-.Leh_func_begin81   # >> Call Site 2 <<
	.long	.Lset231
.Lset232 = .Leh_func_end81-.Ltmp617     #   Call between .Ltmp617 and .Leh_func_end81
	.long	.Lset232
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB82_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB82_3
.LBB82_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB82_3
.LBB82_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp625:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv, .Ltmp625-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv,@function
_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv: # @_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB83_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB83_3
.LBB83_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB83_3
.LBB83_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp626:
	.size	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv, .Ltmp626-_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp629:
	.cfi_def_cfa_offset 16
.Ltmp630:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp631:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB84_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core18sc_signal_inout_ifItEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB84_3
.LBB84_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB84_3
.LBB84_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB84_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB84_6
.LBB84_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	movl	$0, -4(%rbp)
.LBB84_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp632:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE, .Ltmp632-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp635:
	.cfi_def_cfa_offset 16
.Ltmp636:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp637:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB85_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB85_3
.LBB85_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB85_3
.LBB85_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB85_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB85_6
.LBB85_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
.LBB85_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp638:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE, .Ltmp638-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp641:
	.cfi_def_cfa_offset 16
.Ltmp642:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp643:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB86_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core18sc_signal_inout_ifItEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB86_3
.LBB86_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB86_3
.LBB86_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB86_5
# BB#4:
	jmp	.LBB86_6
.LBB86_5:
	leaq	.L.str14, %rdi
	leaq	.L.str13, %rsi
	movl	$541, %edx              # imm = 0x21D
	leaq	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE, %rcx
	callq	__assert_fail
.LBB86_6:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB86_7:                               # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB86_12
# BB#8:                                 #   in Loop: Header=BB86_7 Depth=1
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	addq	$104, %rcx
	movslq	-32(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	movq	-72(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	jne	.LBB86_10
# BB#9:                                 #   in Loop: Header=BB86_7 Depth=1
	leaq	_ZN7sc_core22SC_ID_BIND_IF_TO_PORT_E, %rsi
	leaq	.L.str15, %rdx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB86_10:                              #   in Loop: Header=BB86_7 Depth=1
	jmp	.LBB86_11
.LBB86_11:                              #   in Loop: Header=BB86_7 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB86_7
.LBB86_12:
	leaq	-24(%rbp), %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_
	movabsq	$0, %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, 96(%rsi)
	addq	$80, %rsp
	popq	%rbp
	ret
.Ltmp644:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE, .Ltmp644-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp647:
	.cfi_def_cfa_offset 16
.Ltmp648:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp649:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$104, %rdi
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, %eax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp650:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv, .Ltmp650-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv,@function
_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv: # @_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp653:
	.cfi_def_cfa_offset 16
.Ltmp654:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp655:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZTIN7sc_core18sc_signal_inout_ifItEE, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt9type_info4nameEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp656:
	.size	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv, .Ltmp656-_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutItE18end_of_elaborationEv,"axG",@progbits,_ZN7sc_core8sc_inoutItE18end_of_elaborationEv,comdat
	.weak	_ZN7sc_core8sc_inoutItE18end_of_elaborationEv
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutItE18end_of_elaborationEv,@function
_ZN7sc_core8sc_inoutItE18end_of_elaborationEv: # @_ZN7sc_core8sc_inoutItE18end_of_elaborationEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp659:
	.cfi_def_cfa_offset 16
.Ltmp660:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp661:
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB89_4
# BB#1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZN7sc_core8sc_inoutItE5writeERKt
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rsi
	cmpq	$0, %rsi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	je	.LBB89_3
# BB#2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB89_3:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	$0, 128(%rax)
.LBB89_4:
	movq	-40(%rbp), %rax         # 8-byte Reload
	cmpq	$0, 136(%rax)
	je	.LBB89_13
# BB#5:
	movl	$0, -12(%rbp)
.LBB89_6:                               # =>This Inner Loop Header: Depth=1
	movl	-12(%rbp), %eax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	136(%rcx), %rdi
	movl	%eax, -52(%rbp)         # 4-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %edx
	movl	-52(%rbp), %esi         # 4-byte Reload
	cmpl	%edx, %esi
	jge	.LBB89_12
# BB#7:                                 #   in Loop: Header=BB89_6 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	(%rsi), %rdi
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-64(%rbp), %rax         # 8-byte Reload
	callq	*112(%rax)
	cmpq	$0, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	je	.LBB89_9
# BB#8:                                 #   in Loop: Header=BB89_6 Depth=1
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifItEE, %rcx
	movabsq	$-1, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-80(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB89_10
.LBB89_9:                               #   in Loop: Header=BB89_6 Depth=1
	movabsq	$0, %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB89_10
.LBB89_10:                              #   in Loop: Header=BB89_6 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	$16, %ecx
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rdi
	movq	-32(%rbp), %rax
	movq	(%rax), %rdx
	movq	%rdi, -96(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%ecx, -100(%rbp)        # 4-byte Spill
	callq	*40(%rdx)
	movq	-24(%rbp), %rdx
	addq	$8, %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	movl	-100(%rbp), %ecx        # 4-byte Reload
	callq	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi
# BB#11:                                #   in Loop: Header=BB89_6 Depth=1
	movl	-12(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -12(%rbp)
	jmp	.LBB89_6
.LBB89_12:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK7sc_core8sc_inoutItE13remove_tracesEv
.LBB89_13:
	addq	$112, %rsp
	popq	%rbp
	ret
.Ltmp662:
	.size	_ZN7sc_core8sc_inoutItE18end_of_elaborationEv, .Ltmp662-_ZN7sc_core8sc_inoutItE18end_of_elaborationEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp665:
	.cfi_def_cfa_offset 16
.Ltmp666:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp667:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB90_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB90_2:                               # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB90_8
# BB#3:                                 #   in Loop: Header=BB90_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB90_5
# BB#4:                                 #   in Loop: Header=BB90_2 Depth=1
	jmp	.LBB90_6
.LBB90_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$588, %edx              # imm = 0x24C
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB90_6:                               #   in Loop: Header=BB90_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_thread_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB90_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB90_2
.LBB90_8:
	jmp	.LBB90_10
.LBB90_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.LBB90_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp668:
	.size	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, .Ltmp668-_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp671:
	.cfi_def_cfa_offset 16
.Ltmp672:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp673:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB91_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB91_2:                               # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB91_8
# BB#3:                                 #   in Loop: Header=BB91_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB91_5
# BB#4:                                 #   in Loop: Header=BB91_2 Depth=1
	jmp	.LBB91_6
.LBB91_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$609, %edx              # imm = 0x261
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB91_6:                               #   in Loop: Header=BB91_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_method_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB91_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB91_2
.LBB91_8:
	jmp	.LBB91_10
.LBB91_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
.LBB91_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp674:
	.size	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, .Ltmp674-_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp677:
	.cfi_def_cfa_offset 16
.Ltmp678:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp679:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp680:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_, .Ltmp680-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp683:
	.cfi_def_cfa_offset 16
.Ltmp684:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp685:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp686:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_, .Ltmp686-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv,@function
_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv: # @_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	ret
.Ltmp687:
	.size	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv, .Ltmp687-_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm,"axG",@progbits,_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm,comdat
	.weak	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm,@function
_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm: # @_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp688:
	.size	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm, .Ltmp688-_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	ret
.Ltmp689:
	.size	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv, .Ltmp689-_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm,@function
_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm: # @_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp690:
	.size	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm, .Ltmp690-_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi,"axG",@progbits,_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi,comdat
	.weak	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi
	.align	16, 0x90
	.type	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi,@function
_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi: # @_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp693:
	.cfi_def_cfa_offset 16
.Ltmp694:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp695:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movl	%ecx, -28(%rbp)
	cmpq	$0, -8(%rbp)
	je	.LBB98_2
# BB#1:
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	32(%rcx), %rcx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %edi
	movl	%edi, -32(%rbp)         # 4-byte Spill
	movq	%rax, %rdi
	movl	-32(%rbp), %r8d         # 4-byte Reload
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	movl	%r8d, %ecx
	movq	-40(%rbp), %rax         # 8-byte Reload
	callq	*%rax
.LBB98_2:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp696:
	.size	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi, .Ltmp696-_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKtRKSsi
	.cfi_endproc

	.section	.text._ZNKSt9type_info4nameEv,"axG",@progbits,_ZNKSt9type_info4nameEv,comdat
	.weak	_ZNKSt9type_info4nameEv
	.align	16, 0x90
	.type	_ZNKSt9type_info4nameEv,@function
_ZNKSt9type_info4nameEv:                # @_ZNKSt9type_info4nameEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movsbl	(%rax), %ecx
	cmpl	$42, %ecx
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	jne	.LBB99_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$1, %rcx
	movq	%rcx, -24(%rsp)         # 8-byte Spill
	jmp	.LBB99_3
.LBB99_2:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	movq	%rcx, -24(%rsp)         # 8-byte Spill
.LBB99_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp697:
	.size	_ZNKSt9type_info4nameEv, .Ltmp697-_ZNKSt9type_info4nameEv
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp698:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm, .Ltmp698-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp701:
	.cfi_def_cfa_offset 16
.Ltmp702:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp703:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB101_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB101_3
.LBB101_2:
	leaq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv
	leaq	-24(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	(%rsi), %rsi
	movq	%rsi, (%rsp)
	movq	-40(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
.LBB101_3:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp704:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_, .Ltmp704-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE9push_backERKS3_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	%rdx, -24(%rsp)
	movq	-16(%rsp), %rdx
	cmpq	$0, %rdx
	movq	%rdx, -32(%rsp)         # 8-byte Spill
	je	.LBB102_2
# BB#1:
	movq	-32(%rsp), %rax         # 8-byte Reload
	movq	-24(%rsp), %rcx
	movq	(%rcx), %rcx
	movq	-32(%rsp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	%rax, -40(%rsp)         # 8-byte Spill
.LBB102_2:
	ret
.Ltmp705:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_, .Ltmp705-_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin103:
	.cfi_lsda 3, .Lexception103
# BB#0:
	pushq	%rbp
.Ltmp737:
	.cfi_def_cfa_offset 16
.Ltmp738:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp739:
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	leaq	16(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	je	.LBB103_2
# BB#1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	8(%rcx), %rdx
	addq	$-8, %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, -24(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rdi
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-16, %rcx
	movq	8(%rax), %rdx
	addq	$-8, %rdx
	movq	%rcx, %rsi
	callq	_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	movq	-24(%rbp), %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB103_22
.LBB103_2:
	movl	$1, %esi
	movl	$.L.str16, %edx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc
	movq	%rax, -32(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	callq	_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm
	movq	%rax, -56(%rbp)
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rsi
	movq	-16(%rbp), %rdx
.Ltmp706:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE9constructEPS4_RKS4_
.Ltmp707:
	jmp	.LBB103_3
.LBB103_3:
	movq	$0, -64(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp708:
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
.Ltmp709:
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jmp	.LBB103_4
.LBB103_4:
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rsi
	movq	-56(%rbp), %rdx
.Ltmp710:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -144(%rbp)        # 8-byte Spill
	movq	%rdx, -152(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp711:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB103_5
.LBB103_5:
.Ltmp712:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-144(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_
.Ltmp713:
	movq	%rax, -168(%rbp)        # 8-byte Spill
	jmp	.LBB103_6
.LBB103_6:
	movq	-168(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	addq	$8, %rax
	movq	%rax, -64(%rbp)
.Ltmp714:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
.Ltmp715:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB103_7
.LBB103_7:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-64(%rbp), %rdx
.Ltmp716:
	movq	%rdi, -184(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp717:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB103_8
.LBB103_8:
.Ltmp718:
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_
.Ltmp719:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB103_9
.LBB103_9:
	movq	-216(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	jmp	.LBB103_21
.LBB103_10:
.Ltmp720:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
# BB#11:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch
	cmpq	$0, -64(%rbp)
	movq	%rax, -224(%rbp)        # 8-byte Spill
	jne	.LBB103_15
# BB#12:
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
.Ltmp721:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_
.Ltmp722:
	jmp	.LBB103_13
.LBB103_13:
	jmp	.LBB103_18
.LBB103_14:
.Ltmp731:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
.Ltmp732:
	callq	__cxa_end_catch
.Ltmp733:
	jmp	.LBB103_20
.LBB103_15:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp723:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -232(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -240(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp724:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB103_16
.LBB103_16:
.Ltmp725:
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movq	-248(%rbp), %rdx        # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E
.Ltmp726:
	jmp	.LBB103_17
.LBB103_17:
	jmp	.LBB103_18
.LBB103_18:
	movq	-56(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp727:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m
.Ltmp728:
	jmp	.LBB103_19
.LBB103_19:
.Ltmp729:
	callq	__cxa_rethrow
.Ltmp730:
	jmp	.LBB103_25
.LBB103_20:
	jmp	.LBB103_23
.LBB103_21:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -256(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -264(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	-264(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %rcx
	subq	%rcx, %rdi
	sarq	$3, %rdi
	movq	%rdi, -272(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-64(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-56(%rbp), %rax
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB103_22:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	ret
.LBB103_23:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume
.LBB103_24:
.Ltmp734:
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.LBB103_25:
.Ltmp740:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_, .Ltmp740-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.cfi_endproc
.Leh_func_end103:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table103:
.Lexception103:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\343\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
.Lset233 = .Leh_func_begin103-.Leh_func_begin103 # >> Call Site 1 <<
	.long	.Lset233
.Lset234 = .Ltmp706-.Leh_func_begin103  #   Call between .Leh_func_begin103 and .Ltmp706
	.long	.Lset234
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset235 = .Ltmp706-.Leh_func_begin103  # >> Call Site 2 <<
	.long	.Lset235
.Lset236 = .Ltmp719-.Ltmp706            #   Call between .Ltmp706 and .Ltmp719
	.long	.Lset236
.Lset237 = .Ltmp720-.Leh_func_begin103  #     jumps to .Ltmp720
	.long	.Lset237
	.byte	1                       #   On action: 1
.Lset238 = .Ltmp719-.Leh_func_begin103  # >> Call Site 3 <<
	.long	.Lset238
.Lset239 = .Ltmp721-.Ltmp719            #   Call between .Ltmp719 and .Ltmp721
	.long	.Lset239
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset240 = .Ltmp721-.Leh_func_begin103  # >> Call Site 4 <<
	.long	.Lset240
.Lset241 = .Ltmp722-.Ltmp721            #   Call between .Ltmp721 and .Ltmp722
	.long	.Lset241
.Lset242 = .Ltmp731-.Leh_func_begin103  #     jumps to .Ltmp731
	.long	.Lset242
	.byte	0                       #   On action: cleanup
.Lset243 = .Ltmp732-.Leh_func_begin103  # >> Call Site 5 <<
	.long	.Lset243
.Lset244 = .Ltmp733-.Ltmp732            #   Call between .Ltmp732 and .Ltmp733
	.long	.Lset244
.Lset245 = .Ltmp734-.Leh_func_begin103  #     jumps to .Ltmp734
	.long	.Lset245
	.byte	1                       #   On action: 1
.Lset246 = .Ltmp723-.Leh_func_begin103  # >> Call Site 6 <<
	.long	.Lset246
.Lset247 = .Ltmp730-.Ltmp723            #   Call between .Ltmp723 and .Ltmp730
	.long	.Lset247
.Lset248 = .Ltmp731-.Leh_func_begin103  #     jumps to .Ltmp731
	.long	.Lset248
	.byte	0                       #   On action: cleanup
.Lset249 = .Ltmp730-.Leh_func_begin103  # >> Call Site 7 <<
	.long	.Lset249
.Lset250 = .Leh_func_end103-.Ltmp730    #   Call between .Ltmp730 and .Leh_func_end103
	.long	.Lset250
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp743:
	.cfi_def_cfa_offset 16
.Ltmp744:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp745:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	addq	$8, %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp746:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv, .Ltmp746-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE3endEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp749:
	.cfi_def_cfa_offset 16
.Ltmp750:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp751:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp752:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_, .Ltmp752-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	ret
.Ltmp753:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_, .Ltmp753-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_endproc

	.section	.text._ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,@function
_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_: # @_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp756:
	.cfi_def_cfa_offset 16
.Ltmp757:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp758:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp759:
	.size	_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_, .Ltmp759-_ZSt13copy_backwardIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp760:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv, .Ltmp760-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	(%rdi), %rax
	ret
.Ltmp761:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv, .Ltmp761-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEdeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp764:
	.cfi_def_cfa_offset 16
.Ltmp765:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp766:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movq	-56(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	cmpq	-16(%rbp), %rdx
	jae	.LBB110_2
# BB#1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc
.LBB110_2:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-64(%rbp), %rsi         # 8-byte Reload
	addq	(%rax), %rsi
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE4sizeEv
	movq	-72(%rbp), %rsi         # 8-byte Reload
	cmpq	%rax, %rsi
	jb	.LBB110_4
# BB#3:
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv
	movq	-80(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	jbe	.LBB110_5
.LBB110_4:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB110_6
.LBB110_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
.LBB110_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp767:
	.size	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc, .Ltmp767-_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_M_check_lenEmPKc
	.cfi_endproc

	.section	.text._ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,"axG",@progbits,_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,comdat
	.weak	_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.align	16, 0x90
	.type	_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,@function
_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_: # @_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp770:
	.cfi_def_cfa_offset 16
.Ltmp771:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp772:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	subq	%rax, %rsi
	sarq	$3, %rsi
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp773:
	.size	_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_, .Ltmp773-_ZN9__gnu_cxxmiIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp776:
	.cfi_def_cfa_offset 16
.Ltmp777:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp778:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core18sc_signal_inout_ifItEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp779:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv, .Ltmp779-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE5beginEv
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp782:
	.cfi_def_cfa_offset 16
.Ltmp783:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp784:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB113_2
# BB#1:
	movabsq	$0, %rdx
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB113_3
.LBB113_2:
	movabsq	$0, %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB113_3
.LBB113_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp785:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm, .Ltmp785-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE11_M_allocateEm
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_,"axG",@progbits,_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_,comdat
	.weak	_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_
	.align	16, 0x90
	.type	_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_,@function
_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_: # @_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp788:
	.cfi_def_cfa_offset 16
.Ltmp789:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp790:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp791:
	.size	_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_, .Ltmp791-_ZSt22__uninitialized_move_aIPPN7sc_core18sc_signal_inout_ifItEES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp792:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv, .Ltmp792-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp793:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_, .Ltmp793-_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE7destroyEPS4_
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E,@function
_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E: # @_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp796:
	.cfi_def_cfa_offset 16
.Ltmp797:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp798:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp799:
	.size	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E, .Ltmp799-_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp802:
	.cfi_def_cfa_offset 16
.Ltmp803:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp804:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB118_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m
.LBB118_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp805:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m, .Ltmp805-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp808:
	.cfi_def_cfa_offset 16
.Ltmp809:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp810:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp811:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m, .Ltmp811-_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE10deallocateEPS4_m
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_,@function
_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_: # @_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp814:
	.cfi_def_cfa_offset 16
.Ltmp815:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp816:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp817:
	.size	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_, .Ltmp817-_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEEEvT_S5_
	.cfi_endproc

	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_
	.align	16, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp818:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_, .Ltmp818-_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core18sc_signal_inout_ifItEEEEvT_S7_
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.align	16, 0x90
	.type	_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp821:
	.cfi_def_cfa_offset 16
.Ltmp822:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp823:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp824:
	.size	_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E, .Ltmp824-_ZSt22__uninitialized_copy_aIPPN7sc_core18sc_signal_inout_ifItEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.cfi_endproc

	.section	.text._ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,@function
_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_: # @_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp827:
	.cfi_def_cfa_offset 16
.Ltmp828:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp829:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp830:
	.size	_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_, .Ltmp830-_ZSt18uninitialized_copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_
	.align	16, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp833:
	.cfi_def_cfa_offset 16
.Ltmp834:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp835:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp836:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_, .Ltmp836-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core18sc_signal_inout_ifItEES6_EET0_T_S8_S7_
	.cfi_endproc

	.section	.text._ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_,@function
_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_: # @_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp839:
	.cfi_def_cfa_offset 16
.Ltmp840:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp841:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp842:
	.size	_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_, .Ltmp842-_ZSt4copyIPPN7sc_core18sc_signal_inout_ifItEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,@function
_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_: # @_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp845:
	.cfi_def_cfa_offset 16
.Ltmp846:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp847:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp848:
	.size	_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_, .Ltmp848-_ZSt14__copy_move_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_,"axG",@progbits,_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_,comdat
	.weak	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.align	16, 0x90
	.type	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_,@function
_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_: # @_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp851:
	.cfi_def_cfa_offset 16
.Ltmp852:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp853:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp854:
	.size	_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_, .Ltmp854-_ZSt12__miter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.cfi_endproc

	.section	.text._ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_,"axG",@progbits,_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_,comdat
	.weak	_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_
	.align	16, 0x90
	.type	_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_,@function
_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_: # @_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp855:
	.size	_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_, .Ltmp855-_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_
	.cfi_endproc

	.section	.text._ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,@function
_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_: # @_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp858:
	.cfi_def_cfa_offset 16
.Ltmp859:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp860:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp861:
	.size	_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_, .Ltmp861-_ZSt13__copy_move_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_,"axG",@progbits,_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_,comdat
	.weak	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.align	16, 0x90
	.type	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_,@function
_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_: # @_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp864:
	.cfi_def_cfa_offset 16
.Ltmp865:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp866:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core18sc_signal_inout_ifItEELb0EE7_S_baseES4_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp867:
	.size	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_, .Ltmp867-_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.cfi_endproc

	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	.align	16, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp870:
	.cfi_def_cfa_offset 16
.Ltmp871:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp872:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB131_2
# BB#1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB131_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp873:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_, .Ltmp873-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp876:
	.cfi_def_cfa_offset 16
.Ltmp877:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp878:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB132_2
# BB#1:
	callq	_ZSt17__throw_bad_allocv
.LBB132_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp879:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv, .Ltmp879-_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8allocateEmPKv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv
	.cfi_startproc
# BB#0:
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rdi, -8(%rsp)
	ret
.Ltmp880:
	.size	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv, .Ltmp880-_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv,@function
_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv: # @_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp883:
	.cfi_def_cfa_offset 16
.Ltmp884:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp885:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp886:
	.size	_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv, .Ltmp886-_ZNKSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE8max_sizeEv
	.cfi_endproc

	.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
	.weak	_ZSt3maxImERKT_S2_S2_
	.align	16, 0x90
	.type	_ZSt3maxImERKT_S2_S2_,@function
_ZSt3maxImERKT_S2_S2_:                  # @_ZSt3maxImERKT_S2_S2_
	.cfi_startproc
# BB#0:
	movq	%rdi, -16(%rsp)
	movq	%rsi, -24(%rsp)
	movq	-16(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-24(%rsp), %rdi
	cmpq	(%rdi), %rsi
	jae	.LBB135_2
# BB#1:
	movq	-24(%rsp), %rax
	movq	%rax, -8(%rsp)
	jmp	.LBB135_3
.LBB135_2:
	movq	-16(%rsp), %rax
	movq	%rax, -8(%rsp)
.LBB135_3:
	movq	-8(%rsp), %rax
	ret
.Ltmp887:
	.size	_ZSt3maxImERKT_S2_S2_, .Ltmp887-_ZSt3maxImERKT_S2_S2_
	.cfi_endproc

	.section	.text._ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp888:
	.size	_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv, .Ltmp888-_ZNKSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,@function
_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_: # @_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp891:
	.cfi_def_cfa_offset 16
.Ltmp892:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp893:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core18sc_signal_inout_ifItEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp894:
	.size	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_, .Ltmp894-_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_,@function
_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_: # @_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp897:
	.cfi_def_cfa_offset 16
.Ltmp898:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp899:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp900:
	.size	_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_, .Ltmp900-_ZSt22__copy_move_backward_aILb0EPPN7sc_core18sc_signal_inout_ifItEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_,"axG",@progbits,_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_,comdat
	.weak	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	.align	16, 0x90
	.type	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_,@function
_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_: # @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp903:
	.cfi_def_cfa_offset 16
.Ltmp904:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp905:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB139_2
# BB#1:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB139_2:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp906:
	.size	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_, .Ltmp906-_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core18sc_signal_inout_ifItEEEEPT_PKS7_SA_S8_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin140:
	.cfi_lsda 3, .Lexception140
# BB#0:
	pushq	%rbp
.Ltmp915:
	.cfi_def_cfa_offset 16
.Ltmp916:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp917:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE+16, (%rdi)
	movq	%rdi, %rax
	addq	$104, %rax
.Ltmp907:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev
.Ltmp908:
	jmp	.LBB140_1
.LBB140_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core12sc_port_baseD2Ev
	addq	$48, %rsp
	popq	%rbp
	ret
.LBB140_2:
.Ltmp909:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp910:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp911:
	jmp	.LBB140_3
.LBB140_3:
	jmp	.LBB140_4
.LBB140_4:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB140_5:
.Ltmp912:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp918:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev, .Ltmp918-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev
	.cfi_endproc
.Leh_func_end140:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table140:
.Lexception140:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset251 = .Ltmp907-.Leh_func_begin140  # >> Call Site 1 <<
	.long	.Lset251
.Lset252 = .Ltmp908-.Ltmp907            #   Call between .Ltmp907 and .Ltmp908
	.long	.Lset252
.Lset253 = .Ltmp909-.Leh_func_begin140  #     jumps to .Ltmp909
	.long	.Lset253
	.byte	0                       #   On action: cleanup
.Lset254 = .Ltmp908-.Leh_func_begin140  # >> Call Site 2 <<
	.long	.Lset254
.Lset255 = .Ltmp910-.Ltmp908            #   Call between .Ltmp908 and .Ltmp910
	.long	.Lset255
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset256 = .Ltmp910-.Leh_func_begin140  # >> Call Site 3 <<
	.long	.Lset256
.Lset257 = .Ltmp911-.Ltmp910            #   Call between .Ltmp910 and .Ltmp911
	.long	.Lset257
.Lset258 = .Ltmp912-.Leh_func_begin140  #     jumps to .Ltmp912
	.long	.Lset258
	.byte	1                       #   On action: 1
.Lset259 = .Ltmp911-.Leh_func_begin140  # >> Call Site 4 <<
	.long	.Lset259
.Lset260 = .Leh_func_end140-.Ltmp911    #   Call between .Ltmp911 and .Leh_func_end140
	.long	.Lset260
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp921:
	.cfi_def_cfa_offset 16
.Ltmp922:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp923:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp924:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev, .Ltmp924-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED1Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core12sc_port_base4kindEv,"axG",@progbits,_ZNK7sc_core12sc_port_base4kindEv,comdat
	.weak	_ZNK7sc_core12sc_port_base4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core12sc_port_base4kindEv,@function
_ZNK7sc_core12sc_port_base4kindEv:      # @_ZNK7sc_core12sc_port_base4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str18, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp925:
	.size	_ZNK7sc_core12sc_port_base4kindEv, .Ltmp925-_ZNK7sc_core12sc_port_base4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp928:
	.cfi_def_cfa_offset 16
.Ltmp929:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp930:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp931:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev, .Ltmp931-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin144:
	.cfi_lsda 3, .Lexception144
# BB#0:
	pushq	%rbp
.Ltmp937:
	.cfi_def_cfa_offset 16
.Ltmp938:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp939:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp932:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev
.Ltmp933:
	jmp	.LBB144_1
.LBB144_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB144_2:
.Ltmp934:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp940:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev, .Ltmp940-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev
	.cfi_endproc
.Leh_func_end144:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table144:
.Lexception144:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset261 = .Ltmp932-.Leh_func_begin144  # >> Call Site 1 <<
	.long	.Lset261
.Lset262 = .Ltmp933-.Ltmp932            #   Call between .Ltmp932 and .Ltmp933
	.long	.Lset262
.Lset263 = .Ltmp934-.Leh_func_begin144  #     jumps to .Ltmp934
	.long	.Lset263
	.byte	0                       #   On action: cleanup
.Lset264 = .Ltmp933-.Leh_func_begin144  # >> Call Site 2 <<
	.long	.Lset264
.Lset265 = .Leh_func_end144-.Ltmp933    #   Call between .Ltmp933 and .Leh_func_end144
	.long	.Lset265
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin145:
	.cfi_lsda 3, .Lexception145
# BB#0:
	pushq	%rbp
.Ltmp951:
	.cfi_def_cfa_offset 16
.Ltmp952:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp953:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, %rcx
.Ltmp941:
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp942:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB145_1
.LBB145_1:
.Ltmp943:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core18sc_signal_inout_ifItEES3_EvT_S5_RSaIT0_E
.Ltmp944:
	jmp	.LBB145_2
.LBB145_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB145_3:
.Ltmp945:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp946:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
.Ltmp947:
	jmp	.LBB145_4
.LBB145_4:
	jmp	.LBB145_5
.LBB145_5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB145_6:
.Ltmp948:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp954:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev, .Ltmp954-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	.cfi_endproc
.Leh_func_end145:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table145:
.Lexception145:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset266 = .Ltmp941-.Leh_func_begin145  # >> Call Site 1 <<
	.long	.Lset266
.Lset267 = .Ltmp944-.Ltmp941            #   Call between .Ltmp941 and .Ltmp944
	.long	.Lset267
.Lset268 = .Ltmp945-.Leh_func_begin145  #     jumps to .Ltmp945
	.long	.Lset268
	.byte	0                       #   On action: cleanup
.Lset269 = .Ltmp944-.Leh_func_begin145  # >> Call Site 2 <<
	.long	.Lset269
.Lset270 = .Ltmp946-.Ltmp944            #   Call between .Ltmp944 and .Ltmp946
	.long	.Lset270
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset271 = .Ltmp946-.Leh_func_begin145  # >> Call Site 3 <<
	.long	.Lset271
.Lset272 = .Ltmp947-.Ltmp946            #   Call between .Ltmp946 and .Ltmp947
	.long	.Lset272
.Lset273 = .Ltmp948-.Leh_func_begin145  #     jumps to .Ltmp948
	.long	.Lset273
	.byte	1                       #   On action: 1
.Lset274 = .Ltmp947-.Leh_func_begin145  # >> Call Site 4 <<
	.long	.Lset274
.Lset275 = .Leh_func_end145-.Ltmp947    #   Call between .Ltmp947 and .Leh_func_end145
	.long	.Lset275
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin146:
	.cfi_lsda 3, .Lexception146
# BB#0:
	pushq	%rbp
.Ltmp960:
	.cfi_def_cfa_offset 16
.Ltmp961:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp962:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rdi, %rdx
.Ltmp955:
	movq	%rax, %rsi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE13_M_deallocateEPS3_m
.Ltmp956:
	jmp	.LBB146_1
.LBB146_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB146_2:
.Ltmp957:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp963:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev, .Ltmp963-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EED2Ev
	.cfi_endproc
.Leh_func_end146:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table146:
.Lexception146:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset276 = .Ltmp955-.Leh_func_begin146  # >> Call Site 1 <<
	.long	.Lset276
.Lset277 = .Ltmp956-.Ltmp955            #   Call between .Ltmp955 and .Ltmp956
	.long	.Lset277
.Lset278 = .Ltmp957-.Leh_func_begin146  #     jumps to .Ltmp957
	.long	.Lset278
	.byte	0                       #   On action: cleanup
.Lset279 = .Ltmp956-.Leh_func_begin146  # >> Call Site 2 <<
	.long	.Lset279
.Lset280 = .Leh_func_end146-.Ltmp956    #   Call between .Ltmp956 and .Leh_func_end146
	.long	.Lset280
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp966:
	.cfi_def_cfa_offset 16
.Ltmp967:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp968:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp969:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev, .Ltmp969-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp972:
	.cfi_def_cfa_offset 16
.Ltmp973:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp974:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp975:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev, .Ltmp975-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implD2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev,"axG",@progbits,_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev,comdat
	.weak	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev,@function
_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev: # @_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp978:
	.cfi_def_cfa_offset 16
.Ltmp979:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp980:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp981:
	.size	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev, .Ltmp981-_ZNSaIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp982:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev, .Ltmp982-_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core15sc_trace_paramsD1Ev,"axG",@progbits,_ZN7sc_core15sc_trace_paramsD1Ev,comdat
	.weak	_ZN7sc_core15sc_trace_paramsD1Ev
	.align	16, 0x90
	.type	_ZN7sc_core15sc_trace_paramsD1Ev,@function
_ZN7sc_core15sc_trace_paramsD1Ev:       # @_ZN7sc_core15sc_trace_paramsD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp985:
	.cfi_def_cfa_offset 16
.Ltmp986:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp987:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core15sc_trace_paramsD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp988:
	.size	_ZN7sc_core15sc_trace_paramsD1Ev, .Ltmp988-_ZN7sc_core15sc_trace_paramsD1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev: # @_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp991:
	.cfi_def_cfa_offset 16
.Ltmp992:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp993:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp994:
	.size	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev, .Ltmp994-_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev: # @_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin153:
	.cfi_lsda 3, .Lexception153
# BB#0:
	pushq	%rbp
.Ltmp1005:
	.cfi_def_cfa_offset 16
.Ltmp1006:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1007:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, %rcx
.Ltmp995:
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv
.Ltmp996:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB153_1
.LBB153_1:
.Ltmp997:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E
.Ltmp998:
	jmp	.LBB153_2
.LBB153_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB153_3:
.Ltmp999:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1000:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
.Ltmp1001:
	jmp	.LBB153_4
.LBB153_4:
	jmp	.LBB153_5
.LBB153_5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB153_6:
.Ltmp1002:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1008:
	.size	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev, .Ltmp1008-_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	.cfi_endproc
.Leh_func_end153:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table153:
.Lexception153:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset281 = .Ltmp995-.Leh_func_begin153  # >> Call Site 1 <<
	.long	.Lset281
.Lset282 = .Ltmp998-.Ltmp995            #   Call between .Ltmp995 and .Ltmp998
	.long	.Lset282
.Lset283 = .Ltmp999-.Leh_func_begin153  #     jumps to .Ltmp999
	.long	.Lset283
	.byte	0                       #   On action: cleanup
.Lset284 = .Ltmp998-.Leh_func_begin153  # >> Call Site 2 <<
	.long	.Lset284
.Lset285 = .Ltmp1000-.Ltmp998           #   Call between .Ltmp998 and .Ltmp1000
	.long	.Lset285
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset286 = .Ltmp1000-.Leh_func_begin153 # >> Call Site 3 <<
	.long	.Lset286
.Lset287 = .Ltmp1001-.Ltmp1000          #   Call between .Ltmp1000 and .Ltmp1001
	.long	.Lset287
.Lset288 = .Ltmp1002-.Leh_func_begin153 #     jumps to .Ltmp1002
	.long	.Lset288
	.byte	1                       #   On action: 1
.Lset289 = .Ltmp1001-.Leh_func_begin153 # >> Call Site 4 <<
	.long	.Lset289
.Lset290 = .Leh_func_end153-.Ltmp1001   #   Call between .Ltmp1001 and .Leh_func_end153
	.long	.Lset290
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E,@function
_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E: # @_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1011:
	.cfi_def_cfa_offset 16
.Ltmp1012:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1013:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1014:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E, .Ltmp1014-_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsES2_EvT_S4_RSaIT0_E
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp1015:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv, .Ltmp1015-_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin156:
	.cfi_lsda 3, .Lexception156
# BB#0:
	pushq	%rbp
.Ltmp1021:
	.cfi_def_cfa_offset 16
.Ltmp1022:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1023:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rdi, %rdx
.Ltmp1016:
	movq	%rax, %rsi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m
.Ltmp1017:
	jmp	.LBB156_1
.LBB156_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB156_2:
.Ltmp1018:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1024:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev, .Ltmp1024-_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EED2Ev
	.cfi_endproc
.Leh_func_end156:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table156:
.Lexception156:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset291 = .Ltmp1016-.Leh_func_begin156 # >> Call Site 1 <<
	.long	.Lset291
.Lset292 = .Ltmp1017-.Ltmp1016          #   Call between .Ltmp1016 and .Ltmp1017
	.long	.Lset292
.Lset293 = .Ltmp1018-.Leh_func_begin156 #     jumps to .Ltmp1018
	.long	.Lset293
	.byte	0                       #   On action: cleanup
.Lset294 = .Ltmp1017-.Leh_func_begin156 # >> Call Site 2 <<
	.long	.Lset294
.Lset295 = .Leh_func_end156-.Ltmp1017   #   Call between .Ltmp1017 and .Leh_func_end156
	.long	.Lset295
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m: # @_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1027:
	.cfi_def_cfa_offset 16
.Ltmp1028:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1029:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB157_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m
.LBB157_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1030:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m, .Ltmp1030-_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE13_M_deallocateEPS2_m
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1033:
	.cfi_def_cfa_offset 16
.Ltmp1034:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1035:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1036:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev, .Ltmp1036-_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1039:
	.cfi_def_cfa_offset 16
.Ltmp1040:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1041:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1042:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev, .Ltmp1042-_ZNSt12_Vector_baseIPN7sc_core15sc_trace_paramsESaIS2_EE12_Vector_implD2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_trace_paramsEED2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev,@function
_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev: # @_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1045:
	.cfi_def_cfa_offset 16
.Ltmp1046:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1047:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1048:
	.size	_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev, .Ltmp1048-_ZNSaIPN7sc_core15sc_trace_paramsEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1049:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev, .Ltmp1049-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1052:
	.cfi_def_cfa_offset 16
.Ltmp1053:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1054:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1055:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m, .Ltmp1055-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_trace_paramsEE10deallocateEPS3_m
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_,@function
_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_: # @_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1058:
	.cfi_def_cfa_offset 16
.Ltmp1059:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1060:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1061:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_, .Ltmp1061-_ZSt8_DestroyIPPN7sc_core15sc_trace_paramsEEvT_S4_
	.cfi_endproc

	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_
	.align	16, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp1062:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_, .Ltmp1062-_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_trace_paramsEEEvT_S6_
	.cfi_endproc

	.section	.text._ZN7sc_core15sc_trace_paramsD2Ev,"axG",@progbits,_ZN7sc_core15sc_trace_paramsD2Ev,comdat
	.weak	_ZN7sc_core15sc_trace_paramsD2Ev
	.align	16, 0x90
	.type	_ZN7sc_core15sc_trace_paramsD2Ev,@function
_ZN7sc_core15sc_trace_paramsD2Ev:       # @_ZN7sc_core15sc_trace_paramsD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1065:
	.cfi_def_cfa_offset 16
.Ltmp1066:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1067:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSsD1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1068:
	.size	_ZN7sc_core15sc_trace_paramsD2Ev, .Ltmp1068-_ZN7sc_core15sc_trace_paramsD2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin166:
	.cfi_lsda 3, .Lexception166
# BB#0:
	pushq	%rbp
.Ltmp1079:
	.cfi_def_cfa_offset 16
.Ltmp1080:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1081:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE+16, (%rdi)
	movq	%rdi, %rax
.Ltmp1069:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv
.Ltmp1070:
	jmp	.LBB166_1
.LBB166_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	je	.LBB166_4
# BB#2:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp1071:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp1072:
	jmp	.LBB166_3
.LBB166_3:
	jmp	.LBB166_4
.LBB166_4:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB166_5:
.Ltmp1073:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1074:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev
.Ltmp1075:
	jmp	.LBB166_6
.LBB166_6:
	jmp	.LBB166_7
.LBB166_7:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB166_8:
.Ltmp1076:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1082:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev, .Ltmp1082-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED2Ev
	.cfi_endproc
.Leh_func_end166:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table166:
.Lexception166:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset296 = .Ltmp1069-.Leh_func_begin166 # >> Call Site 1 <<
	.long	.Lset296
.Lset297 = .Ltmp1072-.Ltmp1069          #   Call between .Ltmp1069 and .Ltmp1072
	.long	.Lset297
.Lset298 = .Ltmp1073-.Leh_func_begin166 #     jumps to .Ltmp1073
	.long	.Lset298
	.byte	0                       #   On action: cleanup
.Lset299 = .Ltmp1072-.Leh_func_begin166 # >> Call Site 2 <<
	.long	.Lset299
.Lset300 = .Ltmp1074-.Ltmp1072          #   Call between .Ltmp1072 and .Ltmp1074
	.long	.Lset300
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset301 = .Ltmp1074-.Leh_func_begin166 # >> Call Site 3 <<
	.long	.Lset301
.Lset302 = .Ltmp1075-.Ltmp1074          #   Call between .Ltmp1074 and .Ltmp1075
	.long	.Lset302
.Lset303 = .Ltmp1076-.Leh_func_begin166 #     jumps to .Ltmp1076
	.long	.Lset303
	.byte	1                       #   On action: 1
.Lset304 = .Ltmp1075-.Leh_func_begin166 # >> Call Site 4 <<
	.long	.Lset304
.Lset305 = .Leh_func_end166-.Ltmp1075   #   Call between .Ltmp1075 and .Leh_func_end166
	.long	.Lset305
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv,"axG",@progbits,_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv,comdat
	.weak	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv,@function
_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv: # @_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin167:
	.cfi_lsda 3, .Lexception167
# BB#0:
	pushq	%rbp
.Ltmp1091:
	.cfi_def_cfa_offset 16
.Ltmp1092:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1093:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB167_14
# BB#1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %ecx
	subl	$1, %ecx
	movl	%ecx, -12(%rbp)
.LBB167_2:                              # =>This Inner Loop Header: Depth=1
	cmpl	$0, -12(%rbp)
	jl	.LBB167_9
# BB#3:                                 #   in Loop: Header=BB167_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	je	.LBB167_6
# BB#4:                                 #   in Loop: Header=BB167_2 Depth=1
.Ltmp1086:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core15sc_trace_paramsD1Ev
.Ltmp1087:
	jmp	.LBB167_5
.LBB167_5:                              #   in Loop: Header=BB167_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB167_6:                              #   in Loop: Header=BB167_2 Depth=1
	jmp	.LBB167_7
.LBB167_7:                              #   in Loop: Header=BB167_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, -12(%rbp)
	jmp	.LBB167_2
.LBB167_8:
.Ltmp1088:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB167_15
.LBB167_9:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	je	.LBB167_12
# BB#10:
.Ltmp1083:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
.Ltmp1084:
	jmp	.LBB167_11
.LBB167_11:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB167_12:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	$0, 128(%rax)
	jmp	.LBB167_14
.LBB167_13:
.Ltmp1085:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB167_15
.LBB167_14:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB167_15:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1094:
	.size	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv, .Ltmp1094-_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv
	.cfi_endproc
.Leh_func_end167:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table167:
.Lexception167:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset306 = .Ltmp1086-.Leh_func_begin167 # >> Call Site 1 <<
	.long	.Lset306
.Lset307 = .Ltmp1087-.Ltmp1086          #   Call between .Ltmp1086 and .Ltmp1087
	.long	.Lset307
.Lset308 = .Ltmp1088-.Leh_func_begin167 #     jumps to .Ltmp1088
	.long	.Lset308
	.byte	0                       #   On action: cleanup
.Lset309 = .Ltmp1083-.Leh_func_begin167 # >> Call Site 2 <<
	.long	.Lset309
.Lset310 = .Ltmp1084-.Ltmp1083          #   Call between .Ltmp1083 and .Ltmp1084
	.long	.Lset310
.Lset311 = .Ltmp1085-.Leh_func_begin167 #     jumps to .Ltmp1085
	.long	.Lset311
	.byte	0                       #   On action: cleanup
.Lset312 = .Ltmp1084-.Leh_func_begin167 # >> Call Site 3 <<
	.long	.Lset312
.Lset313 = .Leh_func_end167-.Ltmp1084   #   Call between .Ltmp1084 and .Leh_func_end167
	.long	.Lset313
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1097:
	.cfi_def_cfa_offset 16
.Ltmp1098:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1099:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1100:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev, .Ltmp1100-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv,"axG",@progbits,_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv,comdat
	.weak	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv,@function
_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv: # @_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str19, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1101:
	.size	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv, .Ltmp1101-_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin170:
	.cfi_lsda 3, .Lexception170
# BB#0:
	pushq	%rbp
.Ltmp1107:
	.cfi_def_cfa_offset 16
.Ltmp1108:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1109:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp1102:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
.Ltmp1103:
	jmp	.LBB170_1
.LBB170_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB170_2:
.Ltmp1104:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1110:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev, .Ltmp1110-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev
	.cfi_endproc
.Leh_func_end170:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table170:
.Lexception170:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset314 = .Ltmp1102-.Leh_func_begin170 # >> Call Site 1 <<
	.long	.Lset314
.Lset315 = .Ltmp1103-.Ltmp1102          #   Call between .Ltmp1102 and .Ltmp1103
	.long	.Lset315
.Lset316 = .Ltmp1104-.Leh_func_begin170 #     jumps to .Ltmp1104
	.long	.Lset316
	.byte	0                       #   On action: cleanup
.Lset317 = .Ltmp1103-.Leh_func_begin170 # >> Call Site 2 <<
	.long	.Lset317
.Lset318 = .Leh_func_end170-.Ltmp1103   #   Call between .Ltmp1103 and .Leh_func_end170
	.long	.Lset318
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB171_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB171_3
.LBB171_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB171_3
.LBB171_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp1111:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv, .Ltmp1111-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB172_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB172_3
.LBB172_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB172_3
.LBB172_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp1112:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv, .Ltmp1112-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1115:
	.cfi_def_cfa_offset 16
.Ltmp1116:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1117:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1118:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE, .Ltmp1118-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1121:
	.cfi_def_cfa_offset 16
.Ltmp1122:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1123:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	je	.LBB174_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, %rcx
	movabsq	$-1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jmp	.LBB174_3
.LBB174_2:
	movabsq	$0, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jmp	.LBB174_3
.LBB174_3:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB174_5
# BB#4:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
	jmp	.LBB174_11
.LBB174_5:
	movq	-24(%rbp), %rax
	cmpq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	je	.LBB174_7
# BB#6:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, %rcx
	movabsq	$-1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-88(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB174_8
.LBB174_7:
	movabsq	$0, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB174_8
.LBB174_8:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB174_10
# BB#9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
	jmp	.LBB174_11
.LBB174_10:
	movl	$2, -4(%rbp)
.LBB174_11:
	movl	-4(%rbp), %eax
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1124:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE, .Ltmp1124-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1127:
	.cfi_def_cfa_offset 16
.Ltmp1128:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1129:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB175_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB175_3
.LBB175_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB175_3
.LBB175_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB175_5
# BB#4:
	jmp	.LBB175_6
.LBB175_5:
	leaq	.L.str14, %rdi
	leaq	.L.str13, %rsi
	movl	$541, %edx              # imm = 0x21D
	leaq	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE, %rcx
	callq	__assert_fail
.LBB175_6:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB175_7:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB175_12
# BB#8:                                 #   in Loop: Header=BB175_7 Depth=1
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	addq	$104, %rcx
	movslq	-32(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	movq	-72(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	jne	.LBB175_10
# BB#9:                                 #   in Loop: Header=BB175_7 Depth=1
	leaq	_ZN7sc_core22SC_ID_BIND_IF_TO_PORT_E, %rsi
	leaq	.L.str15, %rdx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB175_10:                             #   in Loop: Header=BB175_7 Depth=1
	jmp	.LBB175_11
.LBB175_11:                             #   in Loop: Header=BB175_7 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB175_7
.LBB175_12:
	leaq	-24(%rbp), %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_
	movabsq	$0, %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, 96(%rsi)
	addq	$80, %rsp
	popq	%rbp
	ret
.Ltmp1130:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE, .Ltmp1130-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1133:
	.cfi_def_cfa_offset 16
.Ltmp1134:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1135:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$104, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, %eax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1136:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv, .Ltmp1136-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1139:
	.cfi_def_cfa_offset 16
.Ltmp1140:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1141:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt9type_info4nameEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1142:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv, .Ltmp1142-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1145:
	.cfi_def_cfa_offset 16
.Ltmp1146:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1147:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB178_9
# BB#1:
	movl	$0, -12(%rbp)
.LBB178_2:                              # =>This Inner Loop Header: Depth=1
	movl	-12(%rbp), %eax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	128(%rcx), %rdi
	movl	%eax, -44(%rbp)         # 4-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %edx
	movl	-44(%rbp), %esi         # 4-byte Reload
	cmpl	%edx, %esi
	jge	.LBB178_8
# BB#3:                                 #   in Loop: Header=BB178_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	(%rsi), %rdi
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-56(%rbp), %rax         # 8-byte Reload
	callq	*112(%rax)
	cmpq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	je	.LBB178_5
# BB#4:                                 #   in Loop: Header=BB178_2 Depth=1
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB178_6
.LBB178_5:                              #   in Loop: Header=BB178_2 Depth=1
	movabsq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB178_6
.LBB178_6:                              #   in Loop: Header=BB178_2 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rdi
	movq	-32(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	*40(%rcx)
	movq	-24(%rbp), %rcx
	addq	$8, %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	movq	%rcx, %rdx
	callq	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKN5sc_dt10sc_bv_baseERKSs
# BB#7:                                 #   in Loop: Header=BB178_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -12(%rbp)
	jmp	.LBB178_2
.LBB178_8:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE13remove_tracesEv
.LBB178_9:
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1148:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv, .Ltmp1148-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1151:
	.cfi_def_cfa_offset 16
.Ltmp1152:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1153:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB179_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB179_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB179_8
# BB#3:                                 #   in Loop: Header=BB179_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB179_5
# BB#4:                                 #   in Loop: Header=BB179_2 Depth=1
	jmp	.LBB179_6
.LBB179_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$588, %edx              # imm = 0x24C
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB179_6:                              #   in Loop: Header=BB179_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_thread_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB179_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB179_2
.LBB179_8:
	jmp	.LBB179_10
.LBB179_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.LBB179_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1154:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, .Ltmp1154-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1157:
	.cfi_def_cfa_offset 16
.Ltmp1158:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1159:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB180_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB180_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB180_8
# BB#3:                                 #   in Loop: Header=BB180_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB180_5
# BB#4:                                 #   in Loop: Header=BB180_2 Depth=1
	jmp	.LBB180_6
.LBB180_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$609, %edx              # imm = 0x261
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB180_6:                              #   in Loop: Header=BB180_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_method_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB180_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB180_2
.LBB180_8:
	jmp	.LBB180_10
.LBB180_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
.LBB180_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1160:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, .Ltmp1160-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1163:
	.cfi_def_cfa_offset 16
.Ltmp1164:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1165:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	(%rsi), %rdi
	movq	232(%rdi), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	-24(%rbp), %rax         # 8-byte Reload
	callq	*%rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1166:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE, .Ltmp1166-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1169:
	.cfi_def_cfa_offset 16
.Ltmp1170:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1171:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1172:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE, .Ltmp1172-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1175:
	.cfi_def_cfa_offset 16
.Ltmp1176:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1177:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1178:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE, .Ltmp1178-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1181:
	.cfi_def_cfa_offset 16
.Ltmp1182:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1183:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1184:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE, .Ltmp1184-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1187:
	.cfi_def_cfa_offset 16
.Ltmp1188:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1189:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1190:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE, .Ltmp1190-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	ret
.Ltmp1191:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv, .Ltmp1191-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp1192:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm, .Ltmp1192-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp1193:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm, .Ltmp1193-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1196:
	.cfi_def_cfa_offset 16
.Ltmp1197:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1198:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB189_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB189_3
.LBB189_2:
	leaq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv
	leaq	-24(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	(%rsi), %rsi
	movq	%rsi, (%rsp)
	movq	-40(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
.LBB189_3:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1199:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_, .Ltmp1199-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE9push_backERKS6_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	%rdx, -24(%rsp)
	movq	-16(%rsp), %rdx
	cmpq	$0, %rdx
	movq	%rdx, -32(%rsp)         # 8-byte Spill
	je	.LBB190_2
# BB#1:
	movq	-32(%rsp), %rax         # 8-byte Reload
	movq	-24(%rsp), %rcx
	movq	(%rcx), %rcx
	movq	-32(%rsp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	%rax, -40(%rsp)         # 8-byte Spill
.LBB190_2:
	ret
.Ltmp1200:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_, .Ltmp1200-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin191:
	.cfi_lsda 3, .Lexception191
# BB#0:
	pushq	%rbp
.Ltmp1232:
	.cfi_def_cfa_offset 16
.Ltmp1233:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1234:
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	leaq	16(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	je	.LBB191_2
# BB#1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	8(%rcx), %rdx
	addq	$-8, %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, -24(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	movq	(%rax), %rdi
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-16, %rcx
	movq	8(%rax), %rdx
	addq	$-8, %rdx
	movq	%rcx, %rsi
	callq	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	movq	-24(%rbp), %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB191_22
.LBB191_2:
	movl	$1, %esi
	movl	$.L.str16, %edx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc
	movq	%rax, -32(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	callq	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm
	movq	%rax, -56(%rbp)
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rsi
	movq	-16(%rbp), %rdx
.Ltmp1201:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE9constructEPS7_RKS7_
.Ltmp1202:
	jmp	.LBB191_3
.LBB191_3:
	movq	$0, -64(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp1203:
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
.Ltmp1204:
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jmp	.LBB191_4
.LBB191_4:
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rsi
	movq	-56(%rbp), %rdx
.Ltmp1205:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -144(%rbp)        # 8-byte Spill
	movq	%rdx, -152(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp1206:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB191_5
.LBB191_5:
.Ltmp1207:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-144(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
.Ltmp1208:
	movq	%rax, -168(%rbp)        # 8-byte Spill
	jmp	.LBB191_6
.LBB191_6:
	movq	-168(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	addq	$8, %rax
	movq	%rax, -64(%rbp)
.Ltmp1209:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
.Ltmp1210:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB191_7
.LBB191_7:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-64(%rbp), %rdx
.Ltmp1211:
	movq	%rdi, -184(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp1212:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB191_8
.LBB191_8:
.Ltmp1213:
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
.Ltmp1214:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB191_9
.LBB191_9:
	movq	-216(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	jmp	.LBB191_21
.LBB191_10:
.Ltmp1215:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
# BB#11:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch
	cmpq	$0, -64(%rbp)
	movq	%rax, -224(%rbp)        # 8-byte Spill
	jne	.LBB191_15
# BB#12:
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
.Ltmp1216:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_
.Ltmp1217:
	jmp	.LBB191_13
.LBB191_13:
	jmp	.LBB191_18
.LBB191_14:
.Ltmp1226:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
.Ltmp1227:
	callq	__cxa_end_catch
.Ltmp1228:
	jmp	.LBB191_20
.LBB191_15:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp1218:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -232(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -240(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp1219:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB191_16
.LBB191_16:
.Ltmp1220:
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movq	-248(%rbp), %rdx        # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E
.Ltmp1221:
	jmp	.LBB191_17
.LBB191_17:
	jmp	.LBB191_18
.LBB191_18:
	movq	-56(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp1222:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m
.Ltmp1223:
	jmp	.LBB191_19
.LBB191_19:
.Ltmp1224:
	callq	__cxa_rethrow
.Ltmp1225:
	jmp	.LBB191_25
.LBB191_20:
	jmp	.LBB191_23
.LBB191_21:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -256(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -264(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	-264(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %rcx
	subq	%rcx, %rdi
	sarq	$3, %rdi
	movq	%rdi, -272(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-64(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-56(%rbp), %rax
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB191_22:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	ret
.LBB191_23:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume
.LBB191_24:
.Ltmp1229:
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.LBB191_25:
.Ltmp1235:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_, .Ltmp1235-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
	.cfi_endproc
.Leh_func_end191:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table191:
.Lexception191:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\343\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
.Lset319 = .Leh_func_begin191-.Leh_func_begin191 # >> Call Site 1 <<
	.long	.Lset319
.Lset320 = .Ltmp1201-.Leh_func_begin191 #   Call between .Leh_func_begin191 and .Ltmp1201
	.long	.Lset320
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset321 = .Ltmp1201-.Leh_func_begin191 # >> Call Site 2 <<
	.long	.Lset321
.Lset322 = .Ltmp1214-.Ltmp1201          #   Call between .Ltmp1201 and .Ltmp1214
	.long	.Lset322
.Lset323 = .Ltmp1215-.Leh_func_begin191 #     jumps to .Ltmp1215
	.long	.Lset323
	.byte	1                       #   On action: 1
.Lset324 = .Ltmp1214-.Leh_func_begin191 # >> Call Site 3 <<
	.long	.Lset324
.Lset325 = .Ltmp1216-.Ltmp1214          #   Call between .Ltmp1214 and .Ltmp1216
	.long	.Lset325
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset326 = .Ltmp1216-.Leh_func_begin191 # >> Call Site 4 <<
	.long	.Lset326
.Lset327 = .Ltmp1217-.Ltmp1216          #   Call between .Ltmp1216 and .Ltmp1217
	.long	.Lset327
.Lset328 = .Ltmp1226-.Leh_func_begin191 #     jumps to .Ltmp1226
	.long	.Lset328
	.byte	0                       #   On action: cleanup
.Lset329 = .Ltmp1227-.Leh_func_begin191 # >> Call Site 5 <<
	.long	.Lset329
.Lset330 = .Ltmp1228-.Ltmp1227          #   Call between .Ltmp1227 and .Ltmp1228
	.long	.Lset330
.Lset331 = .Ltmp1229-.Leh_func_begin191 #     jumps to .Ltmp1229
	.long	.Lset331
	.byte	1                       #   On action: 1
.Lset332 = .Ltmp1218-.Leh_func_begin191 # >> Call Site 6 <<
	.long	.Lset332
.Lset333 = .Ltmp1225-.Ltmp1218          #   Call between .Ltmp1218 and .Ltmp1225
	.long	.Lset333
.Lset334 = .Ltmp1226-.Leh_func_begin191 #     jumps to .Ltmp1226
	.long	.Lset334
	.byte	0                       #   On action: cleanup
.Lset335 = .Ltmp1225-.Leh_func_begin191 # >> Call Site 7 <<
	.long	.Lset335
.Lset336 = .Leh_func_end191-.Ltmp1225   #   Call between .Ltmp1225 and .Leh_func_end191
	.long	.Lset336
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1238:
	.cfi_def_cfa_offset 16
.Ltmp1239:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1240:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	addq	$8, %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1241:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv, .Ltmp1241-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE3endEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1244:
	.cfi_def_cfa_offset 16
.Ltmp1245:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1246:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1247:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_, .Ltmp1247-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	ret
.Ltmp1248:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_, .Ltmp1248-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	.cfi_endproc

	.section	.text._ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,"axG",@progbits,_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,comdat
	.weak	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.align	16, 0x90
	.type	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,@function
_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_: # @_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1251:
	.cfi_def_cfa_offset 16
.Ltmp1252:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1253:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1254:
	.size	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_, .Ltmp1254-_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp1255:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv, .Ltmp1255-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	(%rdi), %rax
	ret
.Ltmp1256:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv, .Ltmp1256-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEdeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1259:
	.cfi_def_cfa_offset 16
.Ltmp1260:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1261:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movq	-56(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	cmpq	-16(%rbp), %rdx
	jae	.LBB198_2
# BB#1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc
.LBB198_2:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-64(%rbp), %rsi         # 8-byte Reload
	addq	(%rax), %rsi
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE4sizeEv
	movq	-72(%rbp), %rsi         # 8-byte Reload
	cmpq	%rax, %rsi
	jb	.LBB198_4
# BB#3:
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv
	movq	-80(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	jbe	.LBB198_5
.LBB198_4:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB198_6
.LBB198_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
.LBB198_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1262:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc, .Ltmp1262-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_M_check_lenEmPKc
	.cfi_endproc

	.section	.text._ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_,"axG",@progbits,_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_,comdat
	.weak	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	.align	16, 0x90
	.type	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_,@function
_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_: # @_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1265:
	.cfi_def_cfa_offset 16
.Ltmp1266:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1267:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	subq	%rax, %rsi
	sarq	$3, %rsi
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1268:
	.size	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_, .Ltmp1268-_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1271:
	.cfi_def_cfa_offset 16
.Ltmp1272:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1273:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1274:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv, .Ltmp1274-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE5beginEv
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1277:
	.cfi_def_cfa_offset 16
.Ltmp1278:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1279:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB201_2
# BB#1:
	movabsq	$0, %rdx
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB201_3
.LBB201_2:
	movabsq	$0, %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB201_3
.LBB201_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1280:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm, .Ltmp1280-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE11_M_allocateEm
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_,"axG",@progbits,_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_,comdat
	.weak	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
	.align	16, 0x90
	.type	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_,@function
_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_: # @_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1283:
	.cfi_def_cfa_offset 16
.Ltmp1284:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1285:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1286:
	.size	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_, .Ltmp1286-_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp1287:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv, .Ltmp1287-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp1288:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_, .Ltmp1288-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE7destroyEPS7_
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1291:
	.cfi_def_cfa_offset 16
.Ltmp1292:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1293:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1294:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E, .Ltmp1294-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1297:
	.cfi_def_cfa_offset 16
.Ltmp1298:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1299:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB206_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m
.LBB206_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1300:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m, .Ltmp1300-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1303:
	.cfi_def_cfa_offset 16
.Ltmp1304:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1305:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1306:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m, .Ltmp1306-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE10deallocateEPS7_m
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1309:
	.cfi_def_cfa_offset 16
.Ltmp1310:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1311:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1312:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_, .Ltmp1312-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEvT_S8_
	.cfi_endproc

	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_
	.align	16, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp1313:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_, .Ltmp1313-_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEvT_SA_
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	.align	16, 0x90
	.type	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1316:
	.cfi_def_cfa_offset 16
.Ltmp1317:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1318:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1319:
	.size	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E, .Ltmp1319-_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	.cfi_endproc

	.section	.text._ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,"axG",@progbits,_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,comdat
	.weak	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.align	16, 0x90
	.type	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,@function
_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_: # @_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1322:
	.cfi_def_cfa_offset 16
.Ltmp1323:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1324:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1325:
	.size	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_, .Ltmp1325-_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.cfi_endproc

	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_
	.align	16, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1328:
	.cfi_def_cfa_offset 16
.Ltmp1329:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1330:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1331:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_, .Ltmp1331-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES9_EET0_T_SB_SA_
	.cfi_endproc

	.section	.text._ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,"axG",@progbits,_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,comdat
	.weak	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.align	16, 0x90
	.type	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_,@function
_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_: # @_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1334:
	.cfi_def_cfa_offset 16
.Ltmp1335:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1336:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1337:
	.size	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_, .Ltmp1337-_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET0_T_S9_S8_
	.cfi_endproc

	.section	.text._ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,@function
_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_: # @_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1340:
	.cfi_def_cfa_offset 16
.Ltmp1341:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1342:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1343:
	.size	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_, .Ltmp1343-_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_,"axG",@progbits,_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_,comdat
	.weak	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	.align	16, 0x90
	.type	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_,@function
_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_: # @_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1346:
	.cfi_def_cfa_offset 16
.Ltmp1347:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1348:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1349:
	.size	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_, .Ltmp1349-_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	.cfi_endproc

	.section	.text._ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_,"axG",@progbits,_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_,comdat
	.weak	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_
	.align	16, 0x90
	.type	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_,@function
_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_: # @_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp1350:
	.size	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_, .Ltmp1350-_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_
	.cfi_endproc

	.section	.text._ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,@function
_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_: # @_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1353:
	.cfi_def_cfa_offset 16
.Ltmp1354:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1355:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1356:
	.size	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_, .Ltmp1356-_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_,"axG",@progbits,_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_,comdat
	.weak	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	.align	16, 0x90
	.type	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_,@function
_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_: # @_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1359:
	.cfi_def_cfa_offset 16
.Ltmp1360:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1361:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELb0EE7_S_baseES7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1362:
	.size	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_, .Ltmp1362-_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	.cfi_endproc

	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	.align	16, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1365:
	.cfi_def_cfa_offset 16
.Ltmp1366:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1367:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB219_2
# BB#1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB219_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1368:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_, .Ltmp1368-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1371:
	.cfi_def_cfa_offset 16
.Ltmp1372:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1373:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB220_2
# BB#1:
	callq	_ZSt17__throw_bad_allocv
.LBB220_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1374:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv, .Ltmp1374-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8allocateEmPKv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv
	.cfi_startproc
# BB#0:
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1375:
	.size	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv, .Ltmp1375-_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1378:
	.cfi_def_cfa_offset 16
.Ltmp1379:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1380:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1381:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv, .Ltmp1381-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp1382:
	.size	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv, .Ltmp1382-_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,@function
_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_: # @_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1385:
	.cfi_def_cfa_offset 16
.Ltmp1386:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1387:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1388:
	.size	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_, .Ltmp1388-_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_,@function
_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_: # @_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1391:
	.cfi_def_cfa_offset 16
.Ltmp1392:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1393:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1394:
	.size	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_, .Ltmp1394-_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_,"axG",@progbits,_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_,comdat
	.weak	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	.align	16, 0x90
	.type	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_,@function
_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_: # @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1397:
	.cfi_def_cfa_offset 16
.Ltmp1398:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1399:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB226_2
# BB#1:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB226_2:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1400:
	.size	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_, .Ltmp1400-_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEEPT_PKSA_SD_SB_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1403:
	.cfi_def_cfa_offset 16
.Ltmp1404:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1405:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB227_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB227_3
.LBB227_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB227_3
.LBB227_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB227_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB227_6
.LBB227_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	movl	$0, -4(%rbp)
.LBB227_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1406:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE, .Ltmp1406-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin228:
	.cfi_lsda 3, .Lexception228
# BB#0:
	pushq	%rbp
.Ltmp1415:
	.cfi_def_cfa_offset 16
.Ltmp1416:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1417:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE+16, (%rdi)
	movq	%rdi, %rax
	addq	$104, %rax
.Ltmp1407:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev
.Ltmp1408:
	jmp	.LBB228_1
.LBB228_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core12sc_port_baseD2Ev
	addq	$48, %rsp
	popq	%rbp
	ret
.LBB228_2:
.Ltmp1409:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1410:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp1411:
	jmp	.LBB228_3
.LBB228_3:
	jmp	.LBB228_4
.LBB228_4:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB228_5:
.Ltmp1412:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1418:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev, .Ltmp1418-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.cfi_endproc
.Leh_func_end228:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table228:
.Lexception228:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset337 = .Ltmp1407-.Leh_func_begin228 # >> Call Site 1 <<
	.long	.Lset337
.Lset338 = .Ltmp1408-.Ltmp1407          #   Call between .Ltmp1407 and .Ltmp1408
	.long	.Lset338
.Lset339 = .Ltmp1409-.Leh_func_begin228 #     jumps to .Ltmp1409
	.long	.Lset339
	.byte	0                       #   On action: cleanup
.Lset340 = .Ltmp1408-.Leh_func_begin228 # >> Call Site 2 <<
	.long	.Lset340
.Lset341 = .Ltmp1410-.Ltmp1408          #   Call between .Ltmp1408 and .Ltmp1410
	.long	.Lset341
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset342 = .Ltmp1410-.Leh_func_begin228 # >> Call Site 3 <<
	.long	.Lset342
.Lset343 = .Ltmp1411-.Ltmp1410          #   Call between .Ltmp1410 and .Ltmp1411
	.long	.Lset343
.Lset344 = .Ltmp1412-.Leh_func_begin228 #     jumps to .Ltmp1412
	.long	.Lset344
	.byte	1                       #   On action: 1
.Lset345 = .Ltmp1411-.Leh_func_begin228 # >> Call Site 4 <<
	.long	.Lset345
.Lset346 = .Leh_func_end228-.Ltmp1411   #   Call between .Ltmp1411 and .Leh_func_end228
	.long	.Lset346
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1421:
	.cfi_def_cfa_offset 16
.Ltmp1422:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1423:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1424:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev, .Ltmp1424-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1427:
	.cfi_def_cfa_offset 16
.Ltmp1428:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1429:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1430:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev, .Ltmp1430-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin231:
	.cfi_lsda 3, .Lexception231
# BB#0:
	pushq	%rbp
.Ltmp1436:
	.cfi_def_cfa_offset 16
.Ltmp1437:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1438:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp1431:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev
.Ltmp1432:
	jmp	.LBB231_1
.LBB231_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB231_2:
.Ltmp1433:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1439:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev, .Ltmp1439-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev
	.cfi_endproc
.Leh_func_end231:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table231:
.Lexception231:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset347 = .Ltmp1431-.Leh_func_begin231 # >> Call Site 1 <<
	.long	.Lset347
.Lset348 = .Ltmp1432-.Ltmp1431          #   Call between .Ltmp1431 and .Ltmp1432
	.long	.Lset348
.Lset349 = .Ltmp1433-.Leh_func_begin231 #     jumps to .Ltmp1433
	.long	.Lset349
	.byte	0                       #   On action: cleanup
.Lset350 = .Ltmp1432-.Leh_func_begin231 # >> Call Site 2 <<
	.long	.Lset350
.Lset351 = .Leh_func_end231-.Ltmp1432   #   Call between .Ltmp1432 and .Leh_func_end231
	.long	.Lset351
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1442:
	.cfi_def_cfa_offset 16
.Ltmp1443:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1444:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB232_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB232_3
.LBB232_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB232_3
.LBB232_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB232_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB232_6
.LBB232_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
.LBB232_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1445:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE, .Ltmp1445-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1448:
	.cfi_def_cfa_offset 16
.Ltmp1449:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1450:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1451:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_, .Ltmp1451-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1454:
	.cfi_def_cfa_offset 16
.Ltmp1455:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1456:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1457:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_, .Ltmp1457-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin235:
	.cfi_lsda 3, .Lexception235
# BB#0:
	pushq	%rbp
.Ltmp1468:
	.cfi_def_cfa_offset 16
.Ltmp1469:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1470:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, %rcx
.Ltmp1458:
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp1459:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB235_1
.LBB235_1:
.Ltmp1460:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEES6_EvT_S8_RSaIT0_E
.Ltmp1461:
	jmp	.LBB235_2
.LBB235_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB235_3:
.Ltmp1462:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1463:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
.Ltmp1464:
	jmp	.LBB235_4
.LBB235_4:
	jmp	.LBB235_5
.LBB235_5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB235_6:
.Ltmp1465:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1471:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev, .Ltmp1471-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	.cfi_endproc
.Leh_func_end235:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table235:
.Lexception235:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset352 = .Ltmp1458-.Leh_func_begin235 # >> Call Site 1 <<
	.long	.Lset352
.Lset353 = .Ltmp1461-.Ltmp1458          #   Call between .Ltmp1458 and .Ltmp1461
	.long	.Lset353
.Lset354 = .Ltmp1462-.Leh_func_begin235 #     jumps to .Ltmp1462
	.long	.Lset354
	.byte	0                       #   On action: cleanup
.Lset355 = .Ltmp1461-.Leh_func_begin235 # >> Call Site 2 <<
	.long	.Lset355
.Lset356 = .Ltmp1463-.Ltmp1461          #   Call between .Ltmp1461 and .Ltmp1463
	.long	.Lset356
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset357 = .Ltmp1463-.Leh_func_begin235 # >> Call Site 3 <<
	.long	.Lset357
.Lset358 = .Ltmp1464-.Ltmp1463          #   Call between .Ltmp1463 and .Ltmp1464
	.long	.Lset358
.Lset359 = .Ltmp1465-.Leh_func_begin235 #     jumps to .Ltmp1465
	.long	.Lset359
	.byte	1                       #   On action: 1
.Lset360 = .Ltmp1464-.Leh_func_begin235 # >> Call Site 4 <<
	.long	.Lset360
.Lset361 = .Leh_func_end235-.Ltmp1464   #   Call between .Ltmp1464 and .Leh_func_end235
	.long	.Lset361
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin236:
	.cfi_lsda 3, .Lexception236
# BB#0:
	pushq	%rbp
.Ltmp1477:
	.cfi_def_cfa_offset 16
.Ltmp1478:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1479:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rdi, %rdx
.Ltmp1472:
	movq	%rax, %rsi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE13_M_deallocateEPS6_m
.Ltmp1473:
	jmp	.LBB236_1
.LBB236_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB236_2:
.Ltmp1474:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1480:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev, .Ltmp1480-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EED2Ev
	.cfi_endproc
.Leh_func_end236:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table236:
.Lexception236:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset362 = .Ltmp1472-.Leh_func_begin236 # >> Call Site 1 <<
	.long	.Lset362
.Lset363 = .Ltmp1473-.Ltmp1472          #   Call between .Ltmp1472 and .Ltmp1473
	.long	.Lset363
.Lset364 = .Ltmp1474-.Leh_func_begin236 #     jumps to .Ltmp1474
	.long	.Lset364
	.byte	0                       #   On action: cleanup
.Lset365 = .Ltmp1473-.Leh_func_begin236 # >> Call Site 2 <<
	.long	.Lset365
.Lset366 = .Leh_func_end236-.Ltmp1473   #   Call between .Ltmp1473 and .Leh_func_end236
	.long	.Lset366
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1483:
	.cfi_def_cfa_offset 16
.Ltmp1484:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1485:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1486:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev, .Ltmp1486-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1489:
	.cfi_def_cfa_offset 16
.Ltmp1490:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1491:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1492:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev, .Ltmp1492-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implD2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1495:
	.cfi_def_cfa_offset 16
.Ltmp1496:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1497:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1498:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev, .Ltmp1498-_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1499:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev, .Ltmp1499-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiED2Ev,"axG",@progbits,_ZN7sc_core5sc_inIiED2Ev,comdat
	.weak	_ZN7sc_core5sc_inIiED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiED2Ev,@function
_ZN7sc_core5sc_inIiED2Ev:               # @_ZN7sc_core5sc_inIiED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin241:
	.cfi_lsda 3, .Lexception241
# BB#0:
	pushq	%rbp
.Ltmp1510:
	.cfi_def_cfa_offset 16
.Ltmp1511:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1512:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core5sc_inIiEE+16, (%rdi)
	movq	%rdi, %rax
.Ltmp1500:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK7sc_core5sc_inIiE13remove_tracesEv
.Ltmp1501:
	jmp	.LBB241_1
.LBB241_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	je	.LBB241_4
# BB#2:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp1502:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp1503:
	jmp	.LBB241_3
.LBB241_3:
	jmp	.LBB241_4
.LBB241_4:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB241_5:
.Ltmp1504:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1505:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev
.Ltmp1506:
	jmp	.LBB241_6
.LBB241_6:
	jmp	.LBB241_7
.LBB241_7:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB241_8:
.Ltmp1507:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1513:
	.size	_ZN7sc_core5sc_inIiED2Ev, .Ltmp1513-_ZN7sc_core5sc_inIiED2Ev
	.cfi_endproc
.Leh_func_end241:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table241:
.Lexception241:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset367 = .Ltmp1500-.Leh_func_begin241 # >> Call Site 1 <<
	.long	.Lset367
.Lset368 = .Ltmp1503-.Ltmp1500          #   Call between .Ltmp1500 and .Ltmp1503
	.long	.Lset368
.Lset369 = .Ltmp1504-.Leh_func_begin241 #     jumps to .Ltmp1504
	.long	.Lset369
	.byte	0                       #   On action: cleanup
.Lset370 = .Ltmp1503-.Leh_func_begin241 # >> Call Site 2 <<
	.long	.Lset370
.Lset371 = .Ltmp1505-.Ltmp1503          #   Call between .Ltmp1503 and .Ltmp1505
	.long	.Lset371
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset372 = .Ltmp1505-.Leh_func_begin241 # >> Call Site 3 <<
	.long	.Lset372
.Lset373 = .Ltmp1506-.Ltmp1505          #   Call between .Ltmp1505 and .Ltmp1506
	.long	.Lset373
.Lset374 = .Ltmp1507-.Leh_func_begin241 #     jumps to .Ltmp1507
	.long	.Lset374
	.byte	1                       #   On action: 1
.Lset375 = .Ltmp1506-.Leh_func_begin241 # >> Call Site 4 <<
	.long	.Lset375
.Lset376 = .Leh_func_end241-.Ltmp1506   #   Call between .Ltmp1506 and .Leh_func_end241
	.long	.Lset376
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core5sc_inIiE13remove_tracesEv,"axG",@progbits,_ZNK7sc_core5sc_inIiE13remove_tracesEv,comdat
	.weak	_ZNK7sc_core5sc_inIiE13remove_tracesEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIiE13remove_tracesEv,@function
_ZNK7sc_core5sc_inIiE13remove_tracesEv: # @_ZNK7sc_core5sc_inIiE13remove_tracesEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin242:
	.cfi_lsda 3, .Lexception242
# BB#0:
	pushq	%rbp
.Ltmp1522:
	.cfi_def_cfa_offset 16
.Ltmp1523:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1524:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB242_14
# BB#1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %ecx
	subl	$1, %ecx
	movl	%ecx, -12(%rbp)
.LBB242_2:                              # =>This Inner Loop Header: Depth=1
	cmpl	$0, -12(%rbp)
	jl	.LBB242_9
# BB#3:                                 #   in Loop: Header=BB242_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	je	.LBB242_6
# BB#4:                                 #   in Loop: Header=BB242_2 Depth=1
.Ltmp1517:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core15sc_trace_paramsD1Ev
.Ltmp1518:
	jmp	.LBB242_5
.LBB242_5:                              #   in Loop: Header=BB242_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB242_6:                              #   in Loop: Header=BB242_2 Depth=1
	jmp	.LBB242_7
.LBB242_7:                              #   in Loop: Header=BB242_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, -12(%rbp)
	jmp	.LBB242_2
.LBB242_8:
.Ltmp1519:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB242_15
.LBB242_9:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	je	.LBB242_12
# BB#10:
.Ltmp1514:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
.Ltmp1515:
	jmp	.LBB242_11
.LBB242_11:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB242_12:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	$0, 128(%rax)
	jmp	.LBB242_14
.LBB242_13:
.Ltmp1516:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB242_15
.LBB242_14:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB242_15:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1525:
	.size	_ZNK7sc_core5sc_inIiE13remove_tracesEv, .Ltmp1525-_ZNK7sc_core5sc_inIiE13remove_tracesEv
	.cfi_endproc
.Leh_func_end242:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table242:
.Lexception242:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset377 = .Ltmp1517-.Leh_func_begin242 # >> Call Site 1 <<
	.long	.Lset377
.Lset378 = .Ltmp1518-.Ltmp1517          #   Call between .Ltmp1517 and .Ltmp1518
	.long	.Lset378
.Lset379 = .Ltmp1519-.Leh_func_begin242 #     jumps to .Ltmp1519
	.long	.Lset379
	.byte	0                       #   On action: cleanup
.Lset380 = .Ltmp1514-.Leh_func_begin242 # >> Call Site 2 <<
	.long	.Lset380
.Lset381 = .Ltmp1515-.Ltmp1514          #   Call between .Ltmp1514 and .Ltmp1515
	.long	.Lset381
.Lset382 = .Ltmp1516-.Leh_func_begin242 #     jumps to .Ltmp1516
	.long	.Lset382
	.byte	0                       #   On action: cleanup
.Lset383 = .Ltmp1515-.Leh_func_begin242 # >> Call Site 3 <<
	.long	.Lset383
.Lset384 = .Leh_func_end242-.Ltmp1515   #   Call between .Ltmp1515 and .Leh_func_end242
	.long	.Lset384
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1528:
	.cfi_def_cfa_offset 16
.Ltmp1529:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1530:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1531:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev, .Ltmp1531-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIiE4kindEv,"axG",@progbits,_ZNK7sc_core5sc_inIiE4kindEv,comdat
	.weak	_ZNK7sc_core5sc_inIiE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIiE4kindEv,@function
_ZNK7sc_core5sc_inIiE4kindEv:           # @_ZNK7sc_core5sc_inIiE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str19, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1532:
	.size	_ZNK7sc_core5sc_inIiE4kindEv, .Ltmp1532-_ZNK7sc_core5sc_inIiE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiED0Ev,"axG",@progbits,_ZN7sc_core5sc_inIiED0Ev,comdat
	.weak	_ZN7sc_core5sc_inIiED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiED0Ev,@function
_ZN7sc_core5sc_inIiED0Ev:               # @_ZN7sc_core5sc_inIiED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin245:
	.cfi_lsda 3, .Lexception245
# BB#0:
	pushq	%rbp
.Ltmp1538:
	.cfi_def_cfa_offset 16
.Ltmp1539:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1540:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp1533:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core5sc_inIiED1Ev
.Ltmp1534:
	jmp	.LBB245_1
.LBB245_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB245_2:
.Ltmp1535:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1541:
	.size	_ZN7sc_core5sc_inIiED0Ev, .Ltmp1541-_ZN7sc_core5sc_inIiED0Ev
	.cfi_endproc
.Leh_func_end245:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table245:
.Lexception245:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset385 = .Ltmp1533-.Leh_func_begin245 # >> Call Site 1 <<
	.long	.Lset385
.Lset386 = .Ltmp1534-.Ltmp1533          #   Call between .Ltmp1533 and .Ltmp1534
	.long	.Lset386
.Lset387 = .Ltmp1535-.Leh_func_begin245 #     jumps to .Ltmp1535
	.long	.Lset387
	.byte	0                       #   On action: cleanup
.Lset388 = .Ltmp1534-.Leh_func_begin245 # >> Call Site 2 <<
	.long	.Lset388
.Lset389 = .Leh_func_end245-.Ltmp1534   #   Call between .Ltmp1534 and .Leh_func_end245
	.long	.Lset389
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB246_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB246_3
.LBB246_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB246_3
.LBB246_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp1542:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv, .Ltmp1542-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB247_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB247_3
.LBB247_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB247_3
.LBB247_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp1543:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv, .Ltmp1543-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1546:
	.cfi_def_cfa_offset 16
.Ltmp1547:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1548:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1549:
	.size	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE, .Ltmp1549-_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1552:
	.cfi_def_cfa_offset 16
.Ltmp1553:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1554:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	je	.LBB249_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE, %rcx
	movabsq	$-1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jmp	.LBB249_3
.LBB249_2:
	movabsq	$0, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jmp	.LBB249_3
.LBB249_3:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB249_5
# BB#4:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
	jmp	.LBB249_11
.LBB249_5:
	movq	-24(%rbp), %rax
	cmpq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	je	.LBB249_7
# BB#6:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE, %rcx
	movabsq	$-1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-88(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB249_8
.LBB249_7:
	movabsq	$0, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB249_8
.LBB249_8:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB249_10
# BB#9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
	jmp	.LBB249_11
.LBB249_10:
	movl	$2, -4(%rbp)
.LBB249_11:
	movl	-4(%rbp), %eax
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1555:
	.size	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE, .Ltmp1555-_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1558:
	.cfi_def_cfa_offset 16
.Ltmp1559:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1560:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB250_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIiEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB250_3
.LBB250_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB250_3
.LBB250_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB250_5
# BB#4:
	jmp	.LBB250_6
.LBB250_5:
	leaq	.L.str14, %rdi
	leaq	.L.str13, %rsi
	movl	$541, %edx              # imm = 0x21D
	leaq	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE, %rcx
	callq	__assert_fail
.LBB250_6:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB250_7:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB250_12
# BB#8:                                 #   in Loop: Header=BB250_7 Depth=1
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	addq	$104, %rcx
	movslq	-32(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	movq	-72(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	jne	.LBB250_10
# BB#9:                                 #   in Loop: Header=BB250_7 Depth=1
	leaq	_ZN7sc_core22SC_ID_BIND_IF_TO_PORT_E, %rsi
	leaq	.L.str15, %rdx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB250_10:                             #   in Loop: Header=BB250_7 Depth=1
	jmp	.LBB250_11
.LBB250_11:                             #   in Loop: Header=BB250_7 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB250_7
.LBB250_12:
	leaq	-24(%rbp), %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_
	movabsq	$0, %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, 96(%rsi)
	addq	$80, %rsp
	popq	%rbp
	ret
.Ltmp1561:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE, .Ltmp1561-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1564:
	.cfi_def_cfa_offset 16
.Ltmp1565:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1566:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$104, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, %eax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1567:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv, .Ltmp1567-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1570:
	.cfi_def_cfa_offset 16
.Ltmp1571:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1572:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZTIN7sc_core15sc_signal_in_ifIiEE, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt9type_info4nameEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1573:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv, .Ltmp1573-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE18end_of_elaborationEv,"axG",@progbits,_ZN7sc_core5sc_inIiE18end_of_elaborationEv,comdat
	.weak	_ZN7sc_core5sc_inIiE18end_of_elaborationEv
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE18end_of_elaborationEv,@function
_ZN7sc_core5sc_inIiE18end_of_elaborationEv: # @_ZN7sc_core5sc_inIiE18end_of_elaborationEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1576:
	.cfi_def_cfa_offset 16
.Ltmp1577:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1578:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB253_9
# BB#1:
	movl	$0, -12(%rbp)
.LBB253_2:                              # =>This Inner Loop Header: Depth=1
	movl	-12(%rbp), %eax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	128(%rcx), %rdi
	movl	%eax, -44(%rbp)         # 4-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %edx
	movl	-44(%rbp), %esi         # 4-byte Reload
	cmpl	%edx, %esi
	jge	.LBB253_8
# BB#3:                                 #   in Loop: Header=BB253_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	(%rsi), %rdi
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-56(%rbp), %rax         # 8-byte Reload
	callq	*112(%rax)
	cmpq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	je	.LBB253_5
# BB#4:                                 #   in Loop: Header=BB253_2 Depth=1
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIiEE, %rcx
	movabsq	$-1, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB253_6
.LBB253_5:                              #   in Loop: Header=BB253_2 Depth=1
	movabsq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB253_6
.LBB253_6:                              #   in Loop: Header=BB253_2 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$32, %ecx
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rdi
	movq	-32(%rbp), %rax
	movq	(%rax), %rdx
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%ecx, -92(%rbp)         # 4-byte Spill
	callq	*40(%rdx)
	movq	-24(%rbp), %rdx
	addq	$8, %rdx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	movl	-92(%rbp), %ecx         # 4-byte Reload
	callq	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi
# BB#7:                                 #   in Loop: Header=BB253_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -12(%rbp)
	jmp	.LBB253_2
.LBB253_8:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK7sc_core5sc_inIiE13remove_tracesEv
.LBB253_9:
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1579:
	.size	_ZN7sc_core5sc_inIiE18end_of_elaborationEv, .Ltmp1579-_ZN7sc_core5sc_inIiE18end_of_elaborationEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1582:
	.cfi_def_cfa_offset 16
.Ltmp1583:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1584:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB254_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB254_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB254_8
# BB#3:                                 #   in Loop: Header=BB254_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB254_5
# BB#4:                                 #   in Loop: Header=BB254_2 Depth=1
	jmp	.LBB254_6
.LBB254_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$588, %edx              # imm = 0x24C
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB254_6:                              #   in Loop: Header=BB254_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_thread_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB254_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB254_2
.LBB254_8:
	jmp	.LBB254_10
.LBB254_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.LBB254_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1585:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, .Ltmp1585-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1588:
	.cfi_def_cfa_offset 16
.Ltmp1589:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1590:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB255_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB255_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB255_8
# BB#3:                                 #   in Loop: Header=BB255_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB255_5
# BB#4:                                 #   in Loop: Header=BB255_2 Depth=1
	jmp	.LBB255_6
.LBB255_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$609, %edx              # imm = 0x261
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB255_6:                              #   in Loop: Header=BB255_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_method_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB255_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB255_2
.LBB255_8:
	jmp	.LBB255_10
.LBB255_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
.LBB255_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1591:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, .Ltmp1591-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE,"axG",@progbits,_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE,comdat
	.weak	_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE,@function
_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE: # @_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1594:
	.cfi_def_cfa_offset 16
.Ltmp1595:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1596:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	(%rsi), %rdi
	movq	232(%rdi), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	-24(%rbp), %rax         # 8-byte Reload
	callq	*%rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1597:
	.size	_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE, .Ltmp1597-_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE,"axG",@progbits,_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE,comdat
	.weak	_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE,@function
_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE: # @_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1600:
	.cfi_def_cfa_offset 16
.Ltmp1601:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1602:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1603:
	.size	_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE, .Ltmp1603-_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE,"axG",@progbits,_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE,comdat
	.weak	_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE,@function
_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE: # @_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1606:
	.cfi_def_cfa_offset 16
.Ltmp1607:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1608:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1609:
	.size	_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE, .Ltmp1609-_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,"axG",@progbits,_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,@function
_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE: # @_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1612:
	.cfi_def_cfa_offset 16
.Ltmp1613:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1614:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1615:
	.size	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE, .Ltmp1615-_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,"axG",@progbits,_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,@function
_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE: # @_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1618:
	.cfi_def_cfa_offset 16
.Ltmp1619:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1620:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1621:
	.size	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE, .Ltmp1621-_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	ret
.Ltmp1622:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv, .Ltmp1622-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp1623:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm, .Ltmp1623-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi,"axG",@progbits,_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi,comdat
	.weak	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi
	.align	16, 0x90
	.type	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi,@function
_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi: # @_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1626:
	.cfi_def_cfa_offset 16
.Ltmp1627:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1628:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movl	%ecx, -28(%rbp)
	cmpq	$0, -8(%rbp)
	je	.LBB263_2
# BB#1:
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	72(%rcx), %rcx
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %edi
	movl	%edi, -32(%rbp)         # 4-byte Spill
	movq	%rax, %rdi
	movl	-32(%rbp), %r8d         # 4-byte Reload
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	movl	%r8d, %ecx
	movq	-40(%rbp), %rax         # 8-byte Reload
	callq	*%rax
.LBB263_2:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1629:
	.size	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi, .Ltmp1629-_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKiRKSsi
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp1630:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm, .Ltmp1630-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1633:
	.cfi_def_cfa_offset 16
.Ltmp1634:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1635:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB265_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB265_3
.LBB265_2:
	leaq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv
	leaq	-24(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	(%rsi), %rsi
	movq	%rsi, (%rsp)
	movq	-40(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
.LBB265_3:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1636:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_, .Ltmp1636-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE9push_backERKS3_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	%rdx, -24(%rsp)
	movq	-16(%rsp), %rdx
	cmpq	$0, %rdx
	movq	%rdx, -32(%rsp)         # 8-byte Spill
	je	.LBB266_2
# BB#1:
	movq	-32(%rsp), %rax         # 8-byte Reload
	movq	-24(%rsp), %rcx
	movq	(%rcx), %rcx
	movq	-32(%rsp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	%rax, -40(%rsp)         # 8-byte Spill
.LBB266_2:
	ret
.Ltmp1637:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_, .Ltmp1637-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin267:
	.cfi_lsda 3, .Lexception267
# BB#0:
	pushq	%rbp
.Ltmp1669:
	.cfi_def_cfa_offset 16
.Ltmp1670:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1671:
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	leaq	16(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	je	.LBB267_2
# BB#1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	8(%rcx), %rdx
	addq	$-8, %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, -24(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rdi
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-16, %rcx
	movq	8(%rax), %rdx
	addq	$-8, %rdx
	movq	%rcx, %rsi
	callq	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	movq	-24(%rbp), %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB267_22
.LBB267_2:
	movl	$1, %esi
	movl	$.L.str16, %edx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc
	movq	%rax, -32(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	callq	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm
	movq	%rax, -56(%rbp)
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rsi
	movq	-16(%rbp), %rdx
.Ltmp1638:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE9constructEPS4_RKS4_
.Ltmp1639:
	jmp	.LBB267_3
.LBB267_3:
	movq	$0, -64(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp1640:
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
.Ltmp1641:
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jmp	.LBB267_4
.LBB267_4:
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rsi
	movq	-56(%rbp), %rdx
.Ltmp1642:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -144(%rbp)        # 8-byte Spill
	movq	%rdx, -152(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp1643:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB267_5
.LBB267_5:
.Ltmp1644:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-144(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_
.Ltmp1645:
	movq	%rax, -168(%rbp)        # 8-byte Spill
	jmp	.LBB267_6
.LBB267_6:
	movq	-168(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	addq	$8, %rax
	movq	%rax, -64(%rbp)
.Ltmp1646:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
.Ltmp1647:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB267_7
.LBB267_7:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-64(%rbp), %rdx
.Ltmp1648:
	movq	%rdi, -184(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp1649:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB267_8
.LBB267_8:
.Ltmp1650:
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_
.Ltmp1651:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB267_9
.LBB267_9:
	movq	-216(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	jmp	.LBB267_21
.LBB267_10:
.Ltmp1652:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
# BB#11:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch
	cmpq	$0, -64(%rbp)
	movq	%rax, -224(%rbp)        # 8-byte Spill
	jne	.LBB267_15
# BB#12:
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
.Ltmp1653:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_
.Ltmp1654:
	jmp	.LBB267_13
.LBB267_13:
	jmp	.LBB267_18
.LBB267_14:
.Ltmp1663:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
.Ltmp1664:
	callq	__cxa_end_catch
.Ltmp1665:
	jmp	.LBB267_20
.LBB267_15:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp1655:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -232(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -240(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp1656:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB267_16
.LBB267_16:
.Ltmp1657:
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movq	-248(%rbp), %rdx        # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E
.Ltmp1658:
	jmp	.LBB267_17
.LBB267_17:
	jmp	.LBB267_18
.LBB267_18:
	movq	-56(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp1659:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m
.Ltmp1660:
	jmp	.LBB267_19
.LBB267_19:
.Ltmp1661:
	callq	__cxa_rethrow
.Ltmp1662:
	jmp	.LBB267_25
.LBB267_20:
	jmp	.LBB267_23
.LBB267_21:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -256(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -264(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	-264(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %rcx
	subq	%rcx, %rdi
	sarq	$3, %rdi
	movq	%rdi, -272(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-64(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-56(%rbp), %rax
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB267_22:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	ret
.LBB267_23:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume
.LBB267_24:
.Ltmp1666:
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.LBB267_25:
.Ltmp1672:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_, .Ltmp1672-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.cfi_endproc
.Leh_func_end267:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table267:
.Lexception267:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\343\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
.Lset390 = .Leh_func_begin267-.Leh_func_begin267 # >> Call Site 1 <<
	.long	.Lset390
.Lset391 = .Ltmp1638-.Leh_func_begin267 #   Call between .Leh_func_begin267 and .Ltmp1638
	.long	.Lset391
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset392 = .Ltmp1638-.Leh_func_begin267 # >> Call Site 2 <<
	.long	.Lset392
.Lset393 = .Ltmp1651-.Ltmp1638          #   Call between .Ltmp1638 and .Ltmp1651
	.long	.Lset393
.Lset394 = .Ltmp1652-.Leh_func_begin267 #     jumps to .Ltmp1652
	.long	.Lset394
	.byte	1                       #   On action: 1
.Lset395 = .Ltmp1651-.Leh_func_begin267 # >> Call Site 3 <<
	.long	.Lset395
.Lset396 = .Ltmp1653-.Ltmp1651          #   Call between .Ltmp1651 and .Ltmp1653
	.long	.Lset396
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset397 = .Ltmp1653-.Leh_func_begin267 # >> Call Site 4 <<
	.long	.Lset397
.Lset398 = .Ltmp1654-.Ltmp1653          #   Call between .Ltmp1653 and .Ltmp1654
	.long	.Lset398
.Lset399 = .Ltmp1663-.Leh_func_begin267 #     jumps to .Ltmp1663
	.long	.Lset399
	.byte	0                       #   On action: cleanup
.Lset400 = .Ltmp1664-.Leh_func_begin267 # >> Call Site 5 <<
	.long	.Lset400
.Lset401 = .Ltmp1665-.Ltmp1664          #   Call between .Ltmp1664 and .Ltmp1665
	.long	.Lset401
.Lset402 = .Ltmp1666-.Leh_func_begin267 #     jumps to .Ltmp1666
	.long	.Lset402
	.byte	1                       #   On action: 1
.Lset403 = .Ltmp1655-.Leh_func_begin267 # >> Call Site 6 <<
	.long	.Lset403
.Lset404 = .Ltmp1662-.Ltmp1655          #   Call between .Ltmp1655 and .Ltmp1662
	.long	.Lset404
.Lset405 = .Ltmp1663-.Leh_func_begin267 #     jumps to .Ltmp1663
	.long	.Lset405
	.byte	0                       #   On action: cleanup
.Lset406 = .Ltmp1662-.Leh_func_begin267 # >> Call Site 7 <<
	.long	.Lset406
.Lset407 = .Leh_func_end267-.Ltmp1662   #   Call between .Ltmp1662 and .Leh_func_end267
	.long	.Lset407
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1675:
	.cfi_def_cfa_offset 16
.Ltmp1676:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1677:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	addq	$8, %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1678:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv, .Ltmp1678-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE3endEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1681:
	.cfi_def_cfa_offset 16
.Ltmp1682:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1683:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1684:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_, .Ltmp1684-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	ret
.Ltmp1685:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_, .Ltmp1685-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_endproc

	.section	.text._ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,@function
_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_: # @_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1688:
	.cfi_def_cfa_offset 16
.Ltmp1689:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1690:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1691:
	.size	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_, .Ltmp1691-_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp1692:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv, .Ltmp1692-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	(%rdi), %rax
	ret
.Ltmp1693:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv, .Ltmp1693-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEdeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1696:
	.cfi_def_cfa_offset 16
.Ltmp1697:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1698:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movq	-56(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	cmpq	-16(%rbp), %rdx
	jae	.LBB274_2
# BB#1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc
.LBB274_2:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-64(%rbp), %rsi         # 8-byte Reload
	addq	(%rax), %rsi
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE4sizeEv
	movq	-72(%rbp), %rsi         # 8-byte Reload
	cmpq	%rax, %rsi
	jb	.LBB274_4
# BB#3:
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv
	movq	-80(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	jbe	.LBB274_5
.LBB274_4:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB274_6
.LBB274_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
.LBB274_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1699:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc, .Ltmp1699-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_M_check_lenEmPKc
	.cfi_endproc

	.section	.text._ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,"axG",@progbits,_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,comdat
	.weak	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.align	16, 0x90
	.type	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,@function
_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_: # @_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1702:
	.cfi_def_cfa_offset 16
.Ltmp1703:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1704:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	subq	%rax, %rsi
	sarq	$3, %rsi
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1705:
	.size	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_, .Ltmp1705-_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1708:
	.cfi_def_cfa_offset 16
.Ltmp1709:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1710:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIiEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1711:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv, .Ltmp1711-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE5beginEv
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1714:
	.cfi_def_cfa_offset 16
.Ltmp1715:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1716:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB277_2
# BB#1:
	movabsq	$0, %rdx
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB277_3
.LBB277_2:
	movabsq	$0, %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB277_3
.LBB277_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1717:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm, .Ltmp1717-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE11_M_allocateEm
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_,"axG",@progbits,_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_,comdat
	.weak	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_
	.align	16, 0x90
	.type	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_,@function
_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_: # @_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1720:
	.cfi_def_cfa_offset 16
.Ltmp1721:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1722:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1723:
	.size	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_, .Ltmp1723-_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIiEES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp1724:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv, .Ltmp1724-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp1725:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_, .Ltmp1725-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE7destroyEPS4_
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1728:
	.cfi_def_cfa_offset 16
.Ltmp1729:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1730:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1731:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E, .Ltmp1731-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1734:
	.cfi_def_cfa_offset 16
.Ltmp1735:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1736:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB282_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m
.LBB282_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1737:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m, .Ltmp1737-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1740:
	.cfi_def_cfa_offset 16
.Ltmp1741:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1742:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1743:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m, .Ltmp1743-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE10deallocateEPS4_m
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1746:
	.cfi_def_cfa_offset 16
.Ltmp1747:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1748:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1749:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_, .Ltmp1749-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEEEvT_S5_
	.cfi_endproc

	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_
	.align	16, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp1750:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_, .Ltmp1750-_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIiEEEEvT_S7_
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.align	16, 0x90
	.type	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1753:
	.cfi_def_cfa_offset 16
.Ltmp1754:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1755:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1756:
	.size	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E, .Ltmp1756-_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIiEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.cfi_endproc

	.section	.text._ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,@function
_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_: # @_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1759:
	.cfi_def_cfa_offset 16
.Ltmp1760:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1761:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1762:
	.size	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_, .Ltmp1762-_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_
	.align	16, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1765:
	.cfi_def_cfa_offset 16
.Ltmp1766:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1767:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1768:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_, .Ltmp1768-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIiEES6_EET0_T_S8_S7_
	.cfi_endproc

	.section	.text._ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_,@function
_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_: # @_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1771:
	.cfi_def_cfa_offset 16
.Ltmp1772:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1773:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1774:
	.size	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_, .Ltmp1774-_ZSt4copyIPPN7sc_core15sc_signal_in_ifIiEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,@function
_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_: # @_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1777:
	.cfi_def_cfa_offset 16
.Ltmp1778:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1779:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1780:
	.size	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_, .Ltmp1780-_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_,"axG",@progbits,_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_,comdat
	.weak	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.align	16, 0x90
	.type	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_,@function
_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_: # @_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1783:
	.cfi_def_cfa_offset 16
.Ltmp1784:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1785:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1786:
	.size	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_, .Ltmp1786-_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.cfi_endproc

	.section	.text._ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_,"axG",@progbits,_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_,comdat
	.weak	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_
	.align	16, 0x90
	.type	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_,@function
_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_: # @_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp1787:
	.size	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_, .Ltmp1787-_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_
	.cfi_endproc

	.section	.text._ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,@function
_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_: # @_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1790:
	.cfi_def_cfa_offset 16
.Ltmp1791:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1792:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1793:
	.size	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_, .Ltmp1793-_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_,"axG",@progbits,_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_,comdat
	.weak	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.align	16, 0x90
	.type	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_,@function
_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_: # @_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1796:
	.cfi_def_cfa_offset 16
.Ltmp1797:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1798:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIiEELb0EE7_S_baseES4_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1799:
	.size	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_, .Ltmp1799-_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.cfi_endproc

	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	.align	16, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1802:
	.cfi_def_cfa_offset 16
.Ltmp1803:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1804:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB295_2
# BB#1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB295_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1805:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_, .Ltmp1805-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1808:
	.cfi_def_cfa_offset 16
.Ltmp1809:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1810:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB296_2
# BB#1:
	callq	_ZSt17__throw_bad_allocv
.LBB296_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1811:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv, .Ltmp1811-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8allocateEmPKv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv
	.cfi_startproc
# BB#0:
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1812:
	.size	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv, .Ltmp1812-_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1815:
	.cfi_def_cfa_offset 16
.Ltmp1816:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1817:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1818:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv, .Ltmp1818-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp1819:
	.size	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv, .Ltmp1819-_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,@function
_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_: # @_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1822:
	.cfi_def_cfa_offset 16
.Ltmp1823:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1824:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIiEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp1825:
	.size	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_, .Ltmp1825-_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_,@function
_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_: # @_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1828:
	.cfi_def_cfa_offset 16
.Ltmp1829:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1830:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1831:
	.size	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_, .Ltmp1831-_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIiEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_,"axG",@progbits,_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_,comdat
	.weak	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	.align	16, 0x90
	.type	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_,@function
_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_: # @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1834:
	.cfi_def_cfa_offset 16
.Ltmp1835:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1836:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB302_2
# BB#1:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB302_2:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1837:
	.size	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_, .Ltmp1837-_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIiEEEEPT_PKS7_SA_S8_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1840:
	.cfi_def_cfa_offset 16
.Ltmp1841:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1842:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB303_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIiEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB303_3
.LBB303_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB303_3
.LBB303_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB303_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB303_6
.LBB303_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	movl	$0, -4(%rbp)
.LBB303_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1843:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE, .Ltmp1843-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin304:
	.cfi_lsda 3, .Lexception304
# BB#0:
	pushq	%rbp
.Ltmp1852:
	.cfi_def_cfa_offset 16
.Ltmp1853:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1854:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE+16, (%rdi)
	movq	%rdi, %rax
	addq	$104, %rax
.Ltmp1844:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev
.Ltmp1845:
	jmp	.LBB304_1
.LBB304_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core12sc_port_baseD2Ev
	addq	$48, %rsp
	popq	%rbp
	ret
.LBB304_2:
.Ltmp1846:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1847:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp1848:
	jmp	.LBB304_3
.LBB304_3:
	jmp	.LBB304_4
.LBB304_4:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB304_5:
.Ltmp1849:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1855:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev, .Ltmp1855-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev
	.cfi_endproc
.Leh_func_end304:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table304:
.Lexception304:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset408 = .Ltmp1844-.Leh_func_begin304 # >> Call Site 1 <<
	.long	.Lset408
.Lset409 = .Ltmp1845-.Ltmp1844          #   Call between .Ltmp1844 and .Ltmp1845
	.long	.Lset409
.Lset410 = .Ltmp1846-.Leh_func_begin304 #     jumps to .Ltmp1846
	.long	.Lset410
	.byte	0                       #   On action: cleanup
.Lset411 = .Ltmp1845-.Leh_func_begin304 # >> Call Site 2 <<
	.long	.Lset411
.Lset412 = .Ltmp1847-.Ltmp1845          #   Call between .Ltmp1845 and .Ltmp1847
	.long	.Lset412
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset413 = .Ltmp1847-.Leh_func_begin304 # >> Call Site 3 <<
	.long	.Lset413
.Lset414 = .Ltmp1848-.Ltmp1847          #   Call between .Ltmp1847 and .Ltmp1848
	.long	.Lset414
.Lset415 = .Ltmp1849-.Leh_func_begin304 #     jumps to .Ltmp1849
	.long	.Lset415
	.byte	1                       #   On action: 1
.Lset416 = .Ltmp1848-.Leh_func_begin304 # >> Call Site 4 <<
	.long	.Lset416
.Lset417 = .Leh_func_end304-.Ltmp1848   #   Call between .Ltmp1848 and .Leh_func_end304
	.long	.Lset417
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1858:
	.cfi_def_cfa_offset 16
.Ltmp1859:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1860:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1861:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev, .Ltmp1861-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1864:
	.cfi_def_cfa_offset 16
.Ltmp1865:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1866:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1867:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev, .Ltmp1867-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin307:
	.cfi_lsda 3, .Lexception307
# BB#0:
	pushq	%rbp
.Ltmp1873:
	.cfi_def_cfa_offset 16
.Ltmp1874:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1875:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp1868:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev
.Ltmp1869:
	jmp	.LBB307_1
.LBB307_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB307_2:
.Ltmp1870:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1876:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev, .Ltmp1876-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev
	.cfi_endproc
.Leh_func_end307:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table307:
.Lexception307:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset418 = .Ltmp1868-.Leh_func_begin307 # >> Call Site 1 <<
	.long	.Lset418
.Lset419 = .Ltmp1869-.Ltmp1868          #   Call between .Ltmp1868 and .Ltmp1869
	.long	.Lset419
.Lset420 = .Ltmp1870-.Leh_func_begin307 #     jumps to .Ltmp1870
	.long	.Lset420
	.byte	0                       #   On action: cleanup
.Lset421 = .Ltmp1869-.Leh_func_begin307 # >> Call Site 2 <<
	.long	.Lset421
.Lset422 = .Leh_func_end307-.Ltmp1869   #   Call between .Ltmp1869 and .Leh_func_end307
	.long	.Lset422
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1879:
	.cfi_def_cfa_offset 16
.Ltmp1880:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1881:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB308_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB308_3
.LBB308_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB308_3
.LBB308_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB308_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB308_6
.LBB308_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
.LBB308_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp1882:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE, .Ltmp1882-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1885:
	.cfi_def_cfa_offset 16
.Ltmp1886:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1887:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1888:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_, .Ltmp1888-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1891:
	.cfi_def_cfa_offset 16
.Ltmp1892:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1893:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1894:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_, .Ltmp1894-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin311:
	.cfi_lsda 3, .Lexception311
# BB#0:
	pushq	%rbp
.Ltmp1905:
	.cfi_def_cfa_offset 16
.Ltmp1906:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1907:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, %rcx
.Ltmp1895:
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp1896:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB311_1
.LBB311_1:
.Ltmp1897:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIiEES3_EvT_S5_RSaIT0_E
.Ltmp1898:
	jmp	.LBB311_2
.LBB311_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB311_3:
.Ltmp1899:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1900:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
.Ltmp1901:
	jmp	.LBB311_4
.LBB311_4:
	jmp	.LBB311_5
.LBB311_5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB311_6:
.Ltmp1902:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1908:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev, .Ltmp1908-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	.cfi_endproc
.Leh_func_end311:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table311:
.Lexception311:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset423 = .Ltmp1895-.Leh_func_begin311 # >> Call Site 1 <<
	.long	.Lset423
.Lset424 = .Ltmp1898-.Ltmp1895          #   Call between .Ltmp1895 and .Ltmp1898
	.long	.Lset424
.Lset425 = .Ltmp1899-.Leh_func_begin311 #     jumps to .Ltmp1899
	.long	.Lset425
	.byte	0                       #   On action: cleanup
.Lset426 = .Ltmp1898-.Leh_func_begin311 # >> Call Site 2 <<
	.long	.Lset426
.Lset427 = .Ltmp1900-.Ltmp1898          #   Call between .Ltmp1898 and .Ltmp1900
	.long	.Lset427
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset428 = .Ltmp1900-.Leh_func_begin311 # >> Call Site 3 <<
	.long	.Lset428
.Lset429 = .Ltmp1901-.Ltmp1900          #   Call between .Ltmp1900 and .Ltmp1901
	.long	.Lset429
.Lset430 = .Ltmp1902-.Leh_func_begin311 #     jumps to .Ltmp1902
	.long	.Lset430
	.byte	1                       #   On action: 1
.Lset431 = .Ltmp1901-.Leh_func_begin311 # >> Call Site 4 <<
	.long	.Lset431
.Lset432 = .Leh_func_end311-.Ltmp1901   #   Call between .Ltmp1901 and .Leh_func_end311
	.long	.Lset432
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin312:
	.cfi_lsda 3, .Lexception312
# BB#0:
	pushq	%rbp
.Ltmp1914:
	.cfi_def_cfa_offset 16
.Ltmp1915:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1916:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rdi, %rdx
.Ltmp1909:
	movq	%rax, %rsi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE13_M_deallocateEPS3_m
.Ltmp1910:
	jmp	.LBB312_1
.LBB312_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB312_2:
.Ltmp1911:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1917:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev, .Ltmp1917-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EED2Ev
	.cfi_endproc
.Leh_func_end312:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table312:
.Lexception312:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset433 = .Ltmp1909-.Leh_func_begin312 # >> Call Site 1 <<
	.long	.Lset433
.Lset434 = .Ltmp1910-.Ltmp1909          #   Call between .Ltmp1909 and .Ltmp1910
	.long	.Lset434
.Lset435 = .Ltmp1911-.Leh_func_begin312 #     jumps to .Ltmp1911
	.long	.Lset435
	.byte	0                       #   On action: cleanup
.Lset436 = .Ltmp1910-.Leh_func_begin312 # >> Call Site 2 <<
	.long	.Lset436
.Lset437 = .Leh_func_end312-.Ltmp1910   #   Call between .Ltmp1910 and .Leh_func_end312
	.long	.Lset437
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1920:
	.cfi_def_cfa_offset 16
.Ltmp1921:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1922:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1923:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev, .Ltmp1923-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1926:
	.cfi_def_cfa_offset 16
.Ltmp1927:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1928:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1929:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev, .Ltmp1929-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implD2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1932:
	.cfi_def_cfa_offset 16
.Ltmp1933:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1934:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1935:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev, .Ltmp1935-_ZNSaIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1936:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev, .Ltmp1936-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin317:
	.cfi_lsda 3, .Lexception317
# BB#0:
	pushq	%rbp
.Ltmp1947:
	.cfi_def_cfa_offset 16
.Ltmp1948:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1949:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE+16, (%rdi)
	movq	%rdi, %rax
.Ltmp1937:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv
.Ltmp1938:
	jmp	.LBB317_1
.LBB317_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	je	.LBB317_4
# BB#2:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp1939:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp1940:
	jmp	.LBB317_3
.LBB317_3:
	jmp	.LBB317_4
.LBB317_4:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB317_5:
.Ltmp1941:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp1942:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev
.Ltmp1943:
	jmp	.LBB317_6
.LBB317_6:
	jmp	.LBB317_7
.LBB317_7:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB317_8:
.Ltmp1944:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp1950:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev, .Ltmp1950-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED2Ev
	.cfi_endproc
.Leh_func_end317:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table317:
.Lexception317:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset438 = .Ltmp1937-.Leh_func_begin317 # >> Call Site 1 <<
	.long	.Lset438
.Lset439 = .Ltmp1940-.Ltmp1937          #   Call between .Ltmp1937 and .Ltmp1940
	.long	.Lset439
.Lset440 = .Ltmp1941-.Leh_func_begin317 #     jumps to .Ltmp1941
	.long	.Lset440
	.byte	0                       #   On action: cleanup
.Lset441 = .Ltmp1940-.Leh_func_begin317 # >> Call Site 2 <<
	.long	.Lset441
.Lset442 = .Ltmp1942-.Ltmp1940          #   Call between .Ltmp1940 and .Ltmp1942
	.long	.Lset442
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset443 = .Ltmp1942-.Leh_func_begin317 # >> Call Site 3 <<
	.long	.Lset443
.Lset444 = .Ltmp1943-.Ltmp1942          #   Call between .Ltmp1942 and .Ltmp1943
	.long	.Lset444
.Lset445 = .Ltmp1944-.Leh_func_begin317 #     jumps to .Ltmp1944
	.long	.Lset445
	.byte	1                       #   On action: 1
.Lset446 = .Ltmp1943-.Leh_func_begin317 # >> Call Site 4 <<
	.long	.Lset446
.Lset447 = .Leh_func_end317-.Ltmp1943   #   Call between .Ltmp1943 and .Leh_func_end317
	.long	.Lset447
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv,"axG",@progbits,_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv,comdat
	.weak	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv,@function
_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv: # @_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin318:
	.cfi_lsda 3, .Lexception318
# BB#0:
	pushq	%rbp
.Ltmp1959:
	.cfi_def_cfa_offset 16
.Ltmp1960:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1961:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB318_14
# BB#1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %ecx
	subl	$1, %ecx
	movl	%ecx, -12(%rbp)
.LBB318_2:                              # =>This Inner Loop Header: Depth=1
	cmpl	$0, -12(%rbp)
	jl	.LBB318_9
# BB#3:                                 #   in Loop: Header=BB318_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	je	.LBB318_6
# BB#4:                                 #   in Loop: Header=BB318_2 Depth=1
.Ltmp1954:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core15sc_trace_paramsD1Ev
.Ltmp1955:
	jmp	.LBB318_5
.LBB318_5:                              #   in Loop: Header=BB318_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB318_6:                              #   in Loop: Header=BB318_2 Depth=1
	jmp	.LBB318_7
.LBB318_7:                              #   in Loop: Header=BB318_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, -12(%rbp)
	jmp	.LBB318_2
.LBB318_8:
.Ltmp1956:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB318_15
.LBB318_9:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	je	.LBB318_12
# BB#10:
.Ltmp1951:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EED1Ev
.Ltmp1952:
	jmp	.LBB318_11
.LBB318_11:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
.LBB318_12:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	$0, 128(%rax)
	jmp	.LBB318_14
.LBB318_13:
.Ltmp1953:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	jmp	.LBB318_15
.LBB318_14:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB318_15:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1962:
	.size	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv, .Ltmp1962-_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv
	.cfi_endproc
.Leh_func_end318:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table318:
.Lexception318:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	41                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset448 = .Ltmp1954-.Leh_func_begin318 # >> Call Site 1 <<
	.long	.Lset448
.Lset449 = .Ltmp1955-.Ltmp1954          #   Call between .Ltmp1954 and .Ltmp1955
	.long	.Lset449
.Lset450 = .Ltmp1956-.Leh_func_begin318 #     jumps to .Ltmp1956
	.long	.Lset450
	.byte	0                       #   On action: cleanup
.Lset451 = .Ltmp1951-.Leh_func_begin318 # >> Call Site 2 <<
	.long	.Lset451
.Lset452 = .Ltmp1952-.Ltmp1951          #   Call between .Ltmp1951 and .Ltmp1952
	.long	.Lset452
.Lset453 = .Ltmp1953-.Leh_func_begin318 #     jumps to .Ltmp1953
	.long	.Lset453
	.byte	0                       #   On action: cleanup
.Lset454 = .Ltmp1952-.Leh_func_begin318 # >> Call Site 3 <<
	.long	.Lset454
.Lset455 = .Leh_func_end318-.Ltmp1952   #   Call between .Ltmp1952 and .Leh_func_end318
	.long	.Lset455
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1965:
	.cfi_def_cfa_offset 16
.Ltmp1966:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1967:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp1968:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev, .Ltmp1968-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv,"axG",@progbits,_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv,comdat
	.weak	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv,@function
_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv: # @_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str19, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp1969:
	.size	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv, .Ltmp1969-_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin321:
	.cfi_lsda 3, .Lexception321
# BB#0:
	pushq	%rbp
.Ltmp1975:
	.cfi_def_cfa_offset 16
.Ltmp1976:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1977:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp1970:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
.Ltmp1971:
	jmp	.LBB321_1
.LBB321_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB321_2:
.Ltmp1972:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp1978:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev, .Ltmp1978-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev
	.cfi_endproc
.Leh_func_end321:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table321:
.Lexception321:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset456 = .Ltmp1970-.Leh_func_begin321 # >> Call Site 1 <<
	.long	.Lset456
.Lset457 = .Ltmp1971-.Ltmp1970          #   Call between .Ltmp1970 and .Ltmp1971
	.long	.Lset457
.Lset458 = .Ltmp1972-.Leh_func_begin321 #     jumps to .Ltmp1972
	.long	.Lset458
	.byte	0                       #   On action: cleanup
.Lset459 = .Ltmp1971-.Leh_func_begin321 # >> Call Site 2 <<
	.long	.Lset459
.Lset460 = .Leh_func_end321-.Ltmp1971   #   Call between .Ltmp1971 and .Leh_func_end321
	.long	.Lset460
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB322_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB322_3
.LBB322_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB322_3
.LBB322_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp1979:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv, .Ltmp1979-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB323_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB323_3
.LBB323_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB323_3
.LBB323_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp1980:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv, .Ltmp1980-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1983:
	.cfi_def_cfa_offset 16
.Ltmp1984:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1985:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp1986:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE, .Ltmp1986-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1989:
	.cfi_def_cfa_offset 16
.Ltmp1990:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1991:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	je	.LBB325_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, %rcx
	movabsq	$-1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jmp	.LBB325_3
.LBB325_2:
	movabsq	$0, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jmp	.LBB325_3
.LBB325_3:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB325_5
# BB#4:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
	jmp	.LBB325_11
.LBB325_5:
	movq	-24(%rbp), %rax
	cmpq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	je	.LBB325_7
# BB#6:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, %rcx
	movabsq	$-1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-88(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB325_8
.LBB325_7:
	movabsq	$0, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB325_8
.LBB325_8:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB325_10
# BB#9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
	jmp	.LBB325_11
.LBB325_10:
	movl	$2, -4(%rbp)
.LBB325_11:
	movl	-4(%rbp), %eax
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp1992:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE, .Ltmp1992-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp1995:
	.cfi_def_cfa_offset 16
.Ltmp1996:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1997:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB326_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB326_3
.LBB326_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB326_3
.LBB326_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB326_5
# BB#4:
	jmp	.LBB326_6
.LBB326_5:
	leaq	.L.str14, %rdi
	leaq	.L.str13, %rsi
	movl	$541, %edx              # imm = 0x21D
	leaq	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE, %rcx
	callq	__assert_fail
.LBB326_6:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB326_7:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB326_12
# BB#8:                                 #   in Loop: Header=BB326_7 Depth=1
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	addq	$104, %rcx
	movslq	-32(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	movq	-72(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	jne	.LBB326_10
# BB#9:                                 #   in Loop: Header=BB326_7 Depth=1
	leaq	_ZN7sc_core22SC_ID_BIND_IF_TO_PORT_E, %rsi
	leaq	.L.str15, %rdx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB326_10:                             #   in Loop: Header=BB326_7 Depth=1
	jmp	.LBB326_11
.LBB326_11:                             #   in Loop: Header=BB326_7 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB326_7
.LBB326_12:
	leaq	-24(%rbp), %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_
	movabsq	$0, %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, 96(%rsi)
	addq	$80, %rsp
	popq	%rbp
	ret
.Ltmp1998:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE, .Ltmp1998-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2001:
	.cfi_def_cfa_offset 16
.Ltmp2002:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2003:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$104, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, %eax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2004:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv, .Ltmp2004-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2007:
	.cfi_def_cfa_offset 16
.Ltmp2008:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2009:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt9type_info4nameEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2010:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv, .Ltmp2010-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2013:
	.cfi_def_cfa_offset 16
.Ltmp2014:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2015:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 128(%rdi)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	je	.LBB329_9
# BB#1:
	movl	$0, -12(%rbp)
.LBB329_2:                              # =>This Inner Loop Header: Depth=1
	movl	-12(%rbp), %eax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	128(%rcx), %rdi
	movl	%eax, -44(%rbp)         # 4-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EE4sizeEv
	movl	%eax, %edx
	movl	-44(%rbp), %esi         # 4-byte Reload
	cmpl	%edx, %esi
	jge	.LBB329_8
# BB#3:                                 #   in Loop: Header=BB329_2 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	128(%rax), %rdi
	movslq	-12(%rbp), %rsi
	callq	_ZNSt6vectorIPN7sc_core15sc_trace_paramsESaIS2_EEixEm
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	(%rsi), %rdi
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-56(%rbp), %rax         # 8-byte Reload
	callq	*112(%rax)
	cmpq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	je	.LBB329_5
# BB#4:                                 #   in Loop: Header=BB329_2 Depth=1
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB329_6
.LBB329_5:                              #   in Loop: Header=BB329_2 Depth=1
	movabsq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jmp	.LBB329_6
.LBB329_6:                              #   in Loop: Header=BB329_2 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rdi
	movq	-32(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	*40(%rcx)
	movq	-24(%rbp), %rcx
	addq	$8, %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	movq	%rcx, %rdx
	callq	_ZN7sc_core8sc_traceEPNS_13sc_trace_fileERKN5sc_dt10sc_bv_baseERKSs
# BB#7:                                 #   in Loop: Header=BB329_2 Depth=1
	movl	-12(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -12(%rbp)
	jmp	.LBB329_2
.LBB329_8:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE13remove_tracesEv
.LBB329_9:
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp2016:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv, .Ltmp2016-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2019:
	.cfi_def_cfa_offset 16
.Ltmp2020:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2021:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB330_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB330_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB330_8
# BB#3:                                 #   in Loop: Header=BB330_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB330_5
# BB#4:                                 #   in Loop: Header=BB330_2 Depth=1
	jmp	.LBB330_6
.LBB330_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$588, %edx              # imm = 0x24C
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB330_6:                              #   in Loop: Header=BB330_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_thread_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB330_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB330_2
.LBB330_8:
	jmp	.LBB330_10
.LBB330_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.LBB330_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2022:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, .Ltmp2022-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2025:
	.cfi_def_cfa_offset 16
.Ltmp2026:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2027:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB331_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB331_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB331_8
# BB#3:                                 #   in Loop: Header=BB331_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB331_5
# BB#4:                                 #   in Loop: Header=BB331_2 Depth=1
	jmp	.LBB331_6
.LBB331_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$609, %edx              # imm = 0x261
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB331_6:                              #   in Loop: Header=BB331_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_method_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB331_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB331_2
.LBB331_8:
	jmp	.LBB331_10
.LBB331_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
.LBB331_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2028:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, .Ltmp2028-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2031:
	.cfi_def_cfa_offset 16
.Ltmp2032:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2033:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	(%rsi), %rdi
	movq	232(%rdi), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	-24(%rbp), %rax         # 8-byte Reload
	callq	*%rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2034:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE, .Ltmp2034-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2037:
	.cfi_def_cfa_offset 16
.Ltmp2038:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2039:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2040:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE, .Ltmp2040-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2043:
	.cfi_def_cfa_offset 16
.Ltmp2044:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2045:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2046:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE, .Ltmp2046-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2049:
	.cfi_def_cfa_offset 16
.Ltmp2050:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2051:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2052:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE, .Ltmp2052-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2055:
	.cfi_def_cfa_offset 16
.Ltmp2056:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2057:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2058:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE, .Ltmp2058-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	ret
.Ltmp2059:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv, .Ltmp2059-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp2060:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm, .Ltmp2060-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp2061:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm, .Ltmp2061-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2064:
	.cfi_def_cfa_offset 16
.Ltmp2065:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2066:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB340_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB340_3
.LBB340_2:
	leaq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv
	leaq	-24(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	(%rsi), %rsi
	movq	%rsi, (%rsp)
	movq	-40(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
.LBB340_3:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp2067:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_, .Ltmp2067-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE9push_backERKS6_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	%rdx, -24(%rsp)
	movq	-16(%rsp), %rdx
	cmpq	$0, %rdx
	movq	%rdx, -32(%rsp)         # 8-byte Spill
	je	.LBB341_2
# BB#1:
	movq	-32(%rsp), %rax         # 8-byte Reload
	movq	-24(%rsp), %rcx
	movq	(%rcx), %rcx
	movq	-32(%rsp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	%rax, -40(%rsp)         # 8-byte Spill
.LBB341_2:
	ret
.Ltmp2068:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_, .Ltmp2068-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin342:
	.cfi_lsda 3, .Lexception342
# BB#0:
	pushq	%rbp
.Ltmp2100:
	.cfi_def_cfa_offset 16
.Ltmp2101:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2102:
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	leaq	16(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	je	.LBB342_2
# BB#1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	8(%rcx), %rdx
	addq	$-8, %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, -24(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	movq	(%rax), %rdi
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-16, %rcx
	movq	8(%rax), %rdx
	addq	$-8, %rdx
	movq	%rcx, %rsi
	callq	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	movq	-24(%rbp), %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB342_22
.LBB342_2:
	movl	$1, %esi
	movl	$.L.str16, %edx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc
	movq	%rax, -32(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	callq	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm
	movq	%rax, -56(%rbp)
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rsi
	movq	-16(%rbp), %rdx
.Ltmp2069:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE9constructEPS7_RKS7_
.Ltmp2070:
	jmp	.LBB342_3
.LBB342_3:
	movq	$0, -64(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp2071:
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
.Ltmp2072:
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jmp	.LBB342_4
.LBB342_4:
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rsi
	movq	-56(%rbp), %rdx
.Ltmp2073:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -144(%rbp)        # 8-byte Spill
	movq	%rdx, -152(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp2074:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB342_5
.LBB342_5:
.Ltmp2075:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-144(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
.Ltmp2076:
	movq	%rax, -168(%rbp)        # 8-byte Spill
	jmp	.LBB342_6
.LBB342_6:
	movq	-168(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	addq	$8, %rax
	movq	%rax, -64(%rbp)
.Ltmp2077:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
.Ltmp2078:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB342_7
.LBB342_7:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-64(%rbp), %rdx
.Ltmp2079:
	movq	%rdi, -184(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp2080:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB342_8
.LBB342_8:
.Ltmp2081:
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
.Ltmp2082:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB342_9
.LBB342_9:
	movq	-216(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	jmp	.LBB342_21
.LBB342_10:
.Ltmp2083:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
# BB#11:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch
	cmpq	$0, -64(%rbp)
	movq	%rax, -224(%rbp)        # 8-byte Spill
	jne	.LBB342_15
# BB#12:
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
.Ltmp2084:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_
.Ltmp2085:
	jmp	.LBB342_13
.LBB342_13:
	jmp	.LBB342_18
.LBB342_14:
.Ltmp2094:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
.Ltmp2095:
	callq	__cxa_end_catch
.Ltmp2096:
	jmp	.LBB342_20
.LBB342_15:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp2086:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -232(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -240(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp2087:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB342_16
.LBB342_16:
.Ltmp2088:
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movq	-248(%rbp), %rdx        # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E
.Ltmp2089:
	jmp	.LBB342_17
.LBB342_17:
	jmp	.LBB342_18
.LBB342_18:
	movq	-56(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp2090:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m
.Ltmp2091:
	jmp	.LBB342_19
.LBB342_19:
.Ltmp2092:
	callq	__cxa_rethrow
.Ltmp2093:
	jmp	.LBB342_25
.LBB342_20:
	jmp	.LBB342_23
.LBB342_21:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -256(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -264(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	-264(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %rcx
	subq	%rcx, %rdi
	sarq	$3, %rdi
	movq	%rdi, -272(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-64(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-56(%rbp), %rax
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB342_22:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	ret
.LBB342_23:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume
.LBB342_24:
.Ltmp2097:
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.LBB342_25:
.Ltmp2103:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_, .Ltmp2103-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS6_S8_EERKS6_
	.cfi_endproc
.Leh_func_end342:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table342:
.Lexception342:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\343\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
.Lset461 = .Leh_func_begin342-.Leh_func_begin342 # >> Call Site 1 <<
	.long	.Lset461
.Lset462 = .Ltmp2069-.Leh_func_begin342 #   Call between .Leh_func_begin342 and .Ltmp2069
	.long	.Lset462
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset463 = .Ltmp2069-.Leh_func_begin342 # >> Call Site 2 <<
	.long	.Lset463
.Lset464 = .Ltmp2082-.Ltmp2069          #   Call between .Ltmp2069 and .Ltmp2082
	.long	.Lset464
.Lset465 = .Ltmp2083-.Leh_func_begin342 #     jumps to .Ltmp2083
	.long	.Lset465
	.byte	1                       #   On action: 1
.Lset466 = .Ltmp2082-.Leh_func_begin342 # >> Call Site 3 <<
	.long	.Lset466
.Lset467 = .Ltmp2084-.Ltmp2082          #   Call between .Ltmp2082 and .Ltmp2084
	.long	.Lset467
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset468 = .Ltmp2084-.Leh_func_begin342 # >> Call Site 4 <<
	.long	.Lset468
.Lset469 = .Ltmp2085-.Ltmp2084          #   Call between .Ltmp2084 and .Ltmp2085
	.long	.Lset469
.Lset470 = .Ltmp2094-.Leh_func_begin342 #     jumps to .Ltmp2094
	.long	.Lset470
	.byte	0                       #   On action: cleanup
.Lset471 = .Ltmp2095-.Leh_func_begin342 # >> Call Site 5 <<
	.long	.Lset471
.Lset472 = .Ltmp2096-.Ltmp2095          #   Call between .Ltmp2095 and .Ltmp2096
	.long	.Lset472
.Lset473 = .Ltmp2097-.Leh_func_begin342 #     jumps to .Ltmp2097
	.long	.Lset473
	.byte	1                       #   On action: 1
.Lset474 = .Ltmp2086-.Leh_func_begin342 # >> Call Site 6 <<
	.long	.Lset474
.Lset475 = .Ltmp2093-.Ltmp2086          #   Call between .Ltmp2086 and .Ltmp2093
	.long	.Lset475
.Lset476 = .Ltmp2094-.Leh_func_begin342 #     jumps to .Ltmp2094
	.long	.Lset476
	.byte	0                       #   On action: cleanup
.Lset477 = .Ltmp2093-.Leh_func_begin342 # >> Call Site 7 <<
	.long	.Lset477
.Lset478 = .Leh_func_end342-.Ltmp2093   #   Call between .Ltmp2093 and .Leh_func_end342
	.long	.Lset478
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2106:
	.cfi_def_cfa_offset 16
.Ltmp2107:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2108:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	addq	$8, %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2109:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv, .Ltmp2109-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE3endEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2112:
	.cfi_def_cfa_offset 16
.Ltmp2113:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2114:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2115:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_, .Ltmp2115-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	ret
.Ltmp2116:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_, .Ltmp2116-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC2ERKS8_
	.cfi_endproc

	.section	.text._ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,"axG",@progbits,_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,comdat
	.weak	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.align	16, 0x90
	.type	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,@function
_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_: # @_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2119:
	.cfi_def_cfa_offset 16
.Ltmp2120:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2121:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2122:
	.size	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_, .Ltmp2122-_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp2123:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv, .Ltmp2123-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	(%rdi), %rax
	ret
.Ltmp2124:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv, .Ltmp2124-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEdeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2127:
	.cfi_def_cfa_offset 16
.Ltmp2128:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2129:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movq	-56(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	cmpq	-16(%rbp), %rdx
	jae	.LBB349_2
# BB#1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc
.LBB349_2:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-64(%rbp), %rsi         # 8-byte Reload
	addq	(%rax), %rsi
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE4sizeEv
	movq	-72(%rbp), %rsi         # 8-byte Reload
	cmpq	%rax, %rsi
	jb	.LBB349_4
# BB#3:
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv
	movq	-80(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	jbe	.LBB349_5
.LBB349_4:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB349_6
.LBB349_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
.LBB349_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp2130:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc, .Ltmp2130-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_M_check_lenEmPKc
	.cfi_endproc

	.section	.text._ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_,"axG",@progbits,_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_,comdat
	.weak	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	.align	16, 0x90
	.type	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_,@function
_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_: # @_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2133:
	.cfi_def_cfa_offset 16
.Ltmp2134:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2135:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	subq	%rax, %rsi
	sarq	$3, %rsi
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2136:
	.size	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_, .Ltmp2136-_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSF_SI_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2139:
	.cfi_def_cfa_offset 16
.Ltmp2140:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2141:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESt6vectorIS7_SaIS7_EEEC1ERKS8_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2142:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv, .Ltmp2142-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE5beginEv
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2145:
	.cfi_def_cfa_offset 16
.Ltmp2146:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2147:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB352_2
# BB#1:
	movabsq	$0, %rdx
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB352_3
.LBB352_2:
	movabsq	$0, %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB352_3
.LBB352_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2148:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm, .Ltmp2148-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE11_M_allocateEm
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_,"axG",@progbits,_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_,comdat
	.weak	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
	.align	16, 0x90
	.type	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_,@function
_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_: # @_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2151:
	.cfi_def_cfa_offset 16
.Ltmp2152:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2153:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2154:
	.size	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_, .Ltmp2154-_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_SaIS6_EET0_T_SA_S9_RT1_
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp2155:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv, .Ltmp2155-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp2156:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_, .Ltmp2156-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE7destroyEPS7_
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2159:
	.cfi_def_cfa_offset 16
.Ltmp2160:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2161:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2162:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E, .Ltmp2162-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2165:
	.cfi_def_cfa_offset 16
.Ltmp2166:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2167:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB357_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m
.LBB357_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2168:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m, .Ltmp2168-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2171:
	.cfi_def_cfa_offset 16
.Ltmp2172:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2173:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2174:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m, .Ltmp2174-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE10deallocateEPS7_m
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2177:
	.cfi_def_cfa_offset 16
.Ltmp2178:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2179:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2180:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_, .Ltmp2180-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEvT_S8_
	.cfi_endproc

	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_
	.align	16, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp2181:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_, .Ltmp2181-_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEvT_SA_
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	.align	16, 0x90
	.type	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2184:
	.cfi_def_cfa_offset 16
.Ltmp2185:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2186:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2187:
	.size	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E, .Ltmp2187-_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_S6_ET0_T_S9_S8_RSaIT1_E
	.cfi_endproc

	.section	.text._ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,"axG",@progbits,_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,comdat
	.weak	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.align	16, 0x90
	.type	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,@function
_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_: # @_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2190:
	.cfi_def_cfa_offset 16
.Ltmp2191:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2192:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2193:
	.size	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_, .Ltmp2193-_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.cfi_endproc

	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_
	.align	16, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2196:
	.cfi_def_cfa_offset 16
.Ltmp2197:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2198:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2199:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_, .Ltmp2199-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES9_EET0_T_SB_SA_
	.cfi_endproc

	.section	.text._ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,"axG",@progbits,_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,comdat
	.weak	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.align	16, 0x90
	.type	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_,@function
_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_: # @_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2202:
	.cfi_def_cfa_offset 16
.Ltmp2203:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2204:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2205:
	.size	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_, .Ltmp2205-_ZSt4copyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET0_T_S9_S8_
	.cfi_endproc

	.section	.text._ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,@function
_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_: # @_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2208:
	.cfi_def_cfa_offset 16
.Ltmp2209:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2210:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp2211:
	.size	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_, .Ltmp2211-_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_,"axG",@progbits,_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_,comdat
	.weak	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	.align	16, 0x90
	.type	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_,@function
_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_: # @_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2214:
	.cfi_def_cfa_offset 16
.Ltmp2215:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2216:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2217:
	.size	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_, .Ltmp2217-_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Miter_baseIT_E13iterator_typeES9_
	.cfi_endproc

	.section	.text._ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_,"axG",@progbits,_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_,comdat
	.weak	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_
	.align	16, 0x90
	.type	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_,@function
_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_: # @_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp2218:
	.size	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_, .Ltmp2218-_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_
	.cfi_endproc

	.section	.text._ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,@function
_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_: # @_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2221:
	.cfi_def_cfa_offset 16
.Ltmp2222:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2223:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2224:
	.size	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_, .Ltmp2224-_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_,"axG",@progbits,_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_,comdat
	.weak	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	.align	16, 0x90
	.type	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_,@function
_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_: # @_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2227:
	.cfi_def_cfa_offset 16
.Ltmp2228:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2229:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELb0EE7_S_baseES7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2230:
	.size	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_, .Ltmp2230-_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	.cfi_endproc

	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	.align	16, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2233:
	.cfi_def_cfa_offset 16
.Ltmp2234:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2235:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB370_2
# BB#1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB370_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2236:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_, .Ltmp2236-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2239:
	.cfi_def_cfa_offset 16
.Ltmp2240:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2241:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB371_2
# BB#1:
	callq	_ZSt17__throw_bad_allocv
.LBB371_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2242:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv, .Ltmp2242-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8allocateEmPKv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv
	.cfi_startproc
# BB#0:
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2243:
	.size	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv, .Ltmp2243-_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2246:
	.cfi_def_cfa_offset 16
.Ltmp2247:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2248:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2249:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv, .Ltmp2249-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp2250:
	.size	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv, .Ltmp2250-_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,@function
_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_: # @_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2253:
	.cfi_def_cfa_offset 16
.Ltmp2254:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2255:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEENSt11_Niter_baseIT_E13iterator_typeES9_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp2256:
	.size	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_, .Ltmp2256-_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,"axG",@progbits,_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,comdat
	.weak	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.align	16, 0x90
	.type	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_,@function
_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_: # @_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2259:
	.cfi_def_cfa_offset 16
.Ltmp2260:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2261:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2262:
	.size	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_, .Ltmp2262-_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES7_ET1_T0_S9_S8_
	.cfi_endproc

	.section	.text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_,"axG",@progbits,_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_,comdat
	.weak	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	.align	16, 0x90
	.type	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_,@function
_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_: # @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2265:
	.cfi_def_cfa_offset 16
.Ltmp2266:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2267:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB377_2
# BB#1:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB377_2:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2268:
	.size	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_, .Ltmp2268-_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEEPT_PKSA_SD_SB_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2271:
	.cfi_def_cfa_offset 16
.Ltmp2272:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2273:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB378_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB378_3
.LBB378_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB378_3
.LBB378_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB378_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB378_6
.LBB378_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	movl	$0, -4(%rbp)
.LBB378_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2274:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE, .Ltmp2274-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin379:
	.cfi_lsda 3, .Lexception379
# BB#0:
	pushq	%rbp
.Ltmp2283:
	.cfi_def_cfa_offset 16
.Ltmp2284:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2285:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE+16, (%rdi)
	movq	%rdi, %rax
	addq	$104, %rax
.Ltmp2275:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev
.Ltmp2276:
	jmp	.LBB379_1
.LBB379_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core12sc_port_baseD2Ev
	addq	$48, %rsp
	popq	%rbp
	ret
.LBB379_2:
.Ltmp2277:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp2278:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp2279:
	jmp	.LBB379_3
.LBB379_3:
	jmp	.LBB379_4
.LBB379_4:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB379_5:
.Ltmp2280:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2286:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev, .Ltmp2286-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.cfi_endproc
.Leh_func_end379:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table379:
.Lexception379:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset479 = .Ltmp2275-.Leh_func_begin379 # >> Call Site 1 <<
	.long	.Lset479
.Lset480 = .Ltmp2276-.Ltmp2275          #   Call between .Ltmp2275 and .Ltmp2276
	.long	.Lset480
.Lset481 = .Ltmp2277-.Leh_func_begin379 #     jumps to .Ltmp2277
	.long	.Lset481
	.byte	0                       #   On action: cleanup
.Lset482 = .Ltmp2276-.Leh_func_begin379 # >> Call Site 2 <<
	.long	.Lset482
.Lset483 = .Ltmp2278-.Ltmp2276          #   Call between .Ltmp2276 and .Ltmp2278
	.long	.Lset483
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset484 = .Ltmp2278-.Leh_func_begin379 # >> Call Site 3 <<
	.long	.Lset484
.Lset485 = .Ltmp2279-.Ltmp2278          #   Call between .Ltmp2278 and .Ltmp2279
	.long	.Lset485
.Lset486 = .Ltmp2280-.Leh_func_begin379 #     jumps to .Ltmp2280
	.long	.Lset486
	.byte	1                       #   On action: 1
.Lset487 = .Ltmp2279-.Leh_func_begin379 # >> Call Site 4 <<
	.long	.Lset487
.Lset488 = .Leh_func_end379-.Ltmp2279   #   Call between .Ltmp2279 and .Leh_func_end379
	.long	.Lset488
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2289:
	.cfi_def_cfa_offset 16
.Ltmp2290:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2291:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2292:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev, .Ltmp2292-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2295:
	.cfi_def_cfa_offset 16
.Ltmp2296:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2297:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2298:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev, .Ltmp2298-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin382:
	.cfi_lsda 3, .Lexception382
# BB#0:
	pushq	%rbp
.Ltmp2304:
	.cfi_def_cfa_offset 16
.Ltmp2305:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2306:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2299:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev
.Ltmp2300:
	jmp	.LBB382_1
.LBB382_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB382_2:
.Ltmp2301:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2307:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev, .Ltmp2307-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev
	.cfi_endproc
.Leh_func_end382:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table382:
.Lexception382:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset489 = .Ltmp2299-.Leh_func_begin382 # >> Call Site 1 <<
	.long	.Lset489
.Lset490 = .Ltmp2300-.Ltmp2299          #   Call between .Ltmp2299 and .Ltmp2300
	.long	.Lset490
.Lset491 = .Ltmp2301-.Leh_func_begin382 #     jumps to .Ltmp2301
	.long	.Lset491
	.byte	0                       #   On action: cleanup
.Lset492 = .Ltmp2300-.Leh_func_begin382 # >> Call Site 2 <<
	.long	.Lset492
.Lset493 = .Leh_func_end382-.Ltmp2300   #   Call between .Ltmp2300 and .Leh_func_end382
	.long	.Lset493
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2310:
	.cfi_def_cfa_offset 16
.Ltmp2311:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2312:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB383_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB383_3
.LBB383_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB383_3
.LBB383_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB383_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB383_6
.LBB383_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
.LBB383_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2313:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE, .Ltmp2313-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2316:
	.cfi_def_cfa_offset 16
.Ltmp2317:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2318:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2319:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_, .Ltmp2319-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2322:
	.cfi_def_cfa_offset 16
.Ltmp2323:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2324:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2325:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_, .Ltmp2325-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin386:
	.cfi_lsda 3, .Lexception386
# BB#0:
	pushq	%rbp
.Ltmp2336:
	.cfi_def_cfa_offset 16
.Ltmp2337:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2338:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, %rcx
.Ltmp2326:
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE19_M_get_Tp_allocatorEv
.Ltmp2327:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB386_1
.LBB386_1:
.Ltmp2328:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEES6_EvT_S8_RSaIT0_E
.Ltmp2329:
	jmp	.LBB386_2
.LBB386_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB386_3:
.Ltmp2330:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp2331:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
.Ltmp2332:
	jmp	.LBB386_4
.LBB386_4:
	jmp	.LBB386_5
.LBB386_5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB386_6:
.Ltmp2333:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2339:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev, .Ltmp2339-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	.cfi_endproc
.Leh_func_end386:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table386:
.Lexception386:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset494 = .Ltmp2326-.Leh_func_begin386 # >> Call Site 1 <<
	.long	.Lset494
.Lset495 = .Ltmp2329-.Ltmp2326          #   Call between .Ltmp2326 and .Ltmp2329
	.long	.Lset495
.Lset496 = .Ltmp2330-.Leh_func_begin386 #     jumps to .Ltmp2330
	.long	.Lset496
	.byte	0                       #   On action: cleanup
.Lset497 = .Ltmp2329-.Leh_func_begin386 # >> Call Site 2 <<
	.long	.Lset497
.Lset498 = .Ltmp2331-.Ltmp2329          #   Call between .Ltmp2329 and .Ltmp2331
	.long	.Lset498
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset499 = .Ltmp2331-.Leh_func_begin386 # >> Call Site 3 <<
	.long	.Lset499
.Lset500 = .Ltmp2332-.Ltmp2331          #   Call between .Ltmp2331 and .Ltmp2332
	.long	.Lset500
.Lset501 = .Ltmp2333-.Leh_func_begin386 #     jumps to .Ltmp2333
	.long	.Lset501
	.byte	1                       #   On action: 1
.Lset502 = .Ltmp2332-.Leh_func_begin386 # >> Call Site 4 <<
	.long	.Lset502
.Lset503 = .Leh_func_end386-.Ltmp2332   #   Call between .Ltmp2332 and .Leh_func_end386
	.long	.Lset503
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin387:
	.cfi_lsda 3, .Lexception387
# BB#0:
	pushq	%rbp
.Ltmp2345:
	.cfi_def_cfa_offset 16
.Ltmp2346:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2347:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rdi, %rdx
.Ltmp2340:
	movq	%rax, %rsi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE13_M_deallocateEPS6_m
.Ltmp2341:
	jmp	.LBB387_1
.LBB387_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB387_2:
.Ltmp2342:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2348:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev, .Ltmp2348-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EED2Ev
	.cfi_endproc
.Leh_func_end387:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table387:
.Lexception387:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset504 = .Ltmp2340-.Leh_func_begin387 # >> Call Site 1 <<
	.long	.Lset504
.Lset505 = .Ltmp2341-.Ltmp2340          #   Call between .Ltmp2340 and .Ltmp2341
	.long	.Lset505
.Lset506 = .Ltmp2342-.Leh_func_begin387 #     jumps to .Ltmp2342
	.long	.Lset506
	.byte	0                       #   On action: cleanup
.Lset507 = .Ltmp2341-.Leh_func_begin387 # >> Call Site 2 <<
	.long	.Lset507
.Lset508 = .Leh_func_end387-.Ltmp2341   #   Call between .Ltmp2341 and .Leh_func_end387
	.long	.Lset508
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2351:
	.cfi_def_cfa_offset 16
.Ltmp2352:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2353:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2354:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev, .Ltmp2354-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2357:
	.cfi_def_cfa_offset 16
.Ltmp2358:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2359:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2360:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev, .Ltmp2360-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implD2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2363:
	.cfi_def_cfa_offset 16
.Ltmp2364:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2365:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2366:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev, .Ltmp2366-_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2367:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev, .Ltmp2367-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEC2Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEC2Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEC2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEC2Ev,@function
_ZN5sc_dt7sc_uintILi32EEC2Ev:           # @_ZN5sc_dt7sc_uintILi32EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2370:
	.cfi_def_cfa_offset 16
.Ltmp2371:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2372:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	$32, %esi
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_baseC2Ei
	leaq	_ZTVN5sc_dt7sc_uintILi32EEE, %rax
	addq	$16, %rax
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, (%rdi)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2373:
	.size	_ZN5sc_dt7sc_uintILi32EEC2Ev, .Ltmp2373-_ZN5sc_dt7sc_uintILi32EEC2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core6sc_outItEC2EPKc,"axG",@progbits,_ZN7sc_core6sc_outItEC2EPKc,comdat
	.weak	_ZN7sc_core6sc_outItEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core6sc_outItEC2EPKc,@function
_ZN7sc_core6sc_outItEC2EPKc:            # @_ZN7sc_core6sc_outItEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2376:
	.cfi_def_cfa_offset 16
.Ltmp2377:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2378:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core8sc_inoutItEC2EPKc
	leaq	_ZTVN7sc_core6sc_outItEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2379:
	.size	_ZN7sc_core6sc_outItEC2EPKc, .Ltmp2379-_ZN7sc_core6sc_outItEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutItEC2EPKc,"axG",@progbits,_ZN7sc_core8sc_inoutItEC2EPKc,comdat
	.weak	_ZN7sc_core8sc_inoutItEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutItEC2EPKc,@function
_ZN7sc_core8sc_inoutItEC2EPKc:          # @_ZN7sc_core8sc_inoutItEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2382:
	.cfi_def_cfa_offset 16
.Ltmp2383:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2384:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc
	leaq	_ZTVN7sc_core8sc_inoutItEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	$0, 128(%rsi)
	movq	$0, 136(%rsi)
	movq	$0, 144(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2385:
	.size	_ZN7sc_core8sc_inoutItEC2EPKc, .Ltmp2385-_ZN7sc_core8sc_inoutItEC2EPKc
	.cfi_endproc

	.section	.text._ZNK7sc_core6sc_outItE4kindEv,"axG",@progbits,_ZNK7sc_core6sc_outItE4kindEv,comdat
	.weak	_ZNK7sc_core6sc_outItE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core6sc_outItE4kindEv,@function
_ZNK7sc_core6sc_outItE4kindEv:          # @_ZNK7sc_core6sc_outItE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str20, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2386:
	.size	_ZNK7sc_core6sc_outItE4kindEv, .Ltmp2386-_ZNK7sc_core6sc_outItE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core6sc_outItED0Ev,"axG",@progbits,_ZN7sc_core6sc_outItED0Ev,comdat
	.weak	_ZN7sc_core6sc_outItED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core6sc_outItED0Ev,@function
_ZN7sc_core6sc_outItED0Ev:              # @_ZN7sc_core6sc_outItED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin396:
	.cfi_lsda 3, .Lexception396
# BB#0:
	pushq	%rbp
.Ltmp2392:
	.cfi_def_cfa_offset 16
.Ltmp2393:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2394:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2387:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core6sc_outItED1Ev
.Ltmp2388:
	jmp	.LBB396_1
.LBB396_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB396_2:
.Ltmp2389:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2395:
	.size	_ZN7sc_core6sc_outItED0Ev, .Ltmp2395-_ZN7sc_core6sc_outItED0Ev
	.cfi_endproc
.Leh_func_end396:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table396:
.Lexception396:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset509 = .Ltmp2387-.Leh_func_begin396 # >> Call Site 1 <<
	.long	.Lset509
.Lset510 = .Ltmp2388-.Ltmp2387          #   Call between .Ltmp2387 and .Ltmp2388
	.long	.Lset510
.Lset511 = .Ltmp2389-.Leh_func_begin396 #     jumps to .Ltmp2389
	.long	.Lset511
	.byte	0                       #   On action: cleanup
.Lset512 = .Ltmp2388-.Leh_func_begin396 # >> Call Site 2 <<
	.long	.Lset512
.Lset513 = .Leh_func_end396-.Ltmp2388   #   Call between .Ltmp2388 and .Leh_func_end396
	.long	.Lset513
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc,"axG",@progbits,_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc,comdat
	.weak	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc,@function
_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc: # @_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2398:
	.cfi_def_cfa_offset 16
.Ltmp2399:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2400:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$1, %eax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rcx
	movl	$1, %edx
	xorl	%r8d, %r8d
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movl	%r8d, %ecx
	movl	%eax, -28(%rbp)         # 4-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE
	leaq	_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE, %rsi
	addq	$16, %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, (%rdi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2401:
	.size	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc, .Ltmp2401-_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin398:
	.cfi_lsda 3, .Lexception398
# BB#0:
	pushq	%rbp
.Ltmp2410:
	.cfi_def_cfa_offset 16
.Ltmp2411:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2412:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movb	%cl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	andb	$3, %al
	movb	%al, -21(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movl	-20(%rbp), %edx
	movzbl	-21(%rbp), %ecx
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	movq	%r8, %rsi
	callq	_ZN7sc_core12sc_port_baseC2EPKciNS_14sc_port_policyE
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE+16, (%rsi)
	movq	$0, 96(%rsi)
	addq	$104, %rsi
.Ltmp2402:
	movq	%rsi, %rdi
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev
.Ltmp2403:
	jmp	.LBB398_1
.LBB398_1:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB398_2:
.Ltmp2404:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
.Ltmp2405:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp2406:
	jmp	.LBB398_3
.LBB398_3:
	jmp	.LBB398_4
.LBB398_4:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.LBB398_5:
.Ltmp2407:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2413:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE, .Ltmp2413-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEC2EPKciNS_14sc_port_policyE
	.cfi_endproc
.Leh_func_end398:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table398:
.Lexception398:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset514 = .Leh_func_begin398-.Leh_func_begin398 # >> Call Site 1 <<
	.long	.Lset514
.Lset515 = .Ltmp2402-.Leh_func_begin398 #   Call between .Leh_func_begin398 and .Ltmp2402
	.long	.Lset515
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset516 = .Ltmp2402-.Leh_func_begin398 # >> Call Site 2 <<
	.long	.Lset516
.Lset517 = .Ltmp2403-.Ltmp2402          #   Call between .Ltmp2402 and .Ltmp2403
	.long	.Lset517
.Lset518 = .Ltmp2404-.Leh_func_begin398 #     jumps to .Ltmp2404
	.long	.Lset518
	.byte	0                       #   On action: cleanup
.Lset519 = .Ltmp2405-.Leh_func_begin398 # >> Call Site 3 <<
	.long	.Lset519
.Lset520 = .Ltmp2406-.Ltmp2405          #   Call between .Ltmp2405 and .Ltmp2406
	.long	.Lset520
.Lset521 = .Ltmp2407-.Leh_func_begin398 #     jumps to .Ltmp2407
	.long	.Lset521
	.byte	1                       #   On action: 1
.Lset522 = .Ltmp2406-.Leh_func_begin398 # >> Call Site 4 <<
	.long	.Lset522
.Lset523 = .Leh_func_end398-.Ltmp2406   #   Call between .Ltmp2406 and .Leh_func_end398
	.long	.Lset523
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv,"axG",@progbits,_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv,comdat
	.weak	_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv,@function
_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv: # @_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str21, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2414:
	.size	_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv, .Ltmp2414-_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev,@function
_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev: # @_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2417:
	.cfi_def_cfa_offset 16
.Ltmp2418:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2419:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2420:
	.size	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev, .Ltmp2420-_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev,@function
_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev: # @_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin401:
	.cfi_lsda 3, .Lexception401
# BB#0:
	pushq	%rbp
.Ltmp2426:
	.cfi_def_cfa_offset 16
.Ltmp2427:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2428:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2421:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev
.Ltmp2422:
	jmp	.LBB401_1
.LBB401_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB401_2:
.Ltmp2423:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2429:
	.size	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev, .Ltmp2429-_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_endproc
.Leh_func_end401:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table401:
.Lexception401:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset524 = .Ltmp2421-.Leh_func_begin401 # >> Call Site 1 <<
	.long	.Lset524
.Lset525 = .Ltmp2422-.Ltmp2421          #   Call between .Ltmp2421 and .Ltmp2422
	.long	.Lset525
.Lset526 = .Ltmp2423-.Leh_func_begin401 #     jumps to .Ltmp2423
	.long	.Lset526
	.byte	0                       #   On action: cleanup
.Lset527 = .Ltmp2422-.Leh_func_begin401 # >> Call Site 2 <<
	.long	.Lset527
.Lset528 = .Leh_func_end401-.Ltmp2422   #   Call between .Ltmp2422 and .Leh_func_end401
	.long	.Lset528
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2432:
	.cfi_def_cfa_offset 16
.Ltmp2433:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2434:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2435:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev, .Ltmp2435-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev,@function
_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev: # @_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2438:
	.cfi_def_cfa_offset 16
.Ltmp2439:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2440:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2441:
	.size	_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev, .Ltmp2441-_ZNSt6vectorIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2444:
	.cfi_def_cfa_offset 16
.Ltmp2445:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2446:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2447:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev, .Ltmp2447-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2450:
	.cfi_def_cfa_offset 16
.Ltmp2451:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2452:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2453:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev, .Ltmp2453-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2456:
	.cfi_def_cfa_offset 16
.Ltmp2457:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2458:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2459:
	.size	_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev, .Ltmp2459-_ZNSt12_Vector_baseIPN7sc_core18sc_signal_inout_ifItEESaIS3_EE12_Vector_implC2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev,"axG",@progbits,_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev,comdat
	.weak	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev,@function
_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev: # @_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2462:
	.cfi_def_cfa_offset 16
.Ltmp2463:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2464:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2465:
	.size	_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev, .Ltmp2465-_ZNSaIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2466:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev, .Ltmp2466-_ZN9__gnu_cxx13new_allocatorIPN7sc_core18sc_signal_inout_ifItEEEC2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2469:
	.cfi_def_cfa_offset 16
.Ltmp2470:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2471:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	leaq	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	$0, 128(%rsi)
	movq	$0, 136(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2472:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc, .Ltmp2472-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2475:
	.cfi_def_cfa_offset 16
.Ltmp2476:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2477:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$1, %eax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rcx
	movl	$1, %edx
	xorl	%r8d, %r8d
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movl	%r8d, %ecx
	movl	%eax, -28(%rbp)         # 4-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE
	leaq	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, %rsi
	addq	$16, %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, (%rdi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2478:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc, .Ltmp2478-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin411:
	.cfi_lsda 3, .Lexception411
# BB#0:
	pushq	%rbp
.Ltmp2487:
	.cfi_def_cfa_offset 16
.Ltmp2488:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2489:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movb	%cl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	andb	$3, %al
	movb	%al, -21(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movl	-20(%rbp), %edx
	movzbl	-21(%rbp), %ecx
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	movq	%r8, %rsi
	callq	_ZN7sc_core12sc_port_baseC2EPKciNS_14sc_port_policyE
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE+16, (%rsi)
	movq	$0, 96(%rsi)
	addq	$104, %rsi
.Ltmp2479:
	movq	%rsi, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev
.Ltmp2480:
	jmp	.LBB411_1
.LBB411_1:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB411_2:
.Ltmp2481:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
.Ltmp2482:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp2483:
	jmp	.LBB411_3
.LBB411_3:
	jmp	.LBB411_4
.LBB411_4:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.LBB411_5:
.Ltmp2484:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2490:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE, .Ltmp2490-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2EPKciNS_14sc_port_policyE
	.cfi_endproc
.Leh_func_end411:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table411:
.Lexception411:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset529 = .Leh_func_begin411-.Leh_func_begin411 # >> Call Site 1 <<
	.long	.Lset529
.Lset530 = .Ltmp2479-.Leh_func_begin411 #   Call between .Leh_func_begin411 and .Ltmp2479
	.long	.Lset530
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset531 = .Ltmp2479-.Leh_func_begin411 # >> Call Site 2 <<
	.long	.Lset531
.Lset532 = .Ltmp2480-.Ltmp2479          #   Call between .Ltmp2479 and .Ltmp2480
	.long	.Lset532
.Lset533 = .Ltmp2481-.Leh_func_begin411 #     jumps to .Ltmp2481
	.long	.Lset533
	.byte	0                       #   On action: cleanup
.Lset534 = .Ltmp2482-.Leh_func_begin411 # >> Call Site 3 <<
	.long	.Lset534
.Lset535 = .Ltmp2483-.Ltmp2482          #   Call between .Ltmp2482 and .Ltmp2483
	.long	.Lset535
.Lset536 = .Ltmp2484-.Leh_func_begin411 #     jumps to .Ltmp2484
	.long	.Lset536
	.byte	1                       #   On action: 1
.Lset537 = .Ltmp2483-.Leh_func_begin411 # >> Call Site 4 <<
	.long	.Lset537
.Lset538 = .Leh_func_end411-.Ltmp2483   #   Call between .Ltmp2483 and .Leh_func_end411
	.long	.Lset538
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv,"axG",@progbits,_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv,comdat
	.weak	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv,@function
_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv: # @_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str21, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2491:
	.size	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv, .Ltmp2491-_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2494:
	.cfi_def_cfa_offset 16
.Ltmp2495:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2496:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2497:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev, .Ltmp2497-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin414:
	.cfi_lsda 3, .Lexception414
# BB#0:
	pushq	%rbp
.Ltmp2503:
	.cfi_def_cfa_offset 16
.Ltmp2504:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2505:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2498:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev
.Ltmp2499:
	jmp	.LBB414_1
.LBB414_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB414_2:
.Ltmp2500:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2506:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev, .Ltmp2506-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_endproc
.Leh_func_end414:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table414:
.Lexception414:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset539 = .Ltmp2498-.Leh_func_begin414 # >> Call Site 1 <<
	.long	.Lset539
.Lset540 = .Ltmp2499-.Ltmp2498          #   Call between .Ltmp2498 and .Ltmp2499
	.long	.Lset540
.Lset541 = .Ltmp2500-.Leh_func_begin414 #     jumps to .Ltmp2500
	.long	.Lset541
	.byte	0                       #   On action: cleanup
.Lset542 = .Ltmp2499-.Leh_func_begin414 # >> Call Site 2 <<
	.long	.Lset542
.Lset543 = .Leh_func_end414-.Ltmp2499   #   Call between .Ltmp2499 and .Leh_func_end414
	.long	.Lset543
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2509:
	.cfi_def_cfa_offset 16
.Ltmp2510:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2511:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2512:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev, .Ltmp2512-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2515:
	.cfi_def_cfa_offset 16
.Ltmp2516:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2517:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2518:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev, .Ltmp2518-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2521:
	.cfi_def_cfa_offset 16
.Ltmp2522:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2523:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2524:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev, .Ltmp2524-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2527:
	.cfi_def_cfa_offset 16
.Ltmp2528:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2529:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2530:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev, .Ltmp2530-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2533:
	.cfi_def_cfa_offset 16
.Ltmp2534:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2535:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2536:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev, .Ltmp2536-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEESaIS6_EE12_Vector_implC2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2539:
	.cfi_def_cfa_offset 16
.Ltmp2540:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2541:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2542:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev, .Ltmp2542-_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2543:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev, .Ltmp2543-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEC2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIiEC2EPKc,"axG",@progbits,_ZN7sc_core5sc_inIiEC2EPKc,comdat
	.weak	_ZN7sc_core5sc_inIiEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIiEC2EPKc,@function
_ZN7sc_core5sc_inIiEC2EPKc:             # @_ZN7sc_core5sc_inIiEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2546:
	.cfi_def_cfa_offset 16
.Ltmp2547:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2548:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc
	leaq	_ZTVN7sc_core5sc_inIiEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	$0, 128(%rsi)
	movq	$0, 136(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2549:
	.size	_ZN7sc_core5sc_inIiEC2EPKc, .Ltmp2549-_ZN7sc_core5sc_inIiEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2552:
	.cfi_def_cfa_offset 16
.Ltmp2553:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2554:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$1, %eax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rcx
	movl	$1, %edx
	xorl	%r8d, %r8d
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movl	%r8d, %ecx
	movl	%eax, -28(%rbp)         # 4-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE
	leaq	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE, %rsi
	addq	$16, %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, (%rdi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2555:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc, .Ltmp2555-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin424:
	.cfi_lsda 3, .Lexception424
# BB#0:
	pushq	%rbp
.Ltmp2564:
	.cfi_def_cfa_offset 16
.Ltmp2565:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2566:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movb	%cl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	andb	$3, %al
	movb	%al, -21(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movl	-20(%rbp), %edx
	movzbl	-21(%rbp), %ecx
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	movq	%r8, %rsi
	callq	_ZN7sc_core12sc_port_baseC2EPKciNS_14sc_port_policyE
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE+16, (%rsi)
	movq	$0, 96(%rsi)
	addq	$104, %rsi
.Ltmp2556:
	movq	%rsi, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev
.Ltmp2557:
	jmp	.LBB424_1
.LBB424_1:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB424_2:
.Ltmp2558:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
.Ltmp2559:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp2560:
	jmp	.LBB424_3
.LBB424_3:
	jmp	.LBB424_4
.LBB424_4:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.LBB424_5:
.Ltmp2561:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2567:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE, .Ltmp2567-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEC2EPKciNS_14sc_port_policyE
	.cfi_endproc
.Leh_func_end424:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table424:
.Lexception424:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset544 = .Leh_func_begin424-.Leh_func_begin424 # >> Call Site 1 <<
	.long	.Lset544
.Lset545 = .Ltmp2556-.Leh_func_begin424 #   Call between .Leh_func_begin424 and .Ltmp2556
	.long	.Lset545
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset546 = .Ltmp2556-.Leh_func_begin424 # >> Call Site 2 <<
	.long	.Lset546
.Lset547 = .Ltmp2557-.Ltmp2556          #   Call between .Ltmp2556 and .Ltmp2557
	.long	.Lset547
.Lset548 = .Ltmp2558-.Leh_func_begin424 #     jumps to .Ltmp2558
	.long	.Lset548
	.byte	0                       #   On action: cleanup
.Lset549 = .Ltmp2559-.Leh_func_begin424 # >> Call Site 3 <<
	.long	.Lset549
.Lset550 = .Ltmp2560-.Ltmp2559          #   Call between .Ltmp2559 and .Ltmp2560
	.long	.Lset550
.Lset551 = .Ltmp2561-.Leh_func_begin424 #     jumps to .Ltmp2561
	.long	.Lset551
	.byte	1                       #   On action: 1
.Lset552 = .Ltmp2560-.Leh_func_begin424 # >> Call Site 4 <<
	.long	.Lset552
.Lset553 = .Leh_func_end424-.Ltmp2560   #   Call between .Ltmp2560 and .Leh_func_end424
	.long	.Lset553
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv,"axG",@progbits,_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv,comdat
	.weak	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv,@function
_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv: # @_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str21, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2568:
	.size	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv, .Ltmp2568-_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2571:
	.cfi_def_cfa_offset 16
.Ltmp2572:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2573:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2574:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev, .Ltmp2574-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin427:
	.cfi_lsda 3, .Lexception427
# BB#0:
	pushq	%rbp
.Ltmp2580:
	.cfi_def_cfa_offset 16
.Ltmp2581:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2582:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2575:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev
.Ltmp2576:
	jmp	.LBB427_1
.LBB427_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB427_2:
.Ltmp2577:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2583:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev, .Ltmp2583-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_endproc
.Leh_func_end427:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table427:
.Lexception427:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset554 = .Ltmp2575-.Leh_func_begin427 # >> Call Site 1 <<
	.long	.Lset554
.Lset555 = .Ltmp2576-.Ltmp2575          #   Call between .Ltmp2575 and .Ltmp2576
	.long	.Lset555
.Lset556 = .Ltmp2577-.Leh_func_begin427 #     jumps to .Ltmp2577
	.long	.Lset556
	.byte	0                       #   On action: cleanup
.Lset557 = .Ltmp2576-.Leh_func_begin427 # >> Call Site 2 <<
	.long	.Lset557
.Lset558 = .Leh_func_end427-.Ltmp2576   #   Call between .Ltmp2576 and .Leh_func_end427
	.long	.Lset558
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2586:
	.cfi_def_cfa_offset 16
.Ltmp2587:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2588:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2589:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev, .Ltmp2589-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2592:
	.cfi_def_cfa_offset 16
.Ltmp2593:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2594:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2595:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev, .Ltmp2595-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2598:
	.cfi_def_cfa_offset 16
.Ltmp2599:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2600:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2601:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev, .Ltmp2601-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2604:
	.cfi_def_cfa_offset 16
.Ltmp2605:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2606:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2607:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev, .Ltmp2607-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2610:
	.cfi_def_cfa_offset 16
.Ltmp2611:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2612:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2613:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev, .Ltmp2613-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIiEESaIS3_EE12_Vector_implC2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2616:
	.cfi_def_cfa_offset 16
.Ltmp2617:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2618:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2619:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev, .Ltmp2619-_ZNSaIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2620:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev, .Ltmp2620-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIiEEEC2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc,"axG",@progbits,_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc,comdat
	.weak	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc,@function
_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc: # @_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2623:
	.cfi_def_cfa_offset 16
.Ltmp2624:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2625:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	leaq	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	$0, 128(%rsi)
	movq	$0, 136(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2626:
	.size	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc, .Ltmp2626-_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2629:
	.cfi_def_cfa_offset 16
.Ltmp2630:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2631:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$1, %eax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rcx
	movl	$1, %edx
	xorl	%r8d, %r8d
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movl	%r8d, %ecx
	movl	%eax, -28(%rbp)         # 4-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE
	leaq	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, %rsi
	addq	$16, %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, (%rdi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2632:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc, .Ltmp2632-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin437:
	.cfi_lsda 3, .Lexception437
# BB#0:
	pushq	%rbp
.Ltmp2641:
	.cfi_def_cfa_offset 16
.Ltmp2642:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2643:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movb	%cl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	andb	$3, %al
	movb	%al, -21(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movl	-20(%rbp), %edx
	movzbl	-21(%rbp), %ecx
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	movq	%r8, %rsi
	callq	_ZN7sc_core12sc_port_baseC2EPKciNS_14sc_port_policyE
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE+16, (%rsi)
	movq	$0, 96(%rsi)
	addq	$104, %rsi
.Ltmp2633:
	movq	%rsi, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev
.Ltmp2634:
	jmp	.LBB437_1
.LBB437_1:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB437_2:
.Ltmp2635:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
.Ltmp2636:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp2637:
	jmp	.LBB437_3
.LBB437_3:
	jmp	.LBB437_4
.LBB437_4:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.LBB437_5:
.Ltmp2638:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2644:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE, .Ltmp2644-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2EPKciNS_14sc_port_policyE
	.cfi_endproc
.Leh_func_end437:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table437:
.Lexception437:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset559 = .Leh_func_begin437-.Leh_func_begin437 # >> Call Site 1 <<
	.long	.Lset559
.Lset560 = .Ltmp2633-.Leh_func_begin437 #   Call between .Leh_func_begin437 and .Ltmp2633
	.long	.Lset560
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset561 = .Ltmp2633-.Leh_func_begin437 # >> Call Site 2 <<
	.long	.Lset561
.Lset562 = .Ltmp2634-.Ltmp2633          #   Call between .Ltmp2633 and .Ltmp2634
	.long	.Lset562
.Lset563 = .Ltmp2635-.Leh_func_begin437 #     jumps to .Ltmp2635
	.long	.Lset563
	.byte	0                       #   On action: cleanup
.Lset564 = .Ltmp2636-.Leh_func_begin437 # >> Call Site 3 <<
	.long	.Lset564
.Lset565 = .Ltmp2637-.Ltmp2636          #   Call between .Ltmp2636 and .Ltmp2637
	.long	.Lset565
.Lset566 = .Ltmp2638-.Leh_func_begin437 #     jumps to .Ltmp2638
	.long	.Lset566
	.byte	1                       #   On action: 1
.Lset567 = .Ltmp2637-.Leh_func_begin437 # >> Call Site 4 <<
	.long	.Lset567
.Lset568 = .Leh_func_end437-.Ltmp2637   #   Call between .Ltmp2637 and .Leh_func_end437
	.long	.Lset568
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv,"axG",@progbits,_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv,comdat
	.weak	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv,@function
_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv: # @_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str21, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2645:
	.size	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv, .Ltmp2645-_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2648:
	.cfi_def_cfa_offset 16
.Ltmp2649:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2650:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2651:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev, .Ltmp2651-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin440:
	.cfi_lsda 3, .Lexception440
# BB#0:
	pushq	%rbp
.Ltmp2657:
	.cfi_def_cfa_offset 16
.Ltmp2658:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2659:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2652:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev
.Ltmp2653:
	jmp	.LBB440_1
.LBB440_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB440_2:
.Ltmp2654:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2660:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev, .Ltmp2660-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_endproc
.Leh_func_end440:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table440:
.Lexception440:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset569 = .Ltmp2652-.Leh_func_begin440 # >> Call Site 1 <<
	.long	.Lset569
.Lset570 = .Ltmp2653-.Ltmp2652          #   Call between .Ltmp2652 and .Ltmp2653
	.long	.Lset570
.Lset571 = .Ltmp2654-.Leh_func_begin440 #     jumps to .Ltmp2654
	.long	.Lset571
	.byte	0                       #   On action: cleanup
.Lset572 = .Ltmp2653-.Leh_func_begin440 # >> Call Site 2 <<
	.long	.Lset572
.Lset573 = .Leh_func_end440-.Ltmp2653   #   Call between .Ltmp2653 and .Leh_func_end440
	.long	.Lset573
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2663:
	.cfi_def_cfa_offset 16
.Ltmp2664:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2665:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2666:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev, .Ltmp2666-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2669:
	.cfi_def_cfa_offset 16
.Ltmp2670:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2671:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2672:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev, .Ltmp2672-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2675:
	.cfi_def_cfa_offset 16
.Ltmp2676:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2677:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2678:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev, .Ltmp2678-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2681:
	.cfi_def_cfa_offset 16
.Ltmp2682:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2683:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2684:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev, .Ltmp2684-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2687:
	.cfi_def_cfa_offset 16
.Ltmp2688:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2689:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2690:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev, .Ltmp2690-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEESaIS6_EE12_Vector_implC2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2693:
	.cfi_def_cfa_offset 16
.Ltmp2694:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2695:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2696:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev, .Ltmp2696-_ZNSaIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2697:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev, .Ltmp2697-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEC2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitorD2Ev,"axG",@progbits,_ZN7sc_core18sc_process_monitorD2Ev,comdat
	.weak	_ZN7sc_core18sc_process_monitorD2Ev
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitorD2Ev,@function
_ZN7sc_core18sc_process_monitorD2Ev:    # @_ZN7sc_core18sc_process_monitorD2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2698:
	.size	_ZN7sc_core18sc_process_monitorD2Ev, .Ltmp2698-_ZN7sc_core18sc_process_monitorD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt5sc_bvILi13EED2Ev,"axG",@progbits,_ZN5sc_dt5sc_bvILi13EED2Ev,comdat
	.weak	_ZN5sc_dt5sc_bvILi13EED2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt5sc_bvILi13EED2Ev,@function
_ZN5sc_dt5sc_bvILi13EED2Ev:             # @_ZN5sc_dt5sc_bvILi13EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2701:
	.cfi_def_cfa_offset 16
.Ltmp2702:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2703:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt10sc_bv_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2704:
	.size	_ZN5sc_dt5sc_bvILi13EED2Ev, .Ltmp2704-_ZN5sc_dt5sc_bvILi13EED2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt10sc_bv_baseD2Ev,"axG",@progbits,_ZN5sc_dt10sc_bv_baseD2Ev,comdat
	.weak	_ZN5sc_dt10sc_bv_baseD2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt10sc_bv_baseD2Ev,@function
_ZN5sc_dt10sc_bv_baseD2Ev:              # @_ZN5sc_dt10sc_bv_baseD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2707:
	.cfi_def_cfa_offset 16
.Ltmp2708:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2709:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	leaq	_ZTVN5sc_dt10sc_bv_baseE, %rax
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rax, (%rdi)
	movq	16(%rdi), %rax
	cmpq	$0, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB450_2
# BB#1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdaPv
.LBB450_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2710:
	.size	_ZN5sc_dt10sc_bv_baseD2Ev, .Ltmp2710-_ZN5sc_dt10sc_bv_baseD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev,"axG",@progbits,_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev,comdat
	.weak	_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev,@function
_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev: # @_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp2711:
	.size	_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev, .Ltmp2711-_ZN5sc_dt8sc_proxyINS_10sc_bv_baseEED2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt10sc_bv_baseD1Ev,"axG",@progbits,_ZN5sc_dt10sc_bv_baseD1Ev,comdat
	.weak	_ZN5sc_dt10sc_bv_baseD1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt10sc_bv_baseD1Ev,@function
_ZN5sc_dt10sc_bv_baseD1Ev:              # @_ZN5sc_dt10sc_bv_baseD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2714:
	.cfi_def_cfa_offset 16
.Ltmp2715:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2716:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt10sc_bv_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2717:
	.size	_ZN5sc_dt10sc_bv_baseD1Ev, .Ltmp2717-_ZN5sc_dt10sc_bv_baseD1Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt10sc_bv_baseD0Ev,"axG",@progbits,_ZN5sc_dt10sc_bv_baseD0Ev,comdat
	.weak	_ZN5sc_dt10sc_bv_baseD0Ev
	.align	16, 0x90
	.type	_ZN5sc_dt10sc_bv_baseD0Ev,@function
_ZN5sc_dt10sc_bv_baseD0Ev:              # @_ZN5sc_dt10sc_bv_baseD0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin453:
	.cfi_lsda 3, .Lexception453
# BB#0:
	pushq	%rbp
.Ltmp2723:
	.cfi_def_cfa_offset 16
.Ltmp2724:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2725:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2718:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt10sc_bv_baseD1Ev
.Ltmp2719:
	jmp	.LBB453_1
.LBB453_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB453_2:
.Ltmp2720:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2726:
	.size	_ZN5sc_dt10sc_bv_baseD0Ev, .Ltmp2726-_ZN5sc_dt10sc_bv_baseD0Ev
	.cfi_endproc
.Leh_func_end453:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table453:
.Lexception453:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset574 = .Ltmp2718-.Leh_func_begin453 # >> Call Site 1 <<
	.long	.Lset574
.Lset575 = .Ltmp2719-.Ltmp2718          #   Call between .Ltmp2718 and .Ltmp2719
	.long	.Lset575
.Lset576 = .Ltmp2720-.Leh_func_begin453 #     jumps to .Ltmp2720
	.long	.Lset576
	.byte	0                       #   On action: cleanup
.Lset577 = .Ltmp2719-.Leh_func_begin453 # >> Call Site 2 <<
	.long	.Lset577
.Lset578 = .Leh_func_end453-.Ltmp2719   #   Call between .Ltmp2719 and .Leh_func_end453
	.long	.Lset578
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2729:
	.cfi_def_cfa_offset 16
.Ltmp2730:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2731:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB454_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str10, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB454_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2732:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv, .Ltmp2732-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIbED2Ev,"axG",@progbits,_ZN7sc_core5sc_inIbED2Ev,comdat
	.weak	_ZN7sc_core5sc_inIbED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIbED2Ev,@function
_ZN7sc_core5sc_inIbED2Ev:               # @_ZN7sc_core5sc_inIbED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin455:
	.cfi_lsda 3, .Lexception455
# BB#0:
	pushq	%rbp
.Ltmp2747:
	.cfi_def_cfa_offset 16
.Ltmp2748:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2749:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core5sc_inIbEE+16, (%rdi)
	movq	%rdi, %rax
.Ltmp2733:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK7sc_core5sc_inIbE13remove_tracesEv
.Ltmp2734:
	jmp	.LBB455_1
.LBB455_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	136(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	je	.LBB455_4
# BB#2:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp2735:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp2736:
	jmp	.LBB455_3
.LBB455_3:
	jmp	.LBB455_4
.LBB455_4:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	144(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	je	.LBB455_7
# BB#5:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp2737:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp2738:
	jmp	.LBB455_6
.LBB455_6:
	jmp	.LBB455_7
.LBB455_7:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	152(%rax), %rcx
	cmpq	$0, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	je	.LBB455_10
# BB#8:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	8(%rcx), %rcx
.Ltmp2739:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp2740:
	jmp	.LBB455_9
.LBB455_9:
	jmp	.LBB455_10
.LBB455_10:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB455_11:
.Ltmp2741:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp2742:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev
.Ltmp2743:
	jmp	.LBB455_12
.LBB455_12:
	jmp	.LBB455_13
.LBB455_13:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB455_14:
.Ltmp2744:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2750:
	.size	_ZN7sc_core5sc_inIbED2Ev, .Ltmp2750-_ZN7sc_core5sc_inIbED2Ev
	.cfi_endproc
.Leh_func_end455:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table455:
.Lexception455:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset579 = .Ltmp2733-.Leh_func_begin455 # >> Call Site 1 <<
	.long	.Lset579
.Lset580 = .Ltmp2740-.Ltmp2733          #   Call between .Ltmp2733 and .Ltmp2740
	.long	.Lset580
.Lset581 = .Ltmp2741-.Leh_func_begin455 #     jumps to .Ltmp2741
	.long	.Lset581
	.byte	0                       #   On action: cleanup
.Lset582 = .Ltmp2740-.Leh_func_begin455 # >> Call Site 2 <<
	.long	.Lset582
.Lset583 = .Ltmp2742-.Ltmp2740          #   Call between .Ltmp2740 and .Ltmp2742
	.long	.Lset583
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset584 = .Ltmp2742-.Leh_func_begin455 # >> Call Site 3 <<
	.long	.Lset584
.Lset585 = .Ltmp2743-.Ltmp2742          #   Call between .Ltmp2742 and .Ltmp2743
	.long	.Lset585
.Lset586 = .Ltmp2744-.Leh_func_begin455 #     jumps to .Ltmp2744
	.long	.Lset586
	.byte	1                       #   On action: 1
.Lset587 = .Ltmp2743-.Leh_func_begin455 # >> Call Site 4 <<
	.long	.Lset587
.Lset588 = .Leh_func_end455-.Ltmp2743   #   Call between .Ltmp2743 and .Leh_func_end455
	.long	.Lset588
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2753:
	.cfi_def_cfa_offset 16
.Ltmp2754:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2755:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2756:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev, .Ltmp2756-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin457:
	.cfi_lsda 3, .Lexception457
# BB#0:
	pushq	%rbp
.Ltmp2765:
	.cfi_def_cfa_offset 16
.Ltmp2766:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2767:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE+16, (%rdi)
	movq	%rdi, %rax
	addq	$104, %rax
.Ltmp2757:
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev
.Ltmp2758:
	jmp	.LBB457_1
.LBB457_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core12sc_port_baseD2Ev
	addq	$48, %rsp
	popq	%rbp
	ret
.LBB457_2:
.Ltmp2759:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp2760:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp2761:
	jmp	.LBB457_3
.LBB457_3:
	jmp	.LBB457_4
.LBB457_4:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB457_5:
.Ltmp2762:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp2768:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev, .Ltmp2768-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev
	.cfi_endproc
.Leh_func_end457:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table457:
.Lexception457:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset589 = .Ltmp2757-.Leh_func_begin457 # >> Call Site 1 <<
	.long	.Lset589
.Lset590 = .Ltmp2758-.Ltmp2757          #   Call between .Ltmp2757 and .Ltmp2758
	.long	.Lset590
.Lset591 = .Ltmp2759-.Leh_func_begin457 #     jumps to .Ltmp2759
	.long	.Lset591
	.byte	0                       #   On action: cleanup
.Lset592 = .Ltmp2758-.Leh_func_begin457 # >> Call Site 2 <<
	.long	.Lset592
.Lset593 = .Ltmp2760-.Ltmp2758          #   Call between .Ltmp2758 and .Ltmp2760
	.long	.Lset593
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset594 = .Ltmp2760-.Leh_func_begin457 # >> Call Site 3 <<
	.long	.Lset594
.Lset595 = .Ltmp2761-.Ltmp2760          #   Call between .Ltmp2760 and .Ltmp2761
	.long	.Lset595
.Lset596 = .Ltmp2762-.Leh_func_begin457 #     jumps to .Ltmp2762
	.long	.Lset596
	.byte	1                       #   On action: 1
.Lset597 = .Ltmp2761-.Leh_func_begin457 # >> Call Site 4 <<
	.long	.Lset597
.Lset598 = .Leh_func_end457-.Ltmp2761   #   Call between .Ltmp2761 and .Leh_func_end457
	.long	.Lset598
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2771:
	.cfi_def_cfa_offset 16
.Ltmp2772:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2773:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2774:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev, .Ltmp2774-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2777:
	.cfi_def_cfa_offset 16
.Ltmp2778:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2779:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2780:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev, .Ltmp2780-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin460:
	.cfi_lsda 3, .Lexception460
# BB#0:
	pushq	%rbp
.Ltmp2786:
	.cfi_def_cfa_offset 16
.Ltmp2787:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2788:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp2781:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev
.Ltmp2782:
	jmp	.LBB460_1
.LBB460_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB460_2:
.Ltmp2783:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp2789:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev, .Ltmp2789-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev
	.cfi_endproc
.Leh_func_end460:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table460:
.Lexception460:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset599 = .Ltmp2781-.Leh_func_begin460 # >> Call Site 1 <<
	.long	.Lset599
.Lset600 = .Ltmp2782-.Ltmp2781          #   Call between .Ltmp2781 and .Ltmp2782
	.long	.Lset600
.Lset601 = .Ltmp2783-.Leh_func_begin460 #     jumps to .Ltmp2783
	.long	.Lset601
	.byte	0                       #   On action: cleanup
.Lset602 = .Ltmp2782-.Leh_func_begin460 # >> Call Site 2 <<
	.long	.Lset602
.Lset603 = .Leh_func_end460-.Ltmp2782   #   Call between .Ltmp2782 and .Leh_func_end460
	.long	.Lset603
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB461_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB461_3
.LBB461_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB461_3
.LBB461_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp2790:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv, .Ltmp2790-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	96(%rdi), %rdi
	cmpq	$0, %rdi
	movq	%rdi, -16(%rsp)         # 8-byte Spill
	je	.LBB462_2
# BB#1:
	movq	-16(%rsp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	-48(%rcx), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB462_3
.LBB462_2:
	movabsq	$0, %rax
	movq	%rax, -24(%rsp)         # 8-byte Spill
	jmp	.LBB462_3
.LBB462_3:
	movq	-24(%rsp), %rax         # 8-byte Reload
	ret
.Ltmp2791:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv, .Ltmp2791-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2794:
	.cfi_def_cfa_offset 16
.Ltmp2795:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2796:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB463_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIbEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB463_3
.LBB463_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB463_3
.LBB463_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB463_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB463_6
.LBB463_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	movl	$0, -4(%rbp)
.LBB463_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2797:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE, .Ltmp2797-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2800:
	.cfi_def_cfa_offset 16
.Ltmp2801:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2802:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB464_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_port_baseE, %rax
	leaq	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB464_3
.LBB464_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB464_3
.LBB464_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.LBB464_5
# BB#4:
	movl	$2, -4(%rbp)
	jmp	.LBB464_6
.LBB464_5:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	movl	$0, -4(%rbp)
.LBB464_6:
	movl	-4(%rbp), %eax
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2803:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE, .Ltmp2803-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2806:
	.cfi_def_cfa_offset 16
.Ltmp2807:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2808:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	cmpq	$0, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	je	.LBB465_2
# BB#1:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIbEE, %rcx
	movabsq	$-1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB465_3
.LBB465_2:
	movabsq	$0, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB465_3
.LBB465_3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB465_5
# BB#4:
	jmp	.LBB465_6
.LBB465_5:
	leaq	.L.str14, %rdi
	leaq	.L.str13, %rsi
	movl	$541, %edx              # imm = 0x21D
	leaq	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE, %rcx
	callq	__assert_fail
.LBB465_6:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB465_7:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB465_12
# BB#8:                                 #   in Loop: Header=BB465_7 Depth=1
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	addq	$104, %rcx
	movslq	-32(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	movq	-72(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	jne	.LBB465_10
# BB#9:                                 #   in Loop: Header=BB465_7 Depth=1
	leaq	_ZN7sc_core22SC_ID_BIND_IF_TO_PORT_E, %rsi
	leaq	.L.str15, %rdx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB465_10:                             #   in Loop: Header=BB465_7 Depth=1
	jmp	.LBB465_11
.LBB465_11:                             #   in Loop: Header=BB465_7 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB465_7
.LBB465_12:
	leaq	-24(%rbp), %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_
	movabsq	$0, %rsi
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, 96(%rsi)
	addq	$80, %rsp
	popq	%rbp
	ret
.Ltmp2809:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE, .Ltmp2809-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2812:
	.cfi_def_cfa_offset 16
.Ltmp2813:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2814:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$104, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, %eax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2815:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv, .Ltmp2815-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2818:
	.cfi_def_cfa_offset 16
.Ltmp2819:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2820:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZTIN7sc_core15sc_signal_in_ifIbEE, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt9type_info4nameEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2821:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv, .Ltmp2821-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2824:
	.cfi_def_cfa_offset 16
.Ltmp2825:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2826:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB468_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB468_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB468_8
# BB#3:                                 #   in Loop: Header=BB468_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB468_5
# BB#4:                                 #   in Loop: Header=BB468_2 Depth=1
	jmp	.LBB468_6
.LBB468_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$588, %edx              # imm = 0x24C
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB468_6:                              #   in Loop: Header=BB468_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_thread_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB468_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB468_2
.LBB468_8:
	jmp	.LBB468_10
.LBB468_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.LBB468_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2827:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, .Ltmp2827-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2830:
	.cfi_def_cfa_offset 16
.Ltmp2831:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2832:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, 88(%rdx)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB469_9
# BB#1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movl	%eax, %ecx
	movl	%ecx, -28(%rbp)
	movl	$0, -32(%rbp)
.LBB469_2:                              # =>This Inner Loop Header: Depth=1
	movl	-32(%rbp), %eax
	cmpl	-28(%rbp), %eax
	jge	.LBB469_8
# BB#3:                                 #   in Loop: Header=BB469_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$104, %rax
	movslq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB469_5
# BB#4:                                 #   in Loop: Header=BB469_2 Depth=1
	jmp	.LBB469_6
.LBB469_5:
	leaq	.L.str12, %rdi
	leaq	.L.str13, %rsi
	movl	$609, %edx              # imm = 0x261
	leaq	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, %rcx
	callq	__assert_fail
.LBB469_6:                              #   in Loop: Header=BB469_2 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-40(%rbp), %rcx
	movq	(%rcx), %rdx
	movq	-48(%rdx), %rdx
	movq	%rcx, %rdi
	addq	%rdx, %rdi
	movq	(%rcx,%rdx), %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	callq	*8(%rcx)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNK7sc_core12sc_port_base16add_static_eventEPNS_17sc_method_processERKNS_8sc_eventE
# BB#7:                                 #   in Loop: Header=BB469_2 Depth=1
	movl	-32(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	jmp	.LBB469_2
.LBB469_8:
	jmp	.LBB469_10
.LBB469_9:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
.LBB469_10:
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp2833:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, .Ltmp2833-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2836:
	.cfi_def_cfa_offset 16
.Ltmp2837:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2838:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	movq	-48(%rax), %rax
	addq	%rax, %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERNS_12sc_interfaceE
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2839:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_, .Ltmp2839-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2842:
	.cfi_def_cfa_offset 16
.Ltmp2843:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2844:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_base4bindERS0_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2845:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_, .Ltmp2845-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	movq	(%rdi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	ret
.Ltmp2846:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv, .Ltmp2846-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp2847:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm, .Ltmp2847-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	-16(%rsp), %rdi
	shlq	$3, %rdi
	addq	%rdi, %rsi
	movq	%rsi, %rax
	ret
.Ltmp2848:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm, .Ltmp2848-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEixEm
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2851:
	.cfi_def_cfa_offset 16
.Ltmp2852:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2853:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB475_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB475_3
.LBB475_2:
	leaq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv
	leaq	-24(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	(%rsi), %rsi
	movq	%rsi, (%rsp)
	movq	-40(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
.LBB475_3:
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp2854:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_, .Ltmp2854-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE9push_backERKS3_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	%rdx, -24(%rsp)
	movq	-16(%rsp), %rdx
	cmpq	$0, %rdx
	movq	%rdx, -32(%rsp)         # 8-byte Spill
	je	.LBB476_2
# BB#1:
	movq	-32(%rsp), %rax         # 8-byte Reload
	movq	-24(%rsp), %rcx
	movq	(%rcx), %rcx
	movq	-32(%rsp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	%rax, -40(%rsp)         # 8-byte Spill
.LBB476_2:
	ret
.Ltmp2855:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_, .Ltmp2855-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin477:
	.cfi_lsda 3, .Lexception477
# BB#0:
	pushq	%rbp
.Ltmp2887:
	.cfi_def_cfa_offset 16
.Ltmp2888:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2889:
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	leaq	16(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	8(%rsi), %rdi
	cmpq	16(%rsi), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rsi, -96(%rbp)         # 8-byte Spill
	je	.LBB477_2
# BB#1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	8(%rcx), %rdx
	addq	$-8, %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, -24(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rdi
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-16, %rcx
	movq	8(%rax), %rdx
	addq	$-8, %rdx
	movq	%rcx, %rsi
	callq	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	movq	-24(%rbp), %rcx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB477_22
.LBB477_2:
	movl	$1, %esi
	movl	$.L.str16, %edx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc
	movq	%rax, -32(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	callq	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm
	movq	%rax, -56(%rbp)
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rsi
	movq	-16(%rbp), %rdx
.Ltmp2856:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE9constructEPS4_RKS4_
.Ltmp2857:
	jmp	.LBB477_3
.LBB477_3:
	movq	$0, -64(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp2858:
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
.Ltmp2859:
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jmp	.LBB477_4
.LBB477_4:
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rsi
	movq	-56(%rbp), %rdx
.Ltmp2860:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -144(%rbp)        # 8-byte Spill
	movq	%rdx, -152(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp2861:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB477_5
.LBB477_5:
.Ltmp2862:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-144(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_
.Ltmp2863:
	movq	%rax, -168(%rbp)        # 8-byte Spill
	jmp	.LBB477_6
.LBB477_6:
	movq	-168(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	addq	$8, %rax
	movq	%rax, -64(%rbp)
.Ltmp2864:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
.Ltmp2865:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB477_7
.LBB477_7:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rdi
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-64(%rbp), %rdx
.Ltmp2866:
	movq	%rdi, -184(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp2867:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB477_8
.LBB477_8:
.Ltmp2868:
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-208(%rbp), %rcx        # 8-byte Reload
	callq	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_
.Ltmp2869:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB477_9
.LBB477_9:
	movq	-216(%rbp), %rax        # 8-byte Reload
	movq	%rax, -64(%rbp)
	jmp	.LBB477_21
.LBB477_10:
.Ltmp2870:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
# BB#11:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch
	cmpq	$0, -64(%rbp)
	movq	%rax, -224(%rbp)        # 8-byte Spill
	jne	.LBB477_15
# BB#12:
	movq	-56(%rbp), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
.Ltmp2871:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_
.Ltmp2872:
	jmp	.LBB477_13
.LBB477_13:
	jmp	.LBB477_18
.LBB477_14:
.Ltmp2881:
	movl	%edx, %ecx
	movq	%rax, -72(%rbp)
	movl	%ecx, -76(%rbp)
.Ltmp2882:
	callq	__cxa_end_catch
.Ltmp2883:
	jmp	.LBB477_20
.LBB477_15:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp2873:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -232(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -240(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp2874:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB477_16
.LBB477_16:
.Ltmp2875:
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movq	-248(%rbp), %rdx        # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E
.Ltmp2876:
	jmp	.LBB477_17
.LBB477_17:
	jmp	.LBB477_18
.LBB477_18:
	movq	-56(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp2877:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m
.Ltmp2878:
	jmp	.LBB477_19
.LBB477_19:
.Ltmp2879:
	callq	__cxa_rethrow
.Ltmp2880:
	jmp	.LBB477_25
.LBB477_20:
	jmp	.LBB477_23
.LBB477_21:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -256(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -264(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	-264(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %rcx
	subq	%rcx, %rdi
	sarq	$3, %rdi
	movq	%rdi, -272(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-64(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-56(%rbp), %rax
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB477_22:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	ret
.LBB477_23:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume
.LBB477_24:
.Ltmp2884:
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.LBB477_25:
.Ltmp2890:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_, .Ltmp2890-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS3_S5_EERKS3_
	.cfi_endproc
.Leh_func_end477:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table477:
.Lexception477:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\343\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
.Lset604 = .Leh_func_begin477-.Leh_func_begin477 # >> Call Site 1 <<
	.long	.Lset604
.Lset605 = .Ltmp2856-.Leh_func_begin477 #   Call between .Leh_func_begin477 and .Ltmp2856
	.long	.Lset605
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset606 = .Ltmp2856-.Leh_func_begin477 # >> Call Site 2 <<
	.long	.Lset606
.Lset607 = .Ltmp2869-.Ltmp2856          #   Call between .Ltmp2856 and .Ltmp2869
	.long	.Lset607
.Lset608 = .Ltmp2870-.Leh_func_begin477 #     jumps to .Ltmp2870
	.long	.Lset608
	.byte	1                       #   On action: 1
.Lset609 = .Ltmp2869-.Leh_func_begin477 # >> Call Site 3 <<
	.long	.Lset609
.Lset610 = .Ltmp2871-.Ltmp2869          #   Call between .Ltmp2869 and .Ltmp2871
	.long	.Lset610
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset611 = .Ltmp2871-.Leh_func_begin477 # >> Call Site 4 <<
	.long	.Lset611
.Lset612 = .Ltmp2872-.Ltmp2871          #   Call between .Ltmp2871 and .Ltmp2872
	.long	.Lset612
.Lset613 = .Ltmp2881-.Leh_func_begin477 #     jumps to .Ltmp2881
	.long	.Lset613
	.byte	0                       #   On action: cleanup
.Lset614 = .Ltmp2882-.Leh_func_begin477 # >> Call Site 5 <<
	.long	.Lset614
.Lset615 = .Ltmp2883-.Ltmp2882          #   Call between .Ltmp2882 and .Ltmp2883
	.long	.Lset615
.Lset616 = .Ltmp2884-.Leh_func_begin477 #     jumps to .Ltmp2884
	.long	.Lset616
	.byte	1                       #   On action: 1
.Lset617 = .Ltmp2873-.Leh_func_begin477 # >> Call Site 6 <<
	.long	.Lset617
.Lset618 = .Ltmp2880-.Ltmp2873          #   Call between .Ltmp2873 and .Ltmp2880
	.long	.Lset618
.Lset619 = .Ltmp2881-.Leh_func_begin477 #     jumps to .Ltmp2881
	.long	.Lset619
	.byte	0                       #   On action: cleanup
.Lset620 = .Ltmp2880-.Leh_func_begin477 # >> Call Site 7 <<
	.long	.Lset620
.Lset621 = .Leh_func_end477-.Ltmp2880   #   Call between .Ltmp2880 and .Leh_func_end477
	.long	.Lset621
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2893:
	.cfi_def_cfa_offset 16
.Ltmp2894:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2895:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	addq	$8, %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2896:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv, .Ltmp2896-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE3endEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2899:
	.cfi_def_cfa_offset 16
.Ltmp2900:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2901:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2902:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_, .Ltmp2902-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	ret
.Ltmp2903:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_, .Ltmp2903-_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_endproc

	.section	.text._ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,@function
_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_: # @_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2906:
	.cfi_def_cfa_offset 16
.Ltmp2907:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2908:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2909:
	.size	_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_, .Ltmp2909-_ZSt13copy_backwardIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp2910:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv, .Ltmp2910-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	(%rdi), %rax
	ret
.Ltmp2911:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv, .Ltmp2911-_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEdeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2914:
	.cfi_def_cfa_offset 16
.Ltmp2915:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2916:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movq	-56(%rbp), %rdx         # 8-byte Reload
	subq	%rax, %rdx
	cmpq	-16(%rbp), %rdx
	jae	.LBB484_2
# BB#1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc
.LBB484_2:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	movq	%rax, -40(%rbp)
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-64(%rbp), %rsi         # 8-byte Reload
	addq	(%rax), %rsi
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE4sizeEv
	movq	-72(%rbp), %rsi         # 8-byte Reload
	cmpq	%rax, %rsi
	jb	.LBB484_4
# BB#3:
	movq	-32(%rbp), %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv
	movq	-80(%rbp), %rdi         # 8-byte Reload
	cmpq	%rax, %rdi
	jbe	.LBB484_5
.LBB484_4:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jmp	.LBB484_6
.LBB484_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
.LBB484_6:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	ret
.Ltmp2917:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc, .Ltmp2917-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_M_check_lenEmPKc
	.cfi_endproc

	.section	.text._ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,"axG",@progbits,_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,comdat
	.weak	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.align	16, 0x90
	.type	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,@function
_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_: # @_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2920:
	.cfi_def_cfa_offset 16
.Ltmp2921:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2922:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	subq	%rax, %rsi
	sarq	$3, %rsi
	movq	%rsi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2923:
	.size	_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_, .Ltmp2923-_ZN9__gnu_cxxmiIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2926:
	.cfi_def_cfa_offset 16
.Ltmp2927:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2928:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPN7sc_core15sc_signal_in_ifIbEESt6vectorIS4_SaIS4_EEEC1ERKS5_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2929:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv, .Ltmp2929-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE5beginEv
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2932:
	.cfi_def_cfa_offset 16
.Ltmp2933:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2934:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB487_2
# BB#1:
	movabsq	$0, %rdx
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB487_3
.LBB487_2:
	movabsq	$0, %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB487_3
.LBB487_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2935:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm, .Ltmp2935-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE11_M_allocateEm
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_,"axG",@progbits,_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_,comdat
	.weak	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_
	.align	16, 0x90
	.type	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_,@function
_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_: # @_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2938:
	.cfi_def_cfa_offset 16
.Ltmp2939:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2940:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2941:
	.size	_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_, .Ltmp2941-_ZSt22__uninitialized_move_aIPPN7sc_core15sc_signal_in_ifIbEES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp2942:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv, .Ltmp2942-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp2943:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_, .Ltmp2943-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE7destroyEPS4_
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2946:
	.cfi_def_cfa_offset 16
.Ltmp2947:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2948:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2949:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E, .Ltmp2949-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2952:
	.cfi_def_cfa_offset 16
.Ltmp2953:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2954:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdx
	cmpq	$0, -16(%rbp)
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	je	.LBB492_2
# BB#1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m
.LBB492_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2955:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m, .Ltmp2955-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2958:
	.cfi_def_cfa_offset 16
.Ltmp2959:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2960:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2961:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m, .Ltmp2961-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE10deallocateEPS4_m
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_,"axG",@progbits,_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_,comdat
	.weak	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_
	.align	16, 0x90
	.type	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_,@function
_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_: # @_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2964:
	.cfi_def_cfa_offset 16
.Ltmp2965:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2966:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp2967:
	.size	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_, .Ltmp2967-_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEEEvT_S5_
	.cfi_endproc

	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_
	.align	16, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	ret
.Ltmp2968:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_, .Ltmp2968-_ZNSt12_Destroy_auxILb1EE9__destroyIPPN7sc_core15sc_signal_in_ifIbEEEEvT_S7_
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.align	16, 0x90
	.type	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2971:
	.cfi_def_cfa_offset 16
.Ltmp2972:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2973:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2974:
	.size	_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E, .Ltmp2974-_ZSt22__uninitialized_copy_aIPPN7sc_core15sc_signal_in_ifIbEES4_S3_ET0_T_S6_S5_RSaIT1_E
	.cfi_endproc

	.section	.text._ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,@function
_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_: # @_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2977:
	.cfi_def_cfa_offset 16
.Ltmp2978:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2979:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2980:
	.size	_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_, .Ltmp2980-_ZSt18uninitialized_copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_
	.align	16, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2983:
	.cfi_def_cfa_offset 16
.Ltmp2984:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2985:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2986:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_, .Ltmp2986-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPN7sc_core15sc_signal_in_ifIbEES6_EET0_T_S8_S7_
	.cfi_endproc

	.section	.text._ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,"axG",@progbits,_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,comdat
	.weak	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.align	16, 0x90
	.type	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_,@function
_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_: # @_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2989:
	.cfi_def_cfa_offset 16
.Ltmp2990:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2991:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp2992:
	.size	_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_, .Ltmp2992-_ZSt4copyIPPN7sc_core15sc_signal_in_ifIbEES4_ET0_T_S6_S5_
	.cfi_endproc

	.section	.text._ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,@function
_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_: # @_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2995:
	.cfi_def_cfa_offset 16
.Ltmp2996:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2997:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp2998:
	.size	_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_, .Ltmp2998-_ZSt14__copy_move_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_,"axG",@progbits,_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_,comdat
	.weak	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.align	16, 0x90
	.type	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_,@function
_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_: # @_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3001:
	.cfi_def_cfa_offset 16
.Ltmp3002:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3003:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3004:
	.size	_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_, .Ltmp3004-_ZSt12__miter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Miter_baseIT_E13iterator_typeES6_
	.cfi_endproc

	.section	.text._ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_,"axG",@progbits,_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_,comdat
	.weak	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_
	.align	16, 0x90
	.type	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_,@function
_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_: # @_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rax
	ret
.Ltmp3005:
	.size	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_, .Ltmp3005-_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_
	.cfi_endproc

	.section	.text._ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,@function
_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_: # @_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3008:
	.cfi_def_cfa_offset 16
.Ltmp3009:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3010:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3011:
	.size	_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_, .Ltmp3011-_ZSt13__copy_move_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_,"axG",@progbits,_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_,comdat
	.weak	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.align	16, 0x90
	.type	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_,@function
_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_: # @_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3014:
	.cfi_def_cfa_offset 16
.Ltmp3015:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3016:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Iter_baseIPPN7sc_core15sc_signal_in_ifIbEELb0EE7_S_baseES4_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3017:
	.size	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_, .Ltmp3017-_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	.cfi_endproc

	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	.align	16, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3020:
	.cfi_def_cfa_offset 16
.Ltmp3021:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3022:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB505_2
# BB#1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB505_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3023:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_, .Ltmp3023-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3026:
	.cfi_def_cfa_offset 16
.Ltmp3027:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3028:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rdx
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv
	movq	-32(%rbp), %rdx         # 8-byte Reload
	cmpq	%rax, %rdx
	jbe	.LBB506_2
# BB#1:
	callq	_ZSt17__throw_bad_allocv
.LBB506_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3029:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv, .Ltmp3029-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8allocateEmPKv
	.cfi_endproc

	.section	.text._ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv
	.align	16, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv
	.cfi_startproc
# BB#0:
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rdi, -8(%rsp)
	ret
.Ltmp3030:
	.size	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv, .Ltmp3030-_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv
	.align	16, 0x90
	.type	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv,@function
_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv: # @_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3033:
	.cfi_def_cfa_offset 16
.Ltmp3034:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3035:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3036:
	.size	_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv, .Ltmp3036-_ZNKSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE8max_sizeEv
	.cfi_endproc

	.section	.text._ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	.align	16, 0x90
	.type	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rdi, %rax
	ret
.Ltmp3037:
	.size	_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv, .Ltmp3037-_ZNKSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc

	.section	.text._ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,@function
_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_: # @_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3040:
	.cfi_def_cfa_offset 16
.Ltmp3041:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3042:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPN7sc_core15sc_signal_in_ifIbEEENSt11_Niter_baseIT_E13iterator_typeES6_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	addq	$48, %rsp
	popq	%rbp
	ret
.Ltmp3043:
	.size	_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_, .Ltmp3043-_ZSt23__copy_move_backward_a2ILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,"axG",@progbits,_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,comdat
	.weak	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.align	16, 0x90
	.type	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_,@function
_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_: # @_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3046:
	.cfi_def_cfa_offset 16
.Ltmp3047:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3048:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3049:
	.size	_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_, .Ltmp3049-_ZSt22__copy_move_backward_aILb0EPPN7sc_core15sc_signal_in_ifIbEES4_ET1_T0_S6_S5_
	.cfi_endproc

	.section	.text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_,"axG",@progbits,_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_,comdat
	.weak	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	.align	16, 0x90
	.type	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_,@function
_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_: # @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3052:
	.cfi_def_cfa_offset 16
.Ltmp3053:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3054:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rsi
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB512_2
# BB#1:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove
.LBB512_2:
	movq	-24(%rbp), %rax
	movabsq	$0, %rcx
	subq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3055:
	.size	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_, .Ltmp3055-_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPN7sc_core15sc_signal_in_ifIbEEEEPT_PKS7_SA_S8_
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin513:
	.cfi_lsda 3, .Lexception513
# BB#0:
	pushq	%rbp
.Ltmp3066:
	.cfi_def_cfa_offset 16
.Ltmp3067:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3068:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rdi, %rcx
.Ltmp3056:
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp3057:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB513_1
.LBB513_1:
.Ltmp3058:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-56(%rbp), %rdx         # 8-byte Reload
	callq	_ZSt8_DestroyIPPN7sc_core15sc_signal_in_ifIbEES3_EvT_S5_RSaIT0_E
.Ltmp3059:
	jmp	.LBB513_2
.LBB513_2:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB513_3:
.Ltmp3060:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
.Ltmp3061:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
.Ltmp3062:
	jmp	.LBB513_4
.LBB513_4:
	jmp	.LBB513_5
.LBB513_5:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.LBB513_6:
.Ltmp3063:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp3069:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev, .Ltmp3069-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	.cfi_endproc
.Leh_func_end513:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table513:
.Lexception513:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset622 = .Ltmp3056-.Leh_func_begin513 # >> Call Site 1 <<
	.long	.Lset622
.Lset623 = .Ltmp3059-.Ltmp3056          #   Call between .Ltmp3056 and .Ltmp3059
	.long	.Lset623
.Lset624 = .Ltmp3060-.Leh_func_begin513 #     jumps to .Ltmp3060
	.long	.Lset624
	.byte	0                       #   On action: cleanup
.Lset625 = .Ltmp3059-.Leh_func_begin513 # >> Call Site 2 <<
	.long	.Lset625
.Lset626 = .Ltmp3061-.Ltmp3059          #   Call between .Ltmp3059 and .Ltmp3061
	.long	.Lset626
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset627 = .Ltmp3061-.Leh_func_begin513 # >> Call Site 3 <<
	.long	.Lset627
.Lset628 = .Ltmp3062-.Ltmp3061          #   Call between .Ltmp3061 and .Ltmp3062
	.long	.Lset628
.Lset629 = .Ltmp3063-.Leh_func_begin513 #     jumps to .Ltmp3063
	.long	.Lset629
	.byte	1                       #   On action: 1
.Lset630 = .Ltmp3062-.Leh_func_begin513 # >> Call Site 4 <<
	.long	.Lset630
.Lset631 = .Leh_func_end513-.Ltmp3062   #   Call between .Ltmp3062 and .Leh_func_end513
	.long	.Lset631
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin514:
	.cfi_lsda 3, .Lexception514
# BB#0:
	pushq	%rbp
.Ltmp3075:
	.cfi_def_cfa_offset 16
.Ltmp3076:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3077:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	(%rdi), %rax
	movq	16(%rdi), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rdi, %rdx
.Ltmp3070:
	movq	%rax, %rsi
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE13_M_deallocateEPS3_m
.Ltmp3071:
	jmp	.LBB514_1
.LBB514_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB514_2:
.Ltmp3072:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp3078:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev, .Ltmp3078-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EED2Ev
	.cfi_endproc
.Leh_func_end514:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table514:
.Lexception514:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset632 = .Ltmp3070-.Leh_func_begin514 # >> Call Site 1 <<
	.long	.Lset632
.Lset633 = .Ltmp3071-.Ltmp3070          #   Call between .Ltmp3070 and .Ltmp3071
	.long	.Lset633
.Lset634 = .Ltmp3072-.Leh_func_begin514 #     jumps to .Ltmp3072
	.long	.Lset634
	.byte	0                       #   On action: cleanup
.Lset635 = .Ltmp3071-.Leh_func_begin514 # >> Call Site 2 <<
	.long	.Lset635
.Lset636 = .Leh_func_end514-.Ltmp3071   #   Call between .Ltmp3071 and .Leh_func_end514
	.long	.Lset636
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3081:
	.cfi_def_cfa_offset 16
.Ltmp3082:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3083:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3084:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev, .Ltmp3084-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3087:
	.cfi_def_cfa_offset 16
.Ltmp3088:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3089:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3090:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev, .Ltmp3090-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implD2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3093:
	.cfi_def_cfa_offset 16
.Ltmp3094:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3095:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3096:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev, .Ltmp3096-_ZNSaIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp3097:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev, .Ltmp3097-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEED2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EED2Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EED2Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EED2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EED2Ev,@function
_ZN5sc_dt7sc_uintILi32EED2Ev:           # @_ZN5sc_dt7sc_uintILi32EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3100:
	.cfi_def_cfa_offset 16
.Ltmp3101:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3102:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3103:
	.size	_ZN5sc_dt7sc_uintILi32EED2Ev, .Ltmp3103-_ZN5sc_dt7sc_uintILi32EED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE,"axG",@progbits,_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE,comdat
	.weak	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	.align	16, 0x90
	.type	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE,@function
_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE: # @_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3106:
	.cfi_def_cfa_offset 16
.Ltmp3107:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3108:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rcx, -40(%rbp)
	movq	%rdx, -48(%rbp)
	movq	-8(%rbp), %rdi
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	%rdx, -56(%rbp)
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdx
	movq	-56(%rbp), %rcx
	callq	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp3109:
	.size	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE, .Ltmp3109-_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC1ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE,"axG",@progbits,_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE,comdat
	.weak	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	.align	16, 0x90
	.type	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE,@function
_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE: # @_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3112:
	.cfi_def_cfa_offset 16
.Ltmp3113:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3114:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rcx, -40(%rbp)
	movq	%rdx, -48(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core15sc_event_finderC2ERKNS_12sc_port_baseE
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	$_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE+16, (%rcx)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rsi
	movq	%rsi, 24(%rcx)
	movq	%rdx, 16(%rcx)
	addq	$64, %rsp
	popq	%rbp
	ret
.Ltmp3115:
	.size	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE, .Ltmp3115-_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEC2ERKNS_12sc_port_baseEMS2_KFRKNS_8sc_eventEvE
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev,"axG",@progbits,_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev,comdat
	.weak	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev,@function
_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev: # @_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3118:
	.cfi_def_cfa_offset 16
.Ltmp3119:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3120:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3121:
	.size	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev, .Ltmp3121-_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev,"axG",@progbits,_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev,comdat
	.weak	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev,@function
_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev: # @_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin523:
	.cfi_lsda 3, .Lexception523
# BB#0:
	pushq	%rbp
.Ltmp3127:
	.cfi_def_cfa_offset 16
.Ltmp3128:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3129:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp3122:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev
.Ltmp3123:
	jmp	.LBB523_1
.LBB523_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB523_2:
.Ltmp3124:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp3130:
	.size	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev, .Ltmp3130-_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev
	.cfi_endproc
.Leh_func_end523:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table523:
.Lexception523:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset637 = .Ltmp3122-.Leh_func_begin523 # >> Call Site 1 <<
	.long	.Lset637
.Lset638 = .Ltmp3123-.Ltmp3122          #   Call between .Ltmp3122 and .Ltmp3123
	.long	.Lset638
.Lset639 = .Ltmp3124-.Leh_func_begin523 #     jumps to .Ltmp3124
	.long	.Lset639
	.byte	0                       #   On action: cleanup
.Lset640 = .Ltmp3123-.Leh_func_begin523 # >> Call Site 2 <<
	.long	.Lset640
.Lset641 = .Leh_func_end523-.Ltmp3123   #   Call between .Ltmp3123 and .Leh_func_end523
	.long	.Lset641
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE,"axG",@progbits,_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE,comdat
	.weak	_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE
	.align	16, 0x90
	.type	_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE,@function
_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE: # @_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3133:
	.cfi_def_cfa_offset 16
.Ltmp3134:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3135:
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	cmpq	$0, -16(%rbp)
	movq	%rsi, -32(%rbp)         # 8-byte Spill
	je	.LBB524_5
# BB#1:
	movq	-16(%rbp), %rax
	cmpq	$0, %rax
	movq	%rax, -40(%rbp)         # 8-byte Spill
	je	.LBB524_3
# BB#2:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIbEE, %rcx
	movabsq	$-1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-48(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB524_4
.LBB524_3:
	movabsq	$0, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB524_4
.LBB524_4:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB524_9
.LBB524_5:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core15sc_event_finder4portEv
	movq	(%rax), %rdi
	movq	%rdi, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-72(%rbp), %rax         # 8-byte Reload
	callq	*120(%rax)
	cmpq	$0, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	je	.LBB524_7
# BB#6:
	leaq	_ZTIN7sc_core12sc_interfaceE, %rax
	leaq	_ZTIN7sc_core15sc_signal_in_ifIbEE, %rcx
	movabsq	$-1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	%rsi, %rdi
	movq	%rax, %rsi
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	-88(%rbp), %rcx         # 8-byte Reload
	callq	__dynamic_cast
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB524_8
.LBB524_7:
	movabsq	$0, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB524_8
.LBB524_8:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
.LBB524_9:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jne	.LBB524_11
# BB#10:
	leaq	_ZN7sc_core17SC_ID_FIND_EVENT_E, %rsi
	leaq	.L.str10, %rdx
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core15sc_event_finder12report_errorEPKcS2_
.LBB524_11:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	16(%rax), %rcx
	movq	24(%rax), %rdx
	movq	-24(%rbp), %rsi
	addq	%rdx, %rsi
	movq	%rcx, %rdx
	andq	$1, %rdx
	cmpq	$0, %rdx
	movq	%rcx, -104(%rbp)        # 8-byte Spill
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	je	.LBB524_13
# BB#12:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	-104(%rbp), %rdx        # 8-byte Reload
	subq	$1, %rdx
	movq	(%rcx,%rdx), %rcx
	movq	%rcx, -120(%rbp)        # 8-byte Spill
	jmp	.LBB524_14
.LBB524_13:
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rax, -120(%rbp)        # 8-byte Spill
.LBB524_14:
	movq	-120(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	*%rax
	addq	$128, %rsp
	popq	%rbp
	ret
.Ltmp3136:
	.size	_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE, .Ltmp3136-_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE
	.cfi_endproc

	.section	.text._ZNK7sc_core15sc_event_finder4portEv,"axG",@progbits,_ZNK7sc_core15sc_event_finder4portEv,comdat
	.weak	_ZNK7sc_core15sc_event_finder4portEv
	.align	16, 0x90
	.type	_ZNK7sc_core15sc_event_finder4portEv,@function
_ZNK7sc_core15sc_event_finder4portEv:   # @_ZNK7sc_core15sc_event_finder4portEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	ret
.Ltmp3137:
	.size	_ZNK7sc_core15sc_event_finder4portEv, .Ltmp3137-_ZNK7sc_core15sc_event_finder4portEv
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev,"axG",@progbits,_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev,comdat
	.weak	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev
	.align	16, 0x90
	.type	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev,@function
_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev: # @_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3140:
	.cfi_def_cfa_offset 16
.Ltmp3141:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3142:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core15sc_event_finderD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3143:
	.size	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev, .Ltmp3143-_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_process_handleD2Ev,"axG",@progbits,_ZN7sc_core17sc_process_handleD2Ev,comdat
	.weak	_ZN7sc_core17sc_process_handleD2Ev
	.align	16, 0x90
	.type	_ZN7sc_core17sc_process_handleD2Ev,@function
_ZN7sc_core17sc_process_handleD2Ev:     # @_ZN7sc_core17sc_process_handleD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3146:
	.cfi_def_cfa_offset 16
.Ltmp3147:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3148:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, (%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	je	.LBB527_2
# BB#1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	_ZN7sc_core12sc_process_b19reference_decrementEv
.LBB527_2:
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3149:
	.size	_ZN7sc_core17sc_process_handleD2Ev, .Ltmp3149-_ZN7sc_core17sc_process_handleD2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core12sc_process_b19reference_decrementEv,"axG",@progbits,_ZN7sc_core12sc_process_b19reference_decrementEv,comdat
	.weak	_ZN7sc_core12sc_process_b19reference_decrementEv
	.align	16, 0x90
	.type	_ZN7sc_core12sc_process_b19reference_decrementEv,@function
_ZN7sc_core12sc_process_b19reference_decrementEv: # @_ZN7sc_core12sc_process_b19reference_decrementEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3152:
	.cfi_def_cfa_offset 16
.Ltmp3153:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3154:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movl	180(%rdi), %eax
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, 180(%rdi)
	cmpl	$0, 180(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB528_2
# BB#1:
	movq	-16(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_process_b14delete_processEv
.LBB528_2:
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3155:
	.size	_ZN7sc_core12sc_process_b19reference_decrementEv, .Ltmp3155-_ZN7sc_core12sc_process_b19reference_decrementEv
	.cfi_endproc

	.section	.text._ZN7sc_core17sc_process_handleC2ERKS0_,"axG",@progbits,_ZN7sc_core17sc_process_handleC2ERKS0_,comdat
	.weak	_ZN7sc_core17sc_process_handleC2ERKS0_
	.align	16, 0x90
	.type	_ZN7sc_core17sc_process_handleC2ERKS0_,@function
_ZN7sc_core17sc_process_handleC2ERKS0_: # @_ZN7sc_core17sc_process_handleC2ERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3158:
	.cfi_def_cfa_offset 16
.Ltmp3159:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3160:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, (%rsi)
	cmpq	$0, (%rsi)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	je	.LBB529_2
# BB#1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	_ZN7sc_core12sc_process_b19reference_incrementEv
.LBB529_2:
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3161:
	.size	_ZN7sc_core17sc_process_handleC2ERKS0_, .Ltmp3161-_ZN7sc_core17sc_process_handleC2ERKS0_
	.cfi_endproc

	.section	.text._ZN7sc_core12sc_process_b19reference_incrementEv,"axG",@progbits,_ZN7sc_core12sc_process_b19reference_incrementEv,comdat
	.weak	_ZN7sc_core12sc_process_b19reference_incrementEv
	.align	16, 0x90
	.type	_ZN7sc_core12sc_process_b19reference_incrementEv,@function
_ZN7sc_core12sc_process_b19reference_incrementEv: # @_ZN7sc_core12sc_process_b19reference_incrementEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3164:
	.cfi_def_cfa_offset 16
.Ltmp3165:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3166:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpl	$0, 180(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	je	.LBB530_2
# BB#1:
	jmp	.LBB530_3
.LBB530_2:
	leaq	.L.str22, %rdi
	leaq	.L.str23, %rsi
	movl	$617, %edx              # imm = 0x269
	leaq	.L__PRETTY_FUNCTION__._ZN7sc_core12sc_process_b19reference_incrementEv, %rcx
	callq	__assert_fail
.LBB530_3:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movl	180(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, 180(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3167:
	.size	_ZN7sc_core12sc_process_b19reference_incrementEv, .Ltmp3167-_ZN7sc_core12sc_process_b19reference_incrementEv
	.cfi_endproc

	.section	.text._ZN7sc_core5sc_inIbEC2EPKc,"axG",@progbits,_ZN7sc_core5sc_inIbEC2EPKc,comdat
	.weak	_ZN7sc_core5sc_inIbEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core5sc_inIbEC2EPKc,@function
_ZN7sc_core5sc_inIbEC2EPKc:             # @_ZN7sc_core5sc_inIbEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3170:
	.cfi_def_cfa_offset 16
.Ltmp3171:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3172:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc
	leaq	_ZTVN7sc_core5sc_inIbEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	$0, 128(%rsi)
	movq	$0, 136(%rsi)
	movq	$0, 144(%rsi)
	movq	$0, 152(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3173:
	.size	_ZN7sc_core5sc_inIbEC2EPKc, .Ltmp3173-_ZN7sc_core5sc_inIbEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3176:
	.cfi_def_cfa_offset 16
.Ltmp3177:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3178:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$1, %eax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rcx
	movl	$1, %edx
	xorl	%r8d, %r8d
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rsi
	movl	%r8d, %ecx
	movl	%eax, -28(%rbp)         # 4-byte Spill
	callq	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE
	leaq	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE, %rsi
	addq	$16, %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, (%rdi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp3179:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc, .Ltmp3179-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEC2EPKc
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE,"axG",@progbits,_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE,comdat
	.weak	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE,@function
_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE: # @_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin533:
	.cfi_lsda 3, .Lexception533
# BB#0:
	pushq	%rbp
.Ltmp3188:
	.cfi_def_cfa_offset 16
.Ltmp3189:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3190:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movb	%cl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	andb	$3, %al
	movb	%al, -21(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movl	-20(%rbp), %edx
	movzbl	-21(%rbp), %ecx
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	movq	%r8, %rsi
	callq	_ZN7sc_core12sc_port_baseC2EPKciNS_14sc_port_policyE
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE+16, (%rsi)
	movq	$0, 96(%rsi)
	addq	$104, %rsi
.Ltmp3180:
	movq	%rsi, %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev
.Ltmp3181:
	jmp	.LBB533_1
.LBB533_1:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB533_2:
.Ltmp3182:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
.Ltmp3183:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core12sc_port_baseD2Ev
.Ltmp3184:
	jmp	.LBB533_3
.LBB533_3:
	jmp	.LBB533_4
.LBB533_4:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.LBB533_5:
.Ltmp3185:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp3191:
	.size	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE, .Ltmp3191-_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEC2EPKciNS_14sc_port_policyE
	.cfi_endproc
.Leh_func_end533:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table533:
.Lexception533:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset642 = .Leh_func_begin533-.Leh_func_begin533 # >> Call Site 1 <<
	.long	.Lset642
.Lset643 = .Ltmp3180-.Leh_func_begin533 #   Call between .Leh_func_begin533 and .Ltmp3180
	.long	.Lset643
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset644 = .Ltmp3180-.Leh_func_begin533 # >> Call Site 2 <<
	.long	.Lset644
.Lset645 = .Ltmp3181-.Ltmp3180          #   Call between .Ltmp3180 and .Ltmp3181
	.long	.Lset645
.Lset646 = .Ltmp3182-.Leh_func_begin533 #     jumps to .Ltmp3182
	.long	.Lset646
	.byte	0                       #   On action: cleanup
.Lset647 = .Ltmp3183-.Leh_func_begin533 # >> Call Site 3 <<
	.long	.Lset647
.Lset648 = .Ltmp3184-.Ltmp3183          #   Call between .Ltmp3183 and .Ltmp3184
	.long	.Lset648
.Lset649 = .Ltmp3185-.Leh_func_begin533 #     jumps to .Ltmp3185
	.long	.Lset649
	.byte	1                       #   On action: 1
.Lset650 = .Ltmp3184-.Leh_func_begin533 # >> Call Site 4 <<
	.long	.Lset650
.Lset651 = .Leh_func_end533-.Ltmp3184   #   Call between .Ltmp3184 and .Leh_func_end533
	.long	.Lset651
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv,"axG",@progbits,_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv,comdat
	.weak	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv
	.align	16, 0x90
	.type	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv,@function
_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv: # @_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_startproc
# BB#0:
	leaq	.L.str21, %rax
	movq	%rdi, -8(%rsp)
	ret
.Ltmp3192:
	.size	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv, .Ltmp3192-_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3195:
	.cfi_def_cfa_offset 16
.Ltmp3196:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3197:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3198:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev, .Ltmp3198-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev,"axG",@progbits,_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev,comdat
	.weak	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev
	.align	16, 0x90
	.type	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev,@function
_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev: # @_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin536:
	.cfi_lsda 3, .Lexception536
# BB#0:
	pushq	%rbp
.Ltmp3204:
	.cfi_def_cfa_offset 16
.Ltmp3205:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3206:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp3199:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev
.Ltmp3200:
	jmp	.LBB536_1
.LBB536_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB536_2:
.Ltmp3201:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp3207:
	.size	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev, .Ltmp3207-_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev
	.cfi_endproc
.Leh_func_end536:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table536:
.Lexception536:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset652 = .Ltmp3199-.Leh_func_begin536 # >> Call Site 1 <<
	.long	.Lset652
.Lset653 = .Ltmp3200-.Ltmp3199          #   Call between .Ltmp3199 and .Ltmp3200
	.long	.Lset653
.Lset654 = .Ltmp3201-.Leh_func_begin536 #     jumps to .Ltmp3201
	.long	.Lset654
	.byte	0                       #   On action: cleanup
.Lset655 = .Ltmp3200-.Leh_func_begin536 # >> Call Site 2 <<
	.long	.Lset655
.Lset656 = .Leh_func_end536-.Ltmp3200   #   Call between .Ltmp3200 and .Leh_func_end536
	.long	.Lset656
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3210:
	.cfi_def_cfa_offset 16
.Ltmp3211:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3212:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3213:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev, .Ltmp3213-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC1Ev
	.cfi_endproc

	.section	.text._ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev,@function
_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev: # @_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3216:
	.cfi_def_cfa_offset 16
.Ltmp3217:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3218:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3219:
	.size	_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev, .Ltmp3219-_ZNSt6vectorIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3222:
	.cfi_def_cfa_offset 16
.Ltmp3223:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3224:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3225:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev, .Ltmp3225-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3228:
	.cfi_def_cfa_offset 16
.Ltmp3229:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3230:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3231:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev, .Ltmp3231-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC1Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev
	.align	16, 0x90
	.type	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3234:
	.cfi_def_cfa_offset 16
.Ltmp3235:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3236:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3237:
	.size	_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev, .Ltmp3237-_ZNSt12_Vector_baseIPN7sc_core15sc_signal_in_ifIbEESaIS3_EE12_Vector_implC2Ev
	.cfi_endproc

	.section	.text._ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev,"axG",@progbits,_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev,comdat
	.weak	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	.align	16, 0x90
	.type	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev,@function
_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev: # @_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3240:
	.cfi_def_cfa_offset 16
.Ltmp3241:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3242:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp3243:
	.size	_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev, .Ltmp3243-_ZNSaIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	.align	16, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp3244:
	.size	_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev, .Ltmp3244-_ZN9__gnu_cxx13new_allocatorIPN7sc_core15sc_signal_in_ifIbEEEC2Ev
	.cfi_endproc

	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	_GLOBAL__I_a,@function
_GLOBAL__I_a:                           # @_GLOBAL__I_a
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp3247:
	.cfi_def_cfa_offset 16
.Ltmp3248:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp3249:
	.cfi_def_cfa_register %rbp
	callq	__cxx_global_var_init
	callq	__cxx_global_var_init1
	popq	%rbp
	ret
.Ltmp3250:
	.size	_GLOBAL__I_a, .Ltmp3250-_GLOBAL__I_a
	.cfi_endproc

	.type	_ZStL8__ioinit,@object  # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.type	_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE,@object # @_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE
	.section	.rodata,"a",@progbits
_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE:
	.byte	1                       # 0x1
	.size	_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE, 1

	.type	_ZN7sc_coreL17api_version_checkE,@object # @_ZN7sc_coreL17api_version_checkE
	.local	_ZN7sc_coreL17api_version_checkE
	.comm	_ZN7sc_coreL17api_version_checkE,1,1
	.type	_ZTV5Timer,@object      # @_ZTV5Timer
	.section	.rodata._ZTV5Timer,"aG",@progbits,_ZTV5Timer,comdat
	.weak	_ZTV5Timer
	.align	16
_ZTV5Timer:
	.quad	0
	.quad	_ZTI5Timer
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core9sc_module4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_module17get_child_objectsEv
	.quad	_ZN5TimerD1Ev
	.quad	_ZN5TimerD0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_module25before_end_of_elaborationEv
	.quad	_ZN7sc_core9sc_module18end_of_elaborationEv
	.quad	_ZN7sc_core9sc_module19start_of_simulationEv
	.quad	_ZN7sc_core9sc_module17end_of_simulationEv
	.quad	-88
	.quad	_ZTI5Timer
	.quad	_ZThn88_N5TimerD1Ev
	.quad	_ZThn88_N5TimerD0Ev
	.size	_ZTV5Timer, 192

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	 "clk_i"
	.size	.L.str, 6

	.type	.L.str2,@object         # @.str2
.L.str2:
	.asciz	 "rst_i"
	.size	.L.str2, 6

	.type	.L.str3,@object         # @.str3
.L.str3:
	.asciz	 "en_i"
	.size	.L.str3, 5

	.type	.L.str4,@object         # @.str4
.L.str4:
	.asciz	 "addr_bi"
	.size	.L.str4, 8

	.type	.L.str5,@object         # @.str5
.L.str5:
	.asciz	 "data_bi"
	.size	.L.str5, 8

	.type	.L.str6,@object         # @.str6
.L.str6:
	.asciz	 "we_bi"
	.size	.L.str6, 6

	.type	.L.str7,@object         # @.str7
.L.str7:
	.asciz	 "data_bo"
	.size	.L.str7, 8

	.type	.L.str8,@object         # @.str8
.L.str8:
	.asciz	 "on_clock"
	.size	.L.str8, 9

	.type	_ZTVN7sc_core18sc_process_monitorE,@object # @_ZTVN7sc_core18sc_process_monitorE
	.section	.rodata._ZTVN7sc_core18sc_process_monitorE,"aG",@progbits,_ZTVN7sc_core18sc_process_monitorE,comdat
	.weak	_ZTVN7sc_core18sc_process_monitorE
	.align	16
_ZTVN7sc_core18sc_process_monitorE:
	.quad	0
	.quad	_ZTIN7sc_core18sc_process_monitorE
	.quad	_ZN7sc_core18sc_process_monitorD1Ev
	.quad	_ZN7sc_core18sc_process_monitorD0Ev
	.quad	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.size	_ZTVN7sc_core18sc_process_monitorE, 40

	.type	_ZTSN7sc_core18sc_process_monitorE,@object # @_ZTSN7sc_core18sc_process_monitorE
	.section	.rodata._ZTSN7sc_core18sc_process_monitorE,"aG",@progbits,_ZTSN7sc_core18sc_process_monitorE,comdat
	.weak	_ZTSN7sc_core18sc_process_monitorE
	.align	16
_ZTSN7sc_core18sc_process_monitorE:
	.asciz	 "N7sc_core18sc_process_monitorE"
	.size	_ZTSN7sc_core18sc_process_monitorE, 31

	.type	_ZTIN7sc_core18sc_process_monitorE,@object # @_ZTIN7sc_core18sc_process_monitorE
	.section	.rodata._ZTIN7sc_core18sc_process_monitorE,"aG",@progbits,_ZTIN7sc_core18sc_process_monitorE,comdat
	.weak	_ZTIN7sc_core18sc_process_monitorE
	.align	8
_ZTIN7sc_core18sc_process_monitorE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7sc_core18sc_process_monitorE
	.size	_ZTIN7sc_core18sc_process_monitorE, 16

	.type	_ZTS5Timer,@object      # @_ZTS5Timer
	.section	.rodata._ZTS5Timer,"aG",@progbits,_ZTS5Timer,comdat
	.weak	_ZTS5Timer
_ZTS5Timer:
	.asciz	 "5Timer"
	.size	_ZTS5Timer, 7

	.type	_ZTI5Timer,@object      # @_ZTI5Timer
	.section	.rodata._ZTI5Timer,"aG",@progbits,_ZTI5Timer,comdat
	.weak	_ZTI5Timer
	.align	16
_ZTI5Timer:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS5Timer
	.quad	_ZTIN7sc_core9sc_moduleE
	.size	_ZTI5Timer, 24

	.type	.L.str9,@object         # @.str9
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str9:
	.asciz	 "sc_module"
	.size	.L.str9, 10

	.type	.L.str10,@object        # @.str10
.L.str10:
	.asciz	 "port is not bound"
	.size	.L.str10, 18

	.type	_ZTVN5sc_dt7sc_uintILi32EEE,@object # @_ZTVN5sc_dt7sc_uintILi32EEE
	.section	.rodata._ZTVN5sc_dt7sc_uintILi32EEE,"aG",@progbits,_ZTVN5sc_dt7sc_uintILi32EEE,comdat
	.weak	_ZTVN5sc_dt7sc_uintILi32EEE
	.align	16
_ZTVN5sc_dt7sc_uintILi32EEE:
	.quad	0
	.quad	_ZTIN5sc_dt7sc_uintILi32EEE
	.quad	_ZN5sc_dt13sc_value_base17concat_clear_dataEb
	.quad	_ZNK5sc_dt12sc_uint_base15concat_get_ctrlEPji
	.quad	_ZNK5sc_dt12sc_uint_base15concat_get_dataEPji
	.quad	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.quad	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.quad	_ZN5sc_dt12sc_uint_base10concat_setExi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setERKNS_9sc_signedEi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setERKNS_11sc_unsignedEi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setEyi
	.quad	_ZN5sc_dt7sc_uintILi32EED1Ev
	.quad	_ZN5sc_dt7sc_uintILi32EED0Ev
	.size	_ZTVN5sc_dt7sc_uintILi32EEE, 104

	.type	_ZTSN5sc_dt7sc_uintILi32EEE,@object # @_ZTSN5sc_dt7sc_uintILi32EEE
	.section	.rodata._ZTSN5sc_dt7sc_uintILi32EEE,"aG",@progbits,_ZTSN5sc_dt7sc_uintILi32EEE,comdat
	.weak	_ZTSN5sc_dt7sc_uintILi32EEE
	.align	16
_ZTSN5sc_dt7sc_uintILi32EEE:
	.asciz	 "N5sc_dt7sc_uintILi32EEE"
	.size	_ZTSN5sc_dt7sc_uintILi32EEE, 24

	.type	_ZTIN5sc_dt7sc_uintILi32EEE,@object # @_ZTIN5sc_dt7sc_uintILi32EEE
	.section	.rodata._ZTIN5sc_dt7sc_uintILi32EEE,"aG",@progbits,_ZTIN5sc_dt7sc_uintILi32EEE,comdat
	.weak	_ZTIN5sc_dt7sc_uintILi32EEE
	.align	16
_ZTIN5sc_dt7sc_uintILi32EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5sc_dt7sc_uintILi32EEE
	.quad	_ZTIN5sc_dt12sc_uint_baseE
	.size	_ZTIN5sc_dt7sc_uintILi32EEE, 24

	.type	.L.str11,@object        # @.str11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str11:
	.asciz	 "/home/izoomko/Soft/xilinx/Vivado_HLS/2017.2/lnx64/tools/systemc/include/sysc/datatypes/bit/sc_proxy.h"
	.size	.L.str11, 102

	.type	_ZTVN5sc_dt5sc_bvILi13EEE,@object # @_ZTVN5sc_dt5sc_bvILi13EEE
	.section	.rodata._ZTVN5sc_dt5sc_bvILi13EEE,"aG",@progbits,_ZTVN5sc_dt5sc_bvILi13EEE,comdat
	.weak	_ZTVN5sc_dt5sc_bvILi13EEE
	.align	16
_ZTVN5sc_dt5sc_bvILi13EEE:
	.quad	0
	.quad	_ZTIN5sc_dt5sc_bvILi13EEE
	.quad	_ZN5sc_dt5sc_bvILi13EED1Ev
	.quad	_ZN5sc_dt5sc_bvILi13EED0Ev
	.size	_ZTVN5sc_dt5sc_bvILi13EEE, 32

	.type	_ZTSN5sc_dt5sc_bvILi13EEE,@object # @_ZTSN5sc_dt5sc_bvILi13EEE
	.section	.rodata._ZTSN5sc_dt5sc_bvILi13EEE,"aG",@progbits,_ZTSN5sc_dt5sc_bvILi13EEE,comdat
	.weak	_ZTSN5sc_dt5sc_bvILi13EEE
	.align	16
_ZTSN5sc_dt5sc_bvILi13EEE:
	.asciz	 "N5sc_dt5sc_bvILi13EEE"
	.size	_ZTSN5sc_dt5sc_bvILi13EEE, 22

	.type	_ZTSN5sc_dt10sc_bv_baseE,@object # @_ZTSN5sc_dt10sc_bv_baseE
	.section	.rodata._ZTSN5sc_dt10sc_bv_baseE,"aG",@progbits,_ZTSN5sc_dt10sc_bv_baseE,comdat
	.weak	_ZTSN5sc_dt10sc_bv_baseE
	.align	16
_ZTSN5sc_dt10sc_bv_baseE:
	.asciz	 "N5sc_dt10sc_bv_baseE"
	.size	_ZTSN5sc_dt10sc_bv_baseE, 21

	.type	_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE,@object # @_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE
	.section	.rodata._ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE,"aG",@progbits,_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE,comdat
	.weak	_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE
	.align	16
_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE:
	.asciz	 "N5sc_dt8sc_proxyINS_10sc_bv_baseEEE"
	.size	_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE, 36

	.type	_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE,@object # @_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE
	.section	.rodata._ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE,"aG",@progbits,_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE,comdat
	.weak	_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE
	.align	8
_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN5sc_dt8sc_proxyINS_10sc_bv_baseEEE
	.size	_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE, 16

	.type	_ZTIN5sc_dt10sc_bv_baseE,@object # @_ZTIN5sc_dt10sc_bv_baseE
	.section	.rodata._ZTIN5sc_dt10sc_bv_baseE,"aG",@progbits,_ZTIN5sc_dt10sc_bv_baseE,comdat
	.weak	_ZTIN5sc_dt10sc_bv_baseE
	.align	16
_ZTIN5sc_dt10sc_bv_baseE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5sc_dt10sc_bv_baseE
	.quad	_ZTIN5sc_dt8sc_proxyINS_10sc_bv_baseEEE
	.size	_ZTIN5sc_dt10sc_bv_baseE, 24

	.type	_ZTIN5sc_dt5sc_bvILi13EEE,@object # @_ZTIN5sc_dt5sc_bvILi13EEE
	.section	.rodata._ZTIN5sc_dt5sc_bvILi13EEE,"aG",@progbits,_ZTIN5sc_dt5sc_bvILi13EEE,comdat
	.weak	_ZTIN5sc_dt5sc_bvILi13EEE
	.align	16
_ZTIN5sc_dt5sc_bvILi13EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5sc_dt5sc_bvILi13EEE
	.quad	_ZTIN5sc_dt10sc_bv_baseE
	.size	_ZTIN5sc_dt5sc_bvILi13EEE, 24

	.type	_ZTVN7sc_core8sc_inoutItEE,@object # @_ZTVN7sc_core8sc_inoutItEE
	.section	.rodata._ZTVN7sc_core8sc_inoutItEE,"aG",@progbits,_ZTVN7sc_core8sc_inoutItEE,comdat
	.weak	_ZTVN7sc_core8sc_inoutItEE
	.align	16
_ZTVN7sc_core8sc_inoutItEE:
	.quad	0
	.quad	_ZTIN7sc_core8sc_inoutItEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core8sc_inoutItE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core8sc_inoutItED1Ev
	.quad	_ZN7sc_core8sc_inoutItED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core8sc_inoutItE18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.size	_ZTVN7sc_core8sc_inoutItEE, 248

	.type	_ZTSN7sc_core8sc_inoutItEE,@object # @_ZTSN7sc_core8sc_inoutItEE
	.section	.rodata._ZTSN7sc_core8sc_inoutItEE,"aG",@progbits,_ZTSN7sc_core8sc_inoutItEE,comdat
	.weak	_ZTSN7sc_core8sc_inoutItEE
	.align	16
_ZTSN7sc_core8sc_inoutItEE:
	.asciz	 "N7sc_core8sc_inoutItEE"
	.size	_ZTSN7sc_core8sc_inoutItEE, 23

	.type	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE, 75

	.type	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE, 50

	.type	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.size	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	_ZTIN7sc_core8sc_inoutItEE,@object # @_ZTIN7sc_core8sc_inoutItEE
	.section	.rodata._ZTIN7sc_core8sc_inoutItEE,"aG",@progbits,_ZTIN7sc_core8sc_inoutItEE,comdat
	.weak	_ZTIN7sc_core8sc_inoutItEE
	.align	16
_ZTIN7sc_core8sc_inoutItEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core8sc_inoutItEE
	.quad	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTIN7sc_core8sc_inoutItEE, 24

	.type	.L.str12,@object        # @.str12
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str12:
	.asciz	 "iface_p != 0"
	.size	.L.str12, 13

	.type	.L.str13,@object        # @.str13
.L.str13:
	.asciz	 "/home/izoomko/Soft/xilinx/Vivado_HLS/2017.2/lnx64/tools/systemc/include/sysc/communication/sc_port.h"
	.size	.L.str13, 101

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_inout_if<unsigned short> >::make_sensitive(sc_method_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_inout_if<unsigned short>]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, 197

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_inout_if<unsigned short> >::make_sensitive(sc_thread_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_inout_if<unsigned short>]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, 197

	.type	_ZTSN7sc_core15sc_signal_in_ifItEE,@object # @_ZTSN7sc_core15sc_signal_in_ifItEE
	.section	.rodata._ZTSN7sc_core15sc_signal_in_ifItEE,"aG",@progbits,_ZTSN7sc_core15sc_signal_in_ifItEE,comdat
	.weak	_ZTSN7sc_core15sc_signal_in_ifItEE
	.align	16
_ZTSN7sc_core15sc_signal_in_ifItEE:
	.asciz	 "N7sc_core15sc_signal_in_ifItEE"
	.size	_ZTSN7sc_core15sc_signal_in_ifItEE, 31

	.type	_ZTIN7sc_core15sc_signal_in_ifItEE,@object # @_ZTIN7sc_core15sc_signal_in_ifItEE
	.section	.rodata._ZTIN7sc_core15sc_signal_in_ifItEE,"aG",@progbits,_ZTIN7sc_core15sc_signal_in_ifItEE,comdat
	.weak	_ZTIN7sc_core15sc_signal_in_ifItEE
	.align	16
_ZTIN7sc_core15sc_signal_in_ifItEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core15sc_signal_in_ifItEE
	.long	0                       # 0x0
	.long	1                       # 0x1
	.quad	_ZTIN7sc_core12sc_interfaceE
	.quad	-12285                  # 0xffffffffffffd003
	.size	_ZTIN7sc_core15sc_signal_in_ifItEE, 40

	.type	_ZTSN7sc_core18sc_signal_inout_ifItEE,@object # @_ZTSN7sc_core18sc_signal_inout_ifItEE
	.section	.rodata._ZTSN7sc_core18sc_signal_inout_ifItEE,"aG",@progbits,_ZTSN7sc_core18sc_signal_inout_ifItEE,comdat
	.weak	_ZTSN7sc_core18sc_signal_inout_ifItEE
	.align	16
_ZTSN7sc_core18sc_signal_inout_ifItEE:
	.asciz	 "N7sc_core18sc_signal_inout_ifItEE"
	.size	_ZTSN7sc_core18sc_signal_inout_ifItEE, 34

	.type	_ZTSN7sc_core18sc_signal_write_ifItEE,@object # @_ZTSN7sc_core18sc_signal_write_ifItEE
	.section	.rodata._ZTSN7sc_core18sc_signal_write_ifItEE,"aG",@progbits,_ZTSN7sc_core18sc_signal_write_ifItEE,comdat
	.weak	_ZTSN7sc_core18sc_signal_write_ifItEE
	.align	16
_ZTSN7sc_core18sc_signal_write_ifItEE:
	.asciz	 "N7sc_core18sc_signal_write_ifItEE"
	.size	_ZTSN7sc_core18sc_signal_write_ifItEE, 34

	.type	_ZTIN7sc_core18sc_signal_write_ifItEE,@object # @_ZTIN7sc_core18sc_signal_write_ifItEE
	.section	.rodata._ZTIN7sc_core18sc_signal_write_ifItEE,"aG",@progbits,_ZTIN7sc_core18sc_signal_write_ifItEE,comdat
	.weak	_ZTIN7sc_core18sc_signal_write_ifItEE
	.align	16
_ZTIN7sc_core18sc_signal_write_ifItEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core18sc_signal_write_ifItEE
	.long	0                       # 0x0
	.long	1                       # 0x1
	.quad	_ZTIN7sc_core12sc_interfaceE
	.quad	-12285                  # 0xffffffffffffd003
	.size	_ZTIN7sc_core18sc_signal_write_ifItEE, 40

	.type	_ZTIN7sc_core18sc_signal_inout_ifItEE,@object # @_ZTIN7sc_core18sc_signal_inout_ifItEE
	.section	.rodata._ZTIN7sc_core18sc_signal_inout_ifItEE,"aG",@progbits,_ZTIN7sc_core18sc_signal_inout_ifItEE,comdat
	.weak	_ZTIN7sc_core18sc_signal_inout_ifItEE
	.align	16
_ZTIN7sc_core18sc_signal_inout_ifItEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core18sc_signal_inout_ifItEE
	.long	2                       # 0x2
	.long	2                       # 0x2
	.quad	_ZTIN7sc_core15sc_signal_in_ifItEE
	.quad	2                       # 0x2
	.quad	_ZTIN7sc_core18sc_signal_write_ifItEE
	.quad	2050                    # 0x802
	.size	_ZTIN7sc_core18sc_signal_inout_ifItEE, 56

	.type	.L.str14,@object        # @.str14
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str14:
	.asciz	 "iface != 0"
	.size	.L.str14, 11

	.type	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE,@object # @__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_inout_if<unsigned short> >::add_interface(sc_core::sc_interface *) [IF = sc_core::sc_signal_inout_if<unsigned short>]"
	.size	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE, 169

	.type	.L.str15,@object        # @.str15
.L.str15:
	.asciz	 "interface already bound to port"
	.size	.L.str15, 32

	.type	.L.str16,@object        # @.str16
.L.str16:
	.asciz	 "vector::_M_insert_aux"
	.size	.L.str16, 22

	.type	.L.str17,@object        # @.str17
.L.str17:
	.asciz	 "sc_inout"
	.size	.L.str17, 9

	.type	_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,@object # @_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.section	.rodata._ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,"aG",@progbits,_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE,comdat
	.weak	_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.align	16
_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE:
	.quad	0
	.quad	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core12sc_port_base4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED1Ev
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.size	_ZTVN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEEE, 248

	.type	.L.str18,@object        # @.str18
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str18:
	.asciz	 "sc_port_base"
	.size	.L.str18, 13

	.type	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,@object # @_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.section	.rodata._ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,"aG",@progbits,_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,comdat
	.weak	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.align	16
_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE:
	.quad	0
	.quad	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED1Ev
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE, 272

	.type	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,@object # @_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.section	.rodata._ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,"aG",@progbits,_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,comdat
	.weak	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.align	16
_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE:
	.asciz	 "N7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE"
	.size	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE, 39

	.type	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, 91

	.type	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE, 66

	.type	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.size	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,@object # @_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.section	.rodata._ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,"aG",@progbits,_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE,comdat
	.weak	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.align	16
_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi4EEEEE, 24

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<sc_dt::sc_bv<4> > >::make_sensitive(sc_method_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<sc_dt::sc_bv<4> >]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, 195

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<sc_dt::sc_bv<4> > >::make_sensitive(sc_thread_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<sc_dt::sc_bv<4> >]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, 195

	.type	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE,@object # @_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE
	.section	.rodata._ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE,"aG",@progbits,_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE,comdat
	.weak	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE
	.align	16
_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE:
	.asciz	 "N7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE"
	.size	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE, 50

	.type	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE,@object # @_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE
	.section	.rodata._ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE,"aG",@progbits,_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE,comdat
	.weak	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE
	.align	16
_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE
	.long	0                       # 0x0
	.long	1                       # 0x1
	.quad	_ZTIN7sc_core12sc_interfaceE
	.quad	-12285                  # 0xffffffffffffd003
	.size	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEE, 40

	.type	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE,@object # @__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<sc_dt::sc_bv<4> > >::add_interface(sc_core::sc_interface *) [IF = sc_core::sc_signal_in_if<sc_dt::sc_bv<4> >]"
	.size	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE, 167

	.type	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, 94

	.type	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE, 69

	.type	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.size	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	.L.str19,@object        # @.str19
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str19:
	.asciz	 "sc_in"
	.size	.L.str19, 6

	.type	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,@object # @_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.section	.rodata._ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,"aG",@progbits,_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE,comdat
	.weak	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.align	16
_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE:
	.quad	0
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core12sc_port_base4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED1Ev
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_
	.size	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEEE, 248

	.type	_ZTVN7sc_core5sc_inIiEE,@object # @_ZTVN7sc_core5sc_inIiEE
	.section	.rodata._ZTVN7sc_core5sc_inIiEE,"aG",@progbits,_ZTVN7sc_core5sc_inIiEE,comdat
	.weak	_ZTVN7sc_core5sc_inIiEE
	.align	16
_ZTVN7sc_core5sc_inIiEE:
	.quad	0
	.quad	_ZTIN7sc_core5sc_inIiEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core5sc_inIiE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core5sc_inIiED1Ev
	.quad	_ZN7sc_core5sc_inIiED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.quad	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core5sc_inIiE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core5sc_inIiE18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core5sc_inIiE4bindERNS_15sc_signal_in_ifIiEE
	.quad	_ZN7sc_core5sc_inIiE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.quad	_ZN7sc_core5sc_inIiE4bindERKNS_15sc_signal_in_ifIiEE
	.quad	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZN7sc_core5sc_inIiE4bindERNS_7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTVN7sc_core5sc_inIiEE, 272

	.type	_ZTSN7sc_core5sc_inIiEE,@object # @_ZTSN7sc_core5sc_inIiEE
	.section	.rodata._ZTSN7sc_core5sc_inIiEE,"aG",@progbits,_ZTSN7sc_core5sc_inIiEE,comdat
	.weak	_ZTSN7sc_core5sc_inIiEE
	.align	16
_ZTSN7sc_core5sc_inIiEE:
	.asciz	 "N7sc_core5sc_inIiEE"
	.size	_ZTSN7sc_core5sc_inIiEE, 20

	.type	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE, 72

	.type	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE, 47

	.type	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.size	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	_ZTIN7sc_core5sc_inIiEE,@object # @_ZTIN7sc_core5sc_inIiEE
	.section	.rodata._ZTIN7sc_core5sc_inIiEE,"aG",@progbits,_ZTIN7sc_core5sc_inIiEE,comdat
	.weak	_ZTIN7sc_core5sc_inIiEE
	.align	16
_ZTIN7sc_core5sc_inIiEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core5sc_inIiEE
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTIN7sc_core5sc_inIiEE, 24

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<int> >::make_sensitive(sc_method_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<int>]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, 169

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<int> >::make_sensitive(sc_thread_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<int>]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, 169

	.type	_ZTSN7sc_core15sc_signal_in_ifIiEE,@object # @_ZTSN7sc_core15sc_signal_in_ifIiEE
	.section	.rodata._ZTSN7sc_core15sc_signal_in_ifIiEE,"aG",@progbits,_ZTSN7sc_core15sc_signal_in_ifIiEE,comdat
	.weak	_ZTSN7sc_core15sc_signal_in_ifIiEE
	.align	16
_ZTSN7sc_core15sc_signal_in_ifIiEE:
	.asciz	 "N7sc_core15sc_signal_in_ifIiEE"
	.size	_ZTSN7sc_core15sc_signal_in_ifIiEE, 31

	.type	_ZTIN7sc_core15sc_signal_in_ifIiEE,@object # @_ZTIN7sc_core15sc_signal_in_ifIiEE
	.section	.rodata._ZTIN7sc_core15sc_signal_in_ifIiEE,"aG",@progbits,_ZTIN7sc_core15sc_signal_in_ifIiEE,comdat
	.weak	_ZTIN7sc_core15sc_signal_in_ifIiEE
	.align	16
_ZTIN7sc_core15sc_signal_in_ifIiEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core15sc_signal_in_ifIiEE
	.long	0                       # 0x0
	.long	1                       # 0x1
	.quad	_ZTIN7sc_core12sc_interfaceE
	.quad	-12285                  # 0xffffffffffffd003
	.size	_ZTIN7sc_core15sc_signal_in_ifIiEE, 40

	.type	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE,@object # @__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<int> >::add_interface(sc_core::sc_interface *) [IF = sc_core::sc_signal_in_if<int>]"
	.size	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE, 141

	.type	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE, 75

	.type	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE, 50

	.type	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIiEEEE
	.size	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIiEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,@object # @_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.section	.rodata._ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,"aG",@progbits,_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE,comdat
	.weak	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.align	16
_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE:
	.quad	0
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core12sc_port_base4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED1Ev
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_
	.size	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEEE, 248

	.type	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,@object # @_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.section	.rodata._ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,"aG",@progbits,_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,comdat
	.weak	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.align	16
_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE:
	.quad	0
	.quad	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED1Ev
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_15sc_signal_in_ifIS3_EE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_9sc_port_bINS_15sc_signal_in_ifIS3_EEEE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERKNS_15sc_signal_in_ifIS3_EE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_15sc_signal_in_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEE4bindERNS_7sc_portINS_18sc_signal_inout_ifIS3_EELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTVN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE, 272

	.type	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,@object # @_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.section	.rodata._ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,"aG",@progbits,_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,comdat
	.weak	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.align	16
_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE:
	.asciz	 "N7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE"
	.size	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE, 40

	.type	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, 92

	.type	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE, 67

	.type	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.size	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,@object # @_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.section	.rodata._ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,"aG",@progbits,_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE,comdat
	.weak	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.align	16
_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.size	_ZTIN7sc_core5sc_inIN5sc_dt5sc_bvILi13EEEEE, 24

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<sc_dt::sc_bv<13> > >::make_sensitive(sc_method_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<sc_dt::sc_bv<13> >]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, 197

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<sc_dt::sc_bv<13> > >::make_sensitive(sc_thread_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<sc_dt::sc_bv<13> >]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, 197

	.type	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE,@object # @_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE
	.section	.rodata._ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE,"aG",@progbits,_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE,comdat
	.weak	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE
	.align	16
_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE:
	.asciz	 "N7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE"
	.size	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE, 51

	.type	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE,@object # @_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE
	.section	.rodata._ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE,"aG",@progbits,_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE,comdat
	.weak	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE
	.align	16
_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE
	.long	0                       # 0x0
	.long	1                       # 0x1
	.quad	_ZTIN7sc_core12sc_interfaceE
	.quad	-12285                  # 0xffffffffffffd003
	.size	_ZTIN7sc_core15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEE, 40

	.type	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE,@object # @__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<sc_dt::sc_bv<13> > >::add_interface(sc_core::sc_interface *) [IF = sc_core::sc_signal_in_if<sc_dt::sc_bv<13> >]"
	.size	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE, 169

	.type	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, 95

	.type	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE, 70

	.type	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE, 24

	.type	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.size	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, 24

	.type	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,@object # @_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.section	.rodata._ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,"aG",@progbits,_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE,comdat
	.weak	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.align	16
_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE:
	.quad	0
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core12sc_port_base4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED1Ev
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_
	.size	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEEE, 248

	.type	_ZTVN7sc_core6sc_outItEE,@object # @_ZTVN7sc_core6sc_outItEE
	.section	.rodata._ZTVN7sc_core6sc_outItEE,"aG",@progbits,_ZTVN7sc_core6sc_outItEE,comdat
	.weak	_ZTVN7sc_core6sc_outItEE
	.align	16
_ZTVN7sc_core6sc_outItEE:
	.quad	0
	.quad	_ZTIN7sc_core6sc_outItEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core6sc_outItE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core6sc_outItED1Ev
	.quad	_ZN7sc_core6sc_outItED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core8sc_inoutItE18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.size	_ZTVN7sc_core6sc_outItEE, 248

	.type	_ZTSN7sc_core6sc_outItEE,@object # @_ZTSN7sc_core6sc_outItEE
	.section	.rodata._ZTSN7sc_core6sc_outItEE,"aG",@progbits,_ZTSN7sc_core6sc_outItEE,comdat
	.weak	_ZTSN7sc_core6sc_outItEE
	.align	16
_ZTSN7sc_core6sc_outItEE:
	.asciz	 "N7sc_core6sc_outItEE"
	.size	_ZTSN7sc_core6sc_outItEE, 21

	.type	_ZTIN7sc_core6sc_outItEE,@object # @_ZTIN7sc_core6sc_outItEE
	.section	.rodata._ZTIN7sc_core6sc_outItEE,"aG",@progbits,_ZTIN7sc_core6sc_outItEE,comdat
	.weak	_ZTIN7sc_core6sc_outItEE
	.align	16
_ZTIN7sc_core6sc_outItEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core6sc_outItEE
	.quad	_ZTIN7sc_core8sc_inoutItEE
	.size	_ZTIN7sc_core6sc_outItEE, 24

	.type	.L.str20,@object        # @.str20
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str20:
	.asciz	 "sc_out"
	.size	.L.str20, 7

	.type	_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE:
	.quad	0
	.quad	_ZTIN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED1Ev
	.quad	_ZN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifItEEE4bindERS3_
	.size	_ZTVN7sc_core7sc_portINS_18sc_signal_inout_ifItEELi1ELNS_14sc_port_policyE0EEE, 248

	.type	.L.str21,@object        # @.str21
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str21:
	.asciz	 "sc_port"
	.size	.L.str21, 8

	.type	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE:
	.quad	0
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS5_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEEE4bindERS6_
	.size	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi4EEEEELi1ELNS_14sc_port_policyE0EEE, 248

	.type	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE:
	.quad	0
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED1Ev
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIiEEE4bindERS3_
	.size	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIiEELi1ELNS_14sc_port_policyE0EEE, 248

	.type	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE:
	.quad	0
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED1Ev
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS5_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEEE4bindERS6_
	.size	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIN5sc_dt5sc_bvILi13EEEEELi1ELNS_14sc_port_policyE0EEE, 248

	.type	_ZTVN5sc_dt10sc_bv_baseE,@object # @_ZTVN5sc_dt10sc_bv_baseE
	.section	.rodata._ZTVN5sc_dt10sc_bv_baseE,"aG",@progbits,_ZTVN5sc_dt10sc_bv_baseE,comdat
	.weak	_ZTVN5sc_dt10sc_bv_baseE
	.align	16
_ZTVN5sc_dt10sc_bv_baseE:
	.quad	0
	.quad	_ZTIN5sc_dt10sc_bv_baseE
	.quad	_ZN5sc_dt10sc_bv_baseD1Ev
	.quad	_ZN5sc_dt10sc_bv_baseD0Ev
	.size	_ZTVN5sc_dt10sc_bv_baseE, 32

	.type	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,@object # @_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.section	.rodata._ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,"aG",@progbits,_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,comdat
	.weak	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.align	16
_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE:
	.quad	0
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core12sc_port_base4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED1Ev
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_
	.size	_ZTVN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE, 248

	.type	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,@object # @_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.section	.rodata._ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,"aG",@progbits,_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,comdat
	.weak	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.align	16
_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE:
	.asciz	 "N7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE"
	.size	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE, 47

	.type	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,@object # @_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.section	.rodata._ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,"aG",@progbits,_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE,comdat
	.weak	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.align	16
_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.quad	_ZTIN7sc_core12sc_port_baseE
	.size	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE, 24

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<bool> >::make_sensitive(sc_method_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<bool>]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE, 171

	.type	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE,@object # @__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<bool> >::make_sensitive(sc_thread_handle, sc_core::sc_event_finder *) const [IF = sc_core::sc_signal_in_if<bool>]"
	.size	.L__PRETTY_FUNCTION__._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE, 171

	.type	_ZTSN7sc_core15sc_signal_in_ifIbEE,@object # @_ZTSN7sc_core15sc_signal_in_ifIbEE
	.section	.rodata._ZTSN7sc_core15sc_signal_in_ifIbEE,"aG",@progbits,_ZTSN7sc_core15sc_signal_in_ifIbEE,comdat
	.weak	_ZTSN7sc_core15sc_signal_in_ifIbEE
	.align	16
_ZTSN7sc_core15sc_signal_in_ifIbEE:
	.asciz	 "N7sc_core15sc_signal_in_ifIbEE"
	.size	_ZTSN7sc_core15sc_signal_in_ifIbEE, 31

	.type	_ZTIN7sc_core15sc_signal_in_ifIbEE,@object # @_ZTIN7sc_core15sc_signal_in_ifIbEE
	.section	.rodata._ZTIN7sc_core15sc_signal_in_ifIbEE,"aG",@progbits,_ZTIN7sc_core15sc_signal_in_ifIbEE,comdat
	.weak	_ZTIN7sc_core15sc_signal_in_ifIbEE
	.align	16
_ZTIN7sc_core15sc_signal_in_ifIbEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7sc_core15sc_signal_in_ifIbEE
	.long	0                       # 0x0
	.long	1                       # 0x1
	.quad	_ZTIN7sc_core12sc_interfaceE
	.quad	-12285                  # 0xffffffffffffd003
	.size	_ZTIN7sc_core15sc_signal_in_ifIbEE, 40

	.type	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE,@object # @__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE:
	.asciz	 "virtual void sc_core::sc_port_b<sc_core::sc_signal_in_if<bool> >::add_interface(sc_core::sc_interface *) [IF = sc_core::sc_signal_in_if<bool>]"
	.size	.L__PRETTY_FUNCTION__._ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE, 143

	.type	_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,@object # @_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.section	.rodata._ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,"aG",@progbits,_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,comdat
	.weak	_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.align	16
_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE:
	.quad	0
	.quad	_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.quad	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED1Ev
	.quad	_ZN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEED0Ev
	.quad	_ZNK7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEE10find_eventEPNS_12sc_interfaceE
	.size	_ZTVN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE, 40

	.type	_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,@object # @_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.section	.rodata._ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,"aG",@progbits,_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,comdat
	.weak	_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.align	16
_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE:
	.asciz	 "N7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE"
	.size	_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE, 56

	.type	_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,@object # @_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.section	.rodata._ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,"aG",@progbits,_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE,comdat
	.weak	_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.align	16
_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE
	.quad	_ZTIN7sc_core15sc_event_finderE
	.size	_ZTIN7sc_core17sc_event_finder_tINS_15sc_signal_in_ifIbEEEE, 24

	.type	.L.str22,@object        # @.str22
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str22:
	.asciz	 "m_references_n != 0"
	.size	.L.str22, 20

	.type	.L.str23,@object        # @.str23
.L.str23:
	.asciz	 "/home/izoomko/Soft/xilinx/Vivado_HLS/2017.2/lnx64/tools/systemc/include/sysc/kernel/sc_process.h"
	.size	.L.str23, 97

	.type	.L__PRETTY_FUNCTION__._ZN7sc_core12sc_process_b19reference_incrementEv,@object # @__PRETTY_FUNCTION__._ZN7sc_core12sc_process_b19reference_incrementEv
.L__PRETTY_FUNCTION__._ZN7sc_core12sc_process_b19reference_incrementEv:
	.asciz	 "void sc_core::sc_process_b::reference_increment()"
	.size	.L__PRETTY_FUNCTION__._ZN7sc_core12sc_process_b19reference_incrementEv, 50

	.type	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE:
	.quad	0
	.quad	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZNK7sc_core9sc_object5printERSo
	.quad	_ZNK7sc_core9sc_object4dumpERSo
	.quad	_ZNK7sc_core9sc_object5traceEPNS_13sc_trace_fileE
	.quad	_ZNK7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EE4kindEv
	.quad	_ZNK7sc_core9sc_object16get_child_eventsEv
	.quad	_ZNK7sc_core9sc_object17get_child_objectsEv
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED1Ev
	.quad	_ZN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EED0Ev
	.quad	_ZN7sc_core9sc_object15add_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object16add_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object18remove_child_eventEPNS_8sc_eventE
	.quad	_ZN7sc_core9sc_object19remove_child_objectEPS0_
	.quad	_ZN7sc_core9sc_object19orphan_child_eventsEv
	.quad	_ZN7sc_core9sc_object20orphan_child_objectsEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13get_interfaceEv
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE5vbindERNS_12sc_port_baseE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE13add_interfaceEPNS_12sc_interfaceE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE15interface_countEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE11if_typenameEv
	.quad	_ZN7sc_core12sc_port_base25before_end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base18end_of_elaborationEv
	.quad	_ZN7sc_core12sc_port_base19start_of_simulationEv
	.quad	_ZN7sc_core12sc_port_base17end_of_simulationEv
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_thread_processEPNS_15sc_event_finderE
	.quad	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE14make_sensitiveEPNS_17sc_method_processEPNS_15sc_event_finderE
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS2_
	.quad	_ZN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEE4bindERS3_
	.size	_ZTVN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE, 248

	.type	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE:
	.asciz	 "N7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE"
	.size	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE, 72

	.type	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,@object # @_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.section	.rodata._ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,"aG",@progbits,_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE,comdat
	.weak	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.align	16
_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE
	.quad	_ZTIN7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEE
	.size	_ZTIN7sc_core7sc_portINS_15sc_signal_in_ifIbEELi1ELNS_14sc_port_policyE0EEE, 24

	.section	.ctors,"aw",@progbits
	.align	8
	.quad	_GLOBAL__I_a

	.globl	_ZN5TimerC1EN7sc_core14sc_module_nameE
_ZN5TimerC1EN7sc_core14sc_module_nameE = _ZN5TimerC2EN7sc_core14sc_module_nameE
	.section	".note.GNU-stack","",@progbits

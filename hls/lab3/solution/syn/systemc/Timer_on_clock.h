// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Timer_on_clock_HH_
#define _Timer_on_clock_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Timer_on_clock : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > rst_i;
    sc_in< sc_logic > en_i;
    sc_in< sc_lv<13> > addr_bi;
    sc_in< sc_lv<32> > data_bi;
    sc_out< sc_lv<16> > data_bo;
    sc_out< sc_logic > data_bo_ap_vld;
    sc_in< sc_lv<32> > Timer_m_tmr_V_i;
    sc_out< sc_lv<32> > Timer_m_tmr_V_o;
    sc_out< sc_logic > Timer_m_tmr_V_o_ap_vld;
    sc_in< sc_lv<32> > Timer_m_tval_V_i;
    sc_out< sc_lv<32> > Timer_m_tval_V_o;
    sc_out< sc_logic > Timer_m_tval_V_o_ap_vld;
    sc_in< sc_lv<32> > Timer_m_tconf_V_i;
    sc_out< sc_lv<32> > Timer_m_tconf_V_o;
    sc_out< sc_logic > Timer_m_tconf_V_o_ap_vld;


    // Module declarations
    Timer_on_clock(sc_module_name name);
    SC_HAS_PROCESS(Timer_on_clock);

    ~Timer_on_clock();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > Timer_m_tval_V_loc_3_phi_fu_165_p14;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > val_V_read_fu_148_p2;
    sc_signal< sc_lv<1> > tmp_read_fu_88_p2;
    sc_signal< sc_lv<32> > p_1_fu_252_p1;
    sc_signal< sc_lv<1> > tmp_5_read_fu_106_p2;
    sc_signal< sc_lv<32> > storemerge2_fu_238_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_190_p3;
    sc_signal< sc_lv<32> > p_s_fu_262_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_198_p2;
    sc_signal< sc_lv<32> > tmp_1_fu_204_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_218_p2;
    sc_signal< sc_lv<32> > tmp_4_fu_224_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_186_p1;
    sc_signal< sc_lv<32> > tmp_4_s_fu_230_p3;
    sc_signal< sc_lv<32> > Timer_m_tmr_V_load_t_fu_210_p3;
    sc_signal< sc_lv<16> > tmp_7_fu_248_p1;
    sc_signal< sc_lv<16> > tmp_6_fu_258_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_condition_70;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<13> ap_const_lv13_8;
    static const sc_lv<13> ap_const_lv13_4;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_Timer_m_tconf_V_o();
    void thread_Timer_m_tconf_V_o_ap_vld();
    void thread_Timer_m_tmr_V_load_t_fu_210_p3();
    void thread_Timer_m_tmr_V_o();
    void thread_Timer_m_tmr_V_o_ap_vld();
    void thread_Timer_m_tval_V_loc_3_phi_fu_165_p14();
    void thread_Timer_m_tval_V_o();
    void thread_Timer_m_tval_V_o_ap_vld();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state1();
    void thread_ap_condition_70();
    void thread_data_bo();
    void thread_data_bo_ap_vld();
    void thread_p_1_fu_252_p1();
    void thread_p_s_fu_262_p1();
    void thread_storemerge2_fu_238_p3();
    void thread_tmp_10_fu_190_p3();
    void thread_tmp_1_fu_204_p2();
    void thread_tmp_4_fu_224_p2();
    void thread_tmp_4_s_fu_230_p3();
    void thread_tmp_5_read_fu_106_p2();
    void thread_tmp_6_fu_258_p1();
    void thread_tmp_7_fu_248_p1();
    void thread_tmp_8_fu_186_p1();
    void thread_tmp_9_fu_198_p2();
    void thread_tmp_read_fu_88_p2();
    void thread_tmp_s_fu_218_p2();
    void thread_val_V_read_fu_148_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

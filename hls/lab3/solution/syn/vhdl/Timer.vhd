-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Timer is
port (
    clk_i : IN STD_LOGIC;
    rst_i : IN STD_LOGIC;
    en_i : IN STD_LOGIC;
    addr_bi : IN STD_LOGIC_VECTOR (12 downto 0);
    data_bi : IN STD_LOGIC_VECTOR (31 downto 0);
    we_bi : IN STD_LOGIC_VECTOR (3 downto 0);
    data_bo : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of Timer is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Timer,hls_ip_2017_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.294000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=330,HLS_SYN_LUT=282}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal Timer_ssdm_thread_load_fu_90_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal StgValue_16_Timer_on_clock_fu_66_data_bo : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_16_Timer_on_clock_fu_66_data_bo_ap_vld : STD_LOGIC;
    signal StgValue_16_Timer_on_clock_fu_66_Timer_m_tmr_V_o : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_16_Timer_on_clock_fu_66_Timer_m_tmr_V_o_ap_vld : STD_LOGIC;
    signal StgValue_16_Timer_on_clock_fu_66_Timer_m_tval_V_o : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_16_Timer_on_clock_fu_66_Timer_m_tval_V_o_ap_vld : STD_LOGIC;
    signal StgValue_16_Timer_on_clock_fu_66_Timer_m_tconf_V_o : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_16_Timer_on_clock_fu_66_Timer_m_tconf_V_o_ap_vld : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal Timer_m_tmr_V : STD_LOGIC_VECTOR (31 downto 0);
    signal Timer_m_tval_V : STD_LOGIC_VECTOR (31 downto 0);
    signal Timer_m_tconf_V : STD_LOGIC_VECTOR (31 downto 0);

    component Timer_on_clock IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        rst_i : IN STD_LOGIC;
        en_i : IN STD_LOGIC;
        addr_bi : IN STD_LOGIC_VECTOR (12 downto 0);
        data_bi : IN STD_LOGIC_VECTOR (31 downto 0);
        data_bo : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_bo_ap_vld : OUT STD_LOGIC;
        Timer_m_tmr_V_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Timer_m_tmr_V_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Timer_m_tmr_V_o_ap_vld : OUT STD_LOGIC;
        Timer_m_tval_V_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Timer_m_tval_V_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Timer_m_tval_V_o_ap_vld : OUT STD_LOGIC;
        Timer_m_tconf_V_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Timer_m_tconf_V_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Timer_m_tconf_V_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    StgValue_16_Timer_on_clock_fu_66 : component Timer_on_clock
    port map (
        ap_clk => clk_i,
        ap_rst => ap_rst,
        rst_i => rst_i,
        en_i => en_i,
        addr_bi => addr_bi,
        data_bi => data_bi,
        data_bo => StgValue_16_Timer_on_clock_fu_66_data_bo,
        data_bo_ap_vld => StgValue_16_Timer_on_clock_fu_66_data_bo_ap_vld,
        Timer_m_tmr_V_i => Timer_m_tmr_V,
        Timer_m_tmr_V_o => StgValue_16_Timer_on_clock_fu_66_Timer_m_tmr_V_o,
        Timer_m_tmr_V_o_ap_vld => StgValue_16_Timer_on_clock_fu_66_Timer_m_tmr_V_o_ap_vld,
        Timer_m_tval_V_i => Timer_m_tval_V,
        Timer_m_tval_V_o => StgValue_16_Timer_on_clock_fu_66_Timer_m_tval_V_o,
        Timer_m_tval_V_o_ap_vld => StgValue_16_Timer_on_clock_fu_66_Timer_m_tval_V_o_ap_vld,
        Timer_m_tconf_V_i => Timer_m_tconf_V,
        Timer_m_tconf_V_o => StgValue_16_Timer_on_clock_fu_66_Timer_m_tconf_V_o,
        Timer_m_tconf_V_o_ap_vld => StgValue_16_Timer_on_clock_fu_66_Timer_m_tconf_V_o_ap_vld);





    Timer_m_tconf_V_assign_proc : process(clk_i)
    begin
        if (clk_i'event and clk_i =  '1') then
            if ((ap_const_logic_1 = StgValue_16_Timer_on_clock_fu_66_Timer_m_tconf_V_o_ap_vld)) then 
                Timer_m_tconf_V <= StgValue_16_Timer_on_clock_fu_66_Timer_m_tconf_V_o;
            end if; 
        end if;
    end process;


    Timer_m_tmr_V_assign_proc : process(clk_i)
    begin
        if (clk_i'event and clk_i =  '1') then
            if ((ap_const_logic_1 = StgValue_16_Timer_on_clock_fu_66_Timer_m_tmr_V_o_ap_vld)) then 
                Timer_m_tmr_V <= StgValue_16_Timer_on_clock_fu_66_Timer_m_tmr_V_o;
            end if; 
        end if;
    end process;


    Timer_m_tval_V_assign_proc : process(clk_i)
    begin
        if (clk_i'event and clk_i =  '1') then
            if ((ap_const_logic_1 = StgValue_16_Timer_on_clock_fu_66_Timer_m_tval_V_o_ap_vld)) then 
                Timer_m_tval_V <= StgValue_16_Timer_on_clock_fu_66_Timer_m_tval_V_o;
            end if; 
        end if;
    end process;


    data_bo_assign_proc : process(clk_i)
    begin
        if (clk_i'event and clk_i =  '1') then
            if ((ap_const_logic_1 = StgValue_16_Timer_on_clock_fu_66_data_bo_ap_vld)) then 
                data_bo <= StgValue_16_Timer_on_clock_fu_66_data_bo;
            end if; 
        end if;
    end process;

    Timer_ssdm_thread_load_fu_90_p1 <= ap_const_lv1_0;
    ap_CS_fsm <= ap_const_lv2_0;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Timer_on_clock (
        ap_clk,
        ap_rst,
        rst_i,
        en_i,
        addr_bi,
        data_bi,
        data_bo,
        data_bo_ap_vld,
        Timer_m_tmr_V_i,
        Timer_m_tmr_V_o,
        Timer_m_tmr_V_o_ap_vld,
        Timer_m_tval_V_i,
        Timer_m_tval_V_o,
        Timer_m_tval_V_o_ap_vld,
        Timer_m_tconf_V_i,
        Timer_m_tconf_V_o,
        Timer_m_tconf_V_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;


input   ap_clk;
input   ap_rst;
input   rst_i;
input   en_i;
input  [12:0] addr_bi;
input  [31:0] data_bi;
output  [31:0] data_bo;
output   data_bo_ap_vld;
input  [31:0] Timer_m_tmr_V_i;
output  [31:0] Timer_m_tmr_V_o;
output   Timer_m_tmr_V_o_ap_vld;
input  [31:0] Timer_m_tval_V_i;
output  [31:0] Timer_m_tval_V_o;
output   Timer_m_tval_V_o_ap_vld;
input  [31:0] Timer_m_tconf_V_i;
output  [31:0] Timer_m_tconf_V_o;
output   Timer_m_tconf_V_o_ap_vld;

reg data_bo_ap_vld;
reg[31:0] Timer_m_tmr_V_o;
reg Timer_m_tmr_V_o_ap_vld;
reg[31:0] Timer_m_tval_V_o;
reg Timer_m_tval_V_o_ap_vld;
reg[31:0] Timer_m_tconf_V_o;
reg Timer_m_tconf_V_o_ap_vld;

reg   [31:0] v_V_phi_fu_167_p14;
wire   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [12:0] val_V_read_fu_148_p2;
wire   [0:0] tmp_read_fu_88_p2;
wire   [0:0] tmp_5_read_fu_106_p2;
wire   [31:0] storemerge2_fu_242_p3;
wire   [0:0] tmp_7_fu_194_p3;
wire   [0:0] tmp_9_fu_202_p2;
wire   [31:0] tmp_1_fu_208_p2;
wire   [0:0] tmp_s_fu_222_p2;
wire   [31:0] tmp_4_fu_228_p2;
wire   [0:0] tmp_6_fu_190_p1;
wire   [31:0] tmp_4_s_fu_234_p3;
wire   [31:0] Timer_m_tmr_V_load_t_fu_214_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_condition_70;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if (((val_V_read_fu_148_p2 == 13'd8) & (tmp_read_fu_88_p2 == 1'd1))) begin
            Timer_m_tconf_V_o = data_bi;
        end else if (((tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2))) begin
            Timer_m_tconf_V_o = 32'd0;
        end else begin
            Timer_m_tconf_V_o = Timer_m_tconf_V_i;
        end
    end else begin
        Timer_m_tconf_V_o = Timer_m_tconf_V_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_148_p2 == 13'd8) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2)))) begin
        Timer_m_tconf_V_o_ap_vld = 1'b1;
    end else begin
        Timer_m_tconf_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if (((val_V_read_fu_148_p2 == 13'd0) & (tmp_read_fu_88_p2 == 1'd1))) begin
            Timer_m_tmr_V_o = data_bi;
        end else if (((tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2))) begin
            Timer_m_tmr_V_o = 32'd0;
        end else begin
            Timer_m_tmr_V_o = Timer_m_tmr_V_i;
        end
    end else begin
        Timer_m_tmr_V_o = Timer_m_tmr_V_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_148_p2 == 13'd0) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2)))) begin
        Timer_m_tmr_V_o_ap_vld = 1'b1;
    end else begin
        Timer_m_tmr_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if (((val_V_read_fu_148_p2 == 13'd4) & (tmp_read_fu_88_p2 == 1'd1))) begin
            Timer_m_tval_V_o = data_bi;
        end else if (((tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2))) begin
            Timer_m_tval_V_o = 32'd0;
        end else if ((ap_condition_70 == 1'b1)) begin
            Timer_m_tval_V_o = storemerge2_fu_242_p3;
        end else begin
            Timer_m_tval_V_o = Timer_m_tval_V_i;
        end
    end else begin
        Timer_m_tval_V_o = Timer_m_tval_V_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_148_p2 == 13'd4) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2)) | ((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd0 == tmp_5_read_fu_106_p2) & (1'd0 == tmp_7_fu_194_p3)))) begin
        Timer_m_tval_V_o_ap_vld = 1'b1;
    end else begin
        Timer_m_tval_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_bo_ap_vld = 1'b1;
    end else begin
        data_bo_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd0 == tmp_5_read_fu_106_p2) & (1'd0 == tmp_7_fu_194_p3))) begin
        v_V_phi_fu_167_p14 = storemerge2_fu_242_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd1 == tmp_5_read_fu_106_p2))) begin
        v_V_phi_fu_167_p14 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_148_p2 == 13'd4) & (tmp_read_fu_88_p2 == 1'd1))) begin
        v_V_phi_fu_167_p14 = data_bi;
    end else if ((((1'b1 == ap_CS_fsm_state1) & ~(val_V_read_fu_148_p2 == 13'd8) & ~(val_V_read_fu_148_p2 == 13'd4) & ~(val_V_read_fu_148_p2 == 13'd0) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_148_p2 == 13'd8) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_148_p2 == 13'd0) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (tmp_read_fu_88_p2 == 1'd0) & (1'd0 == tmp_5_read_fu_106_p2) & (1'd1 == tmp_7_fu_194_p3)))) begin
        v_V_phi_fu_167_p14 = Timer_m_tval_V_i;
    end else begin
        v_V_phi_fu_167_p14 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Timer_m_tmr_V_load_t_fu_214_p3 = ((tmp_9_fu_202_p2[0:0] === 1'b1) ? Timer_m_tmr_V_i : tmp_1_fu_208_p2);

assign ap_CS_fsm = ap_ST_fsm_state1;

assign ap_CS_fsm_state1 = ap_ST_fsm_state1[32'd0];

always @ (*) begin
    ap_condition_70 = ((tmp_read_fu_88_p2 == 1'd0) & (1'd0 == tmp_5_read_fu_106_p2) & (1'd0 == tmp_7_fu_194_p3));
end

assign data_bo = v_V_phi_fu_167_p14;

assign storemerge2_fu_242_p3 = ((tmp_6_fu_190_p1[0:0] === 1'b1) ? tmp_4_s_fu_234_p3 : Timer_m_tmr_V_load_t_fu_214_p3);

assign tmp_1_fu_208_p2 = ($signed(Timer_m_tval_V_i) + $signed(32'd4294967295));

assign tmp_4_fu_228_p2 = (Timer_m_tval_V_i + 32'd1);

assign tmp_4_s_fu_234_p3 = ((tmp_s_fu_222_p2[0:0] === 1'b1) ? tmp_4_fu_228_p2 : 32'd0);

assign tmp_5_read_fu_106_p2 = rst_i;

assign tmp_6_fu_190_p1 = Timer_m_tconf_V_i[0:0];

assign tmp_7_fu_194_p3 = Timer_m_tconf_V_i[32'd1];

assign tmp_9_fu_202_p2 = ((Timer_m_tval_V_i == 32'd0) ? 1'b1 : 1'b0);

assign tmp_read_fu_88_p2 = en_i;

assign tmp_s_fu_222_p2 = ((Timer_m_tval_V_i < Timer_m_tmr_V_i) ? 1'b1 : 1'b0);

assign val_V_read_fu_148_p2 = addr_bi;

endmodule //Timer_on_clock
